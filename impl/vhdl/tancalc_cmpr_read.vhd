-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tancalc_cmpr_read is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cmpr_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    cmpr_local_ce0 : OUT STD_LOGIC;
    cmpr_local_we0 : OUT STD_LOGIC;
    cmpr_local_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cmprpop_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    cmprpop_local_ce0 : OUT STD_LOGIC;
    cmprpop_local_we0 : OUT STD_LOGIC;
    cmprpop_local_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    chunk_num : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of tancalc_cmpr_read is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cmpr_num_0_reg_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln26_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_926 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state4_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln26_reg_926_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmpr_num_fu_203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmpr_num_reg_930 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln27_2_fu_227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_2_reg_940 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln7_44_fu_748_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln7_44_reg_945 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln7_59_fu_894_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln7_59_reg_950 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal i_0_reg_157 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln23_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_cmpr_num_0_phi_fu_172_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln24_fu_192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln27_1_fu_218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln7_60_fu_906_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln27_fu_209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln27_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln27_fu_223_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_236_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_272_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_284_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_320_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_356_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_392_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_428_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_440_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_464_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_488_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_560_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_584_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_596_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln7_fu_232_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_61_fu_244_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_fu_608_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_63_fu_268_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_62_fu_256_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_31_fu_618_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_91_fu_614_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_92_fu_624_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_32_fu_628_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_65_fu_292_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_64_fu_280_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_33_fu_638_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_67_fu_316_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_66_fu_304_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_34_fu_648_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_94_fu_644_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_95_fu_654_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_35_fu_658_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_93_fu_634_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_96_fu_664_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln7_36_fu_668_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_69_fu_340_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_68_fu_328_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_37_fu_678_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_71_fu_364_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_70_fu_352_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_38_fu_688_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_98_fu_684_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_99_fu_694_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_39_fu_698_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_73_fu_388_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_72_fu_376_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_40_fu_708_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_75_fu_412_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_74_fu_400_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_41_fu_718_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_101_fu_714_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_102_fu_724_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_42_fu_728_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_100_fu_704_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_103_fu_734_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln7_43_fu_738_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_97_fu_674_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln7_104_fu_744_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln7_77_fu_436_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_76_fu_424_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_45_fu_754_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_79_fu_460_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_78_fu_448_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_46_fu_764_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_106_fu_760_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_107_fu_770_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_47_fu_774_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_81_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_80_fu_472_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_48_fu_784_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_83_fu_508_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_82_fu_496_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_49_fu_794_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_109_fu_790_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_110_fu_800_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_50_fu_804_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_108_fu_780_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_111_fu_810_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln7_51_fu_814_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_85_fu_532_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_84_fu_520_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_52_fu_824_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_87_fu_556_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_86_fu_544_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_53_fu_834_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_113_fu_830_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_114_fu_840_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_54_fu_844_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_89_fu_580_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_88_fu_568_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_55_fu_854_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_121_fu_604_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_90_fu_592_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln7_56_fu_864_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_116_fu_860_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_117_fu_870_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln7_57_fu_874_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_115_fu_850_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_118_fu_880_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln7_58_fu_884_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_112_fu_820_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln7_119_fu_890_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln7_105_fu_900_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln7_120_fu_903_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cmpr_num_0_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                cmpr_num_0_reg_168 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln26_reg_926 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                cmpr_num_0_reg_168 <= cmpr_num_reg_930;
            end if; 
        end if;
    end process;

    i_0_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_0_reg_157 <= i_fu_186_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_157 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln26_reg_926 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln7_44_reg_945 <= add_ln7_44_fu_748_p2;
                add_ln7_59_reg_950 <= add_ln7_59_fu_894_p2;
                    zext_ln27_2_reg_940(7 downto 0) <= zext_ln27_2_fu_227_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                cmpr_num_reg_930 <= cmpr_num_fu_203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln26_reg_926 <= icmp_ln26_fu_197_p2;
                icmp_ln26_reg_926_pp1_iter1_reg <= icmp_ln26_reg_926;
            end if;
        end if;
    end process;
    zext_ln27_2_reg_940(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln26_fu_197_p2, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, icmp_ln23_fu_180_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln26_fu_197_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((icmp_ln26_fu_197_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln27_fu_213_p2 <= std_logic_vector(unsigned(chunk_num) + unsigned(zext_ln27_fu_209_p1));
    add_ln7_31_fu_618_p2 <= std_logic_vector(unsigned(zext_ln7_63_fu_268_p1) + unsigned(zext_ln7_62_fu_256_p1));
    add_ln7_32_fu_628_p2 <= std_logic_vector(unsigned(zext_ln7_91_fu_614_p1) + unsigned(zext_ln7_92_fu_624_p1));
    add_ln7_33_fu_638_p2 <= std_logic_vector(unsigned(zext_ln7_65_fu_292_p1) + unsigned(zext_ln7_64_fu_280_p1));
    add_ln7_34_fu_648_p2 <= std_logic_vector(unsigned(zext_ln7_67_fu_316_p1) + unsigned(zext_ln7_66_fu_304_p1));
    add_ln7_35_fu_658_p2 <= std_logic_vector(unsigned(zext_ln7_94_fu_644_p1) + unsigned(zext_ln7_95_fu_654_p1));
    add_ln7_36_fu_668_p2 <= std_logic_vector(unsigned(zext_ln7_93_fu_634_p1) + unsigned(zext_ln7_96_fu_664_p1));
    add_ln7_37_fu_678_p2 <= std_logic_vector(unsigned(zext_ln7_69_fu_340_p1) + unsigned(zext_ln7_68_fu_328_p1));
    add_ln7_38_fu_688_p2 <= std_logic_vector(unsigned(zext_ln7_71_fu_364_p1) + unsigned(zext_ln7_70_fu_352_p1));
    add_ln7_39_fu_698_p2 <= std_logic_vector(unsigned(zext_ln7_98_fu_684_p1) + unsigned(zext_ln7_99_fu_694_p1));
    add_ln7_40_fu_708_p2 <= std_logic_vector(unsigned(zext_ln7_73_fu_388_p1) + unsigned(zext_ln7_72_fu_376_p1));
    add_ln7_41_fu_718_p2 <= std_logic_vector(unsigned(zext_ln7_75_fu_412_p1) + unsigned(zext_ln7_74_fu_400_p1));
    add_ln7_42_fu_728_p2 <= std_logic_vector(unsigned(zext_ln7_101_fu_714_p1) + unsigned(zext_ln7_102_fu_724_p1));
    add_ln7_43_fu_738_p2 <= std_logic_vector(unsigned(zext_ln7_100_fu_704_p1) + unsigned(zext_ln7_103_fu_734_p1));
    add_ln7_44_fu_748_p2 <= std_logic_vector(unsigned(zext_ln7_97_fu_674_p1) + unsigned(zext_ln7_104_fu_744_p1));
    add_ln7_45_fu_754_p2 <= std_logic_vector(unsigned(zext_ln7_77_fu_436_p1) + unsigned(zext_ln7_76_fu_424_p1));
    add_ln7_46_fu_764_p2 <= std_logic_vector(unsigned(zext_ln7_79_fu_460_p1) + unsigned(zext_ln7_78_fu_448_p1));
    add_ln7_47_fu_774_p2 <= std_logic_vector(unsigned(zext_ln7_106_fu_760_p1) + unsigned(zext_ln7_107_fu_770_p1));
    add_ln7_48_fu_784_p2 <= std_logic_vector(unsigned(zext_ln7_81_fu_484_p1) + unsigned(zext_ln7_80_fu_472_p1));
    add_ln7_49_fu_794_p2 <= std_logic_vector(unsigned(zext_ln7_83_fu_508_p1) + unsigned(zext_ln7_82_fu_496_p1));
    add_ln7_50_fu_804_p2 <= std_logic_vector(unsigned(zext_ln7_109_fu_790_p1) + unsigned(zext_ln7_110_fu_800_p1));
    add_ln7_51_fu_814_p2 <= std_logic_vector(unsigned(zext_ln7_108_fu_780_p1) + unsigned(zext_ln7_111_fu_810_p1));
    add_ln7_52_fu_824_p2 <= std_logic_vector(unsigned(zext_ln7_85_fu_532_p1) + unsigned(zext_ln7_84_fu_520_p1));
    add_ln7_53_fu_834_p2 <= std_logic_vector(unsigned(zext_ln7_87_fu_556_p1) + unsigned(zext_ln7_86_fu_544_p1));
    add_ln7_54_fu_844_p2 <= std_logic_vector(unsigned(zext_ln7_113_fu_830_p1) + unsigned(zext_ln7_114_fu_840_p1));
    add_ln7_55_fu_854_p2 <= std_logic_vector(unsigned(zext_ln7_89_fu_580_p1) + unsigned(zext_ln7_88_fu_568_p1));
    add_ln7_56_fu_864_p2 <= std_logic_vector(unsigned(zext_ln7_121_fu_604_p1) + unsigned(zext_ln7_90_fu_592_p1));
    add_ln7_57_fu_874_p2 <= std_logic_vector(unsigned(zext_ln7_116_fu_860_p1) + unsigned(zext_ln7_117_fu_870_p1));
    add_ln7_58_fu_884_p2 <= std_logic_vector(unsigned(zext_ln7_115_fu_850_p1) + unsigned(zext_ln7_118_fu_880_p1));
    add_ln7_59_fu_894_p2 <= std_logic_vector(unsigned(zext_ln7_112_fu_820_p1) + unsigned(zext_ln7_119_fu_890_p1));
    add_ln7_60_fu_906_p2 <= std_logic_vector(unsigned(zext_ln7_105_fu_900_p1) + unsigned(zext_ln7_120_fu_903_p1));
    add_ln7_fu_608_p2 <= std_logic_vector(unsigned(zext_ln7_fu_232_p1) + unsigned(zext_ln7_61_fu_244_p1));
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state4_assign_proc : process(icmp_ln26_fu_197_p2)
    begin
        if ((icmp_ln26_fu_197_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_cmpr_num_0_phi_fu_172_p4_assign_proc : process(cmpr_num_0_reg_168, icmp_ln26_reg_926, ap_CS_fsm_pp1_stage0, cmpr_num_reg_930, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((icmp_ln26_reg_926 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_cmpr_num_0_phi_fu_172_p4 <= cmpr_num_reg_930;
        else 
            ap_phi_mux_cmpr_num_0_phi_fu_172_p4 <= cmpr_num_0_reg_168;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_local_address0 <= zext_ln27_2_fu_227_p1(7 - 1 downto 0);

    cmpr_local_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            cmpr_local_ce0 <= ap_const_logic_1;
        else 
            cmpr_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_local_d0 <= input_r_q0;

    cmpr_local_we0_assign_proc : process(icmp_ln26_reg_926, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln26_reg_926 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            cmpr_local_we0 <= ap_const_logic_1;
        else 
            cmpr_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_num_fu_203_p2 <= std_logic_vector(unsigned(ap_phi_mux_cmpr_num_0_phi_fu_172_p4) + unsigned(ap_const_lv8_1));

    cmprpop_local_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln27_2_reg_940, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, zext_ln24_fu_192_p1)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            cmprpop_local_address0 <= zext_ln27_2_reg_940(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cmprpop_local_address0 <= zext_ln24_fu_192_p1(7 - 1 downto 0);
        else 
            cmprpop_local_address0 <= "XXXXXXX";
        end if; 
    end process;


    cmprpop_local_ce0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            cmprpop_local_ce0 <= ap_const_logic_1;
        else 
            cmprpop_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cmprpop_local_d0_assign_proc : process(ap_CS_fsm_state2, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, add_ln7_60_fu_906_p2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            cmprpop_local_d0 <= add_ln7_60_fu_906_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cmprpop_local_d0 <= ap_const_lv6_0;
        else 
            cmprpop_local_d0 <= "XXXXXX";
        end if; 
    end process;


    cmprpop_local_we0_assign_proc : process(ap_CS_fsm_state2, ap_block_pp1_stage0_11001, icmp_ln26_reg_926_pp1_iter1_reg, ap_enable_reg_pp1_iter2, icmp_ln23_fu_180_p2)
    begin
        if ((((icmp_ln26_reg_926_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((icmp_ln23_fu_180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            cmprpop_local_we0 <= ap_const_logic_1;
        else 
            cmprpop_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_186_p2 <= std_logic_vector(unsigned(i_0_reg_157) + unsigned(ap_const_lv8_1));
    icmp_ln23_fu_180_p2 <= "1" when (i_0_reg_157 = ap_const_lv8_80) else "0";
    icmp_ln26_fu_197_p2 <= "1" when (ap_phi_mux_cmpr_num_0_phi_fu_172_p4 = ap_const_lv8_80) else "0";
    input_r_address0 <= zext_ln27_1_fu_218_p1(15 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_31_fu_248_p3 <= input_r_q0(2 downto 2);
    tmp_32_fu_260_p3 <= input_r_q0(3 downto 3);
    tmp_33_fu_272_p3 <= input_r_q0(4 downto 4);
    tmp_34_fu_284_p3 <= input_r_q0(5 downto 5);
    tmp_35_fu_296_p3 <= input_r_q0(6 downto 6);
    tmp_36_fu_308_p3 <= input_r_q0(7 downto 7);
    tmp_37_fu_320_p3 <= input_r_q0(8 downto 8);
    tmp_38_fu_332_p3 <= input_r_q0(9 downto 9);
    tmp_39_fu_344_p3 <= input_r_q0(10 downto 10);
    tmp_40_fu_356_p3 <= input_r_q0(11 downto 11);
    tmp_41_fu_368_p3 <= input_r_q0(12 downto 12);
    tmp_42_fu_380_p3 <= input_r_q0(13 downto 13);
    tmp_43_fu_392_p3 <= input_r_q0(14 downto 14);
    tmp_44_fu_404_p3 <= input_r_q0(15 downto 15);
    tmp_45_fu_416_p3 <= input_r_q0(16 downto 16);
    tmp_46_fu_428_p3 <= input_r_q0(17 downto 17);
    tmp_47_fu_440_p3 <= input_r_q0(18 downto 18);
    tmp_48_fu_452_p3 <= input_r_q0(19 downto 19);
    tmp_49_fu_464_p3 <= input_r_q0(20 downto 20);
    tmp_50_fu_476_p3 <= input_r_q0(21 downto 21);
    tmp_51_fu_488_p3 <= input_r_q0(22 downto 22);
    tmp_52_fu_500_p3 <= input_r_q0(23 downto 23);
    tmp_53_fu_512_p3 <= input_r_q0(24 downto 24);
    tmp_54_fu_524_p3 <= input_r_q0(25 downto 25);
    tmp_55_fu_536_p3 <= input_r_q0(26 downto 26);
    tmp_56_fu_548_p3 <= input_r_q0(27 downto 27);
    tmp_57_fu_560_p3 <= input_r_q0(28 downto 28);
    tmp_58_fu_572_p3 <= input_r_q0(29 downto 29);
    tmp_59_fu_584_p3 <= input_r_q0(30 downto 30);
    tmp_60_fu_596_p3 <= input_r_q0(31 downto 31);
    tmp_fu_236_p3 <= input_r_q0(1 downto 1);
    trunc_ln27_fu_223_p1 <= input_r_q0(1 - 1 downto 0);
    zext_ln24_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_157),64));
    zext_ln27_1_fu_218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln27_fu_213_p2),64));
    zext_ln27_2_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmpr_num_0_reg_168),64));
    zext_ln27_fu_209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_cmpr_num_0_phi_fu_172_p4),32));
    zext_ln7_100_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_39_fu_698_p2),4));
    zext_ln7_101_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_40_fu_708_p2),3));
    zext_ln7_102_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_41_fu_718_p2),3));
    zext_ln7_103_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_42_fu_728_p2),4));
    zext_ln7_104_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_43_fu_738_p2),5));
    zext_ln7_105_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_44_reg_945),6));
    zext_ln7_106_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_45_fu_754_p2),3));
    zext_ln7_107_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_46_fu_764_p2),3));
    zext_ln7_108_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_47_fu_774_p2),4));
    zext_ln7_109_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_48_fu_784_p2),3));
    zext_ln7_110_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_49_fu_794_p2),3));
    zext_ln7_111_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_50_fu_804_p2),4));
    zext_ln7_112_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_51_fu_814_p2),5));
    zext_ln7_113_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_52_fu_824_p2),3));
    zext_ln7_114_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_53_fu_834_p2),3));
    zext_ln7_115_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_54_fu_844_p2),4));
    zext_ln7_116_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_55_fu_854_p2),3));
    zext_ln7_117_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_56_fu_864_p2),3));
    zext_ln7_118_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_57_fu_874_p2),4));
    zext_ln7_119_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_58_fu_884_p2),5));
    zext_ln7_120_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_59_reg_950),6));
    zext_ln7_121_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_596_p3),2));
    zext_ln7_61_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_236_p3),2));
    zext_ln7_62_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_248_p3),2));
    zext_ln7_63_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_260_p3),2));
    zext_ln7_64_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_272_p3),2));
    zext_ln7_65_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_284_p3),2));
    zext_ln7_66_fu_304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_296_p3),2));
    zext_ln7_67_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_308_p3),2));
    zext_ln7_68_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_320_p3),2));
    zext_ln7_69_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_332_p3),2));
    zext_ln7_70_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_344_p3),2));
    zext_ln7_71_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_356_p3),2));
    zext_ln7_72_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_368_p3),2));
    zext_ln7_73_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_380_p3),2));
    zext_ln7_74_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_392_p3),2));
    zext_ln7_75_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_404_p3),2));
    zext_ln7_76_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_416_p3),2));
    zext_ln7_77_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_428_p3),2));
    zext_ln7_78_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_440_p3),2));
    zext_ln7_79_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_452_p3),2));
    zext_ln7_80_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_464_p3),2));
    zext_ln7_81_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_476_p3),2));
    zext_ln7_82_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_488_p3),2));
    zext_ln7_83_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_500_p3),2));
    zext_ln7_84_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_512_p3),2));
    zext_ln7_85_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_524_p3),2));
    zext_ln7_86_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_536_p3),2));
    zext_ln7_87_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_548_p3),2));
    zext_ln7_88_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_560_p3),2));
    zext_ln7_89_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_572_p3),2));
    zext_ln7_90_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_584_p3),2));
    zext_ln7_91_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_fu_608_p2),3));
    zext_ln7_92_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_31_fu_618_p2),3));
    zext_ln7_93_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_32_fu_628_p2),4));
    zext_ln7_94_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_33_fu_638_p2),3));
    zext_ln7_95_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_34_fu_648_p2),3));
    zext_ln7_96_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_35_fu_658_p2),4));
    zext_ln7_97_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_36_fu_668_p2),5));
    zext_ln7_98_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_37_fu_678_p2),3));
    zext_ln7_99_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln7_38_fu_688_p2),3));
    zext_ln7_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln27_fu_223_p1),2));
end behav;
