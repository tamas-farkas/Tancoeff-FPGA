// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "tancalc_calculation.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic tancalc_calculation::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic tancalc_calculation::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> tancalc_calculation::ap_ST_fsm_state1 = "1";
const sc_lv<3> tancalc_calculation::ap_ST_fsm_state2 = "10";
const sc_lv<3> tancalc_calculation::ap_ST_fsm_state3 = "100";
const sc_lv<32> tancalc_calculation::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> tancalc_calculation::ap_const_lv32_1 = "1";
const sc_lv<32> tancalc_calculation::ap_const_lv32_2 = "10";
const bool tancalc_calculation::ap_const_boolean_0 = false;
const sc_lv<1> tancalc_calculation::ap_const_lv1_1 = "1";
const sc_lv<1> tancalc_calculation::ap_const_lv1_0 = "0";
const bool tancalc_calculation::ap_const_boolean_1 = true;

tancalc_calculation::tancalc_calculation(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_popcntdata_fu_376 = new tancalc_popcntdata("grp_popcntdata_fu_376");
    grp_popcntdata_fu_376->ap_clk(ap_clk);
    grp_popcntdata_fu_376->ap_rst(ap_rst);
    grp_popcntdata_fu_376->ap_start(grp_popcntdata_fu_376_ap_start);
    grp_popcntdata_fu_376->ap_done(grp_popcntdata_fu_376_ap_done);
    grp_popcntdata_fu_376->ap_idle(grp_popcntdata_fu_376_ap_idle);
    grp_popcntdata_fu_376->ap_ready(grp_popcntdata_fu_376_ap_ready);
    grp_popcntdata_fu_376->x_V(and_ln1355_reg_1248);
    grp_popcntdata_fu_376->ap_return(grp_popcntdata_fu_376_ap_return);
    grp_popcntdata_fu_381 = new tancalc_popcntdata("grp_popcntdata_fu_381");
    grp_popcntdata_fu_381->ap_clk(ap_clk);
    grp_popcntdata_fu_381->ap_rst(ap_rst);
    grp_popcntdata_fu_381->ap_start(grp_popcntdata_fu_381_ap_start);
    grp_popcntdata_fu_381->ap_done(grp_popcntdata_fu_381_ap_done);
    grp_popcntdata_fu_381->ap_idle(grp_popcntdata_fu_381_ap_idle);
    grp_popcntdata_fu_381->ap_ready(grp_popcntdata_fu_381_ap_ready);
    grp_popcntdata_fu_381->x_V(and_ln1355_1_reg_1258);
    grp_popcntdata_fu_381->ap_return(grp_popcntdata_fu_381_ap_return);
    grp_popcntdata_fu_386 = new tancalc_popcntdata("grp_popcntdata_fu_386");
    grp_popcntdata_fu_386->ap_clk(ap_clk);
    grp_popcntdata_fu_386->ap_rst(ap_rst);
    grp_popcntdata_fu_386->ap_start(grp_popcntdata_fu_386_ap_start);
    grp_popcntdata_fu_386->ap_done(grp_popcntdata_fu_386_ap_done);
    grp_popcntdata_fu_386->ap_idle(grp_popcntdata_fu_386_ap_idle);
    grp_popcntdata_fu_386->ap_ready(grp_popcntdata_fu_386_ap_ready);
    grp_popcntdata_fu_386->x_V(and_ln1355_2_reg_1268);
    grp_popcntdata_fu_386->ap_return(grp_popcntdata_fu_386_ap_return);
    grp_popcntdata_fu_391 = new tancalc_popcntdata("grp_popcntdata_fu_391");
    grp_popcntdata_fu_391->ap_clk(ap_clk);
    grp_popcntdata_fu_391->ap_rst(ap_rst);
    grp_popcntdata_fu_391->ap_start(grp_popcntdata_fu_391_ap_start);
    grp_popcntdata_fu_391->ap_done(grp_popcntdata_fu_391_ap_done);
    grp_popcntdata_fu_391->ap_idle(grp_popcntdata_fu_391_ap_idle);
    grp_popcntdata_fu_391->ap_ready(grp_popcntdata_fu_391_ap_ready);
    grp_popcntdata_fu_391->x_V(and_ln1355_3_reg_1278);
    grp_popcntdata_fu_391->ap_return(grp_popcntdata_fu_391_ap_return);
    grp_popcntdata_fu_396 = new tancalc_popcntdata("grp_popcntdata_fu_396");
    grp_popcntdata_fu_396->ap_clk(ap_clk);
    grp_popcntdata_fu_396->ap_rst(ap_rst);
    grp_popcntdata_fu_396->ap_start(grp_popcntdata_fu_396_ap_start);
    grp_popcntdata_fu_396->ap_done(grp_popcntdata_fu_396_ap_done);
    grp_popcntdata_fu_396->ap_idle(grp_popcntdata_fu_396_ap_idle);
    grp_popcntdata_fu_396->ap_ready(grp_popcntdata_fu_396_ap_ready);
    grp_popcntdata_fu_396->x_V(and_ln1355_4_reg_1288);
    grp_popcntdata_fu_396->ap_return(grp_popcntdata_fu_396_ap_return);
    grp_popcntdata_fu_401 = new tancalc_popcntdata("grp_popcntdata_fu_401");
    grp_popcntdata_fu_401->ap_clk(ap_clk);
    grp_popcntdata_fu_401->ap_rst(ap_rst);
    grp_popcntdata_fu_401->ap_start(grp_popcntdata_fu_401_ap_start);
    grp_popcntdata_fu_401->ap_done(grp_popcntdata_fu_401_ap_done);
    grp_popcntdata_fu_401->ap_idle(grp_popcntdata_fu_401_ap_idle);
    grp_popcntdata_fu_401->ap_ready(grp_popcntdata_fu_401_ap_ready);
    grp_popcntdata_fu_401->x_V(and_ln1355_5_reg_1298);
    grp_popcntdata_fu_401->ap_return(grp_popcntdata_fu_401_ap_return);
    grp_popcntdata_fu_406 = new tancalc_popcntdata("grp_popcntdata_fu_406");
    grp_popcntdata_fu_406->ap_clk(ap_clk);
    grp_popcntdata_fu_406->ap_rst(ap_rst);
    grp_popcntdata_fu_406->ap_start(grp_popcntdata_fu_406_ap_start);
    grp_popcntdata_fu_406->ap_done(grp_popcntdata_fu_406_ap_done);
    grp_popcntdata_fu_406->ap_idle(grp_popcntdata_fu_406_ap_idle);
    grp_popcntdata_fu_406->ap_ready(grp_popcntdata_fu_406_ap_ready);
    grp_popcntdata_fu_406->x_V(and_ln1355_6_reg_1308);
    grp_popcntdata_fu_406->ap_return(grp_popcntdata_fu_406_ap_return);
    grp_popcntdata_fu_411 = new tancalc_popcntdata("grp_popcntdata_fu_411");
    grp_popcntdata_fu_411->ap_clk(ap_clk);
    grp_popcntdata_fu_411->ap_rst(ap_rst);
    grp_popcntdata_fu_411->ap_start(grp_popcntdata_fu_411_ap_start);
    grp_popcntdata_fu_411->ap_done(grp_popcntdata_fu_411_ap_done);
    grp_popcntdata_fu_411->ap_idle(grp_popcntdata_fu_411_ap_idle);
    grp_popcntdata_fu_411->ap_ready(grp_popcntdata_fu_411_ap_ready);
    grp_popcntdata_fu_411->x_V(and_ln1355_7_reg_1318);
    grp_popcntdata_fu_411->ap_return(grp_popcntdata_fu_411_ap_return);
    grp_popcntdata_fu_416 = new tancalc_popcntdata("grp_popcntdata_fu_416");
    grp_popcntdata_fu_416->ap_clk(ap_clk);
    grp_popcntdata_fu_416->ap_rst(ap_rst);
    grp_popcntdata_fu_416->ap_start(grp_popcntdata_fu_416_ap_start);
    grp_popcntdata_fu_416->ap_done(grp_popcntdata_fu_416_ap_done);
    grp_popcntdata_fu_416->ap_idle(grp_popcntdata_fu_416_ap_idle);
    grp_popcntdata_fu_416->ap_ready(grp_popcntdata_fu_416_ap_ready);
    grp_popcntdata_fu_416->x_V(and_ln1355_8_reg_1328);
    grp_popcntdata_fu_416->ap_return(grp_popcntdata_fu_416_ap_return);
    grp_popcntdata_fu_421 = new tancalc_popcntdata("grp_popcntdata_fu_421");
    grp_popcntdata_fu_421->ap_clk(ap_clk);
    grp_popcntdata_fu_421->ap_rst(ap_rst);
    grp_popcntdata_fu_421->ap_start(grp_popcntdata_fu_421_ap_start);
    grp_popcntdata_fu_421->ap_done(grp_popcntdata_fu_421_ap_done);
    grp_popcntdata_fu_421->ap_idle(grp_popcntdata_fu_421_ap_idle);
    grp_popcntdata_fu_421->ap_ready(grp_popcntdata_fu_421_ap_ready);
    grp_popcntdata_fu_421->x_V(and_ln1355_9_reg_1338);
    grp_popcntdata_fu_421->ap_return(grp_popcntdata_fu_421_ap_return);
    grp_popcntdata_fu_426 = new tancalc_popcntdata("grp_popcntdata_fu_426");
    grp_popcntdata_fu_426->ap_clk(ap_clk);
    grp_popcntdata_fu_426->ap_rst(ap_rst);
    grp_popcntdata_fu_426->ap_start(grp_popcntdata_fu_426_ap_start);
    grp_popcntdata_fu_426->ap_done(grp_popcntdata_fu_426_ap_done);
    grp_popcntdata_fu_426->ap_idle(grp_popcntdata_fu_426_ap_idle);
    grp_popcntdata_fu_426->ap_ready(grp_popcntdata_fu_426_ap_ready);
    grp_popcntdata_fu_426->x_V(and_ln1355_10_reg_1348);
    grp_popcntdata_fu_426->ap_return(grp_popcntdata_fu_426_ap_return);
    grp_popcntdata_fu_431 = new tancalc_popcntdata("grp_popcntdata_fu_431");
    grp_popcntdata_fu_431->ap_clk(ap_clk);
    grp_popcntdata_fu_431->ap_rst(ap_rst);
    grp_popcntdata_fu_431->ap_start(grp_popcntdata_fu_431_ap_start);
    grp_popcntdata_fu_431->ap_done(grp_popcntdata_fu_431_ap_done);
    grp_popcntdata_fu_431->ap_idle(grp_popcntdata_fu_431_ap_idle);
    grp_popcntdata_fu_431->ap_ready(grp_popcntdata_fu_431_ap_ready);
    grp_popcntdata_fu_431->x_V(and_ln1355_11_reg_1358);
    grp_popcntdata_fu_431->ap_return(grp_popcntdata_fu_431_ap_return);
    grp_popcntdata_fu_436 = new tancalc_popcntdata("grp_popcntdata_fu_436");
    grp_popcntdata_fu_436->ap_clk(ap_clk);
    grp_popcntdata_fu_436->ap_rst(ap_rst);
    grp_popcntdata_fu_436->ap_start(grp_popcntdata_fu_436_ap_start);
    grp_popcntdata_fu_436->ap_done(grp_popcntdata_fu_436_ap_done);
    grp_popcntdata_fu_436->ap_idle(grp_popcntdata_fu_436_ap_idle);
    grp_popcntdata_fu_436->ap_ready(grp_popcntdata_fu_436_ap_ready);
    grp_popcntdata_fu_436->x_V(and_ln1355_12_reg_1368);
    grp_popcntdata_fu_436->ap_return(grp_popcntdata_fu_436_ap_return);
    grp_popcntdata_fu_441 = new tancalc_popcntdata("grp_popcntdata_fu_441");
    grp_popcntdata_fu_441->ap_clk(ap_clk);
    grp_popcntdata_fu_441->ap_rst(ap_rst);
    grp_popcntdata_fu_441->ap_start(grp_popcntdata_fu_441_ap_start);
    grp_popcntdata_fu_441->ap_done(grp_popcntdata_fu_441_ap_done);
    grp_popcntdata_fu_441->ap_idle(grp_popcntdata_fu_441_ap_idle);
    grp_popcntdata_fu_441->ap_ready(grp_popcntdata_fu_441_ap_ready);
    grp_popcntdata_fu_441->x_V(and_ln1355_13_reg_1378);
    grp_popcntdata_fu_441->ap_return(grp_popcntdata_fu_441_ap_return);
    grp_popcntdata_fu_446 = new tancalc_popcntdata("grp_popcntdata_fu_446");
    grp_popcntdata_fu_446->ap_clk(ap_clk);
    grp_popcntdata_fu_446->ap_rst(ap_rst);
    grp_popcntdata_fu_446->ap_start(grp_popcntdata_fu_446_ap_start);
    grp_popcntdata_fu_446->ap_done(grp_popcntdata_fu_446_ap_done);
    grp_popcntdata_fu_446->ap_idle(grp_popcntdata_fu_446_ap_idle);
    grp_popcntdata_fu_446->ap_ready(grp_popcntdata_fu_446_ap_ready);
    grp_popcntdata_fu_446->x_V(and_ln1355_14_reg_1388);
    grp_popcntdata_fu_446->ap_return(grp_popcntdata_fu_446_ap_return);
    grp_popcntdata_fu_451 = new tancalc_popcntdata("grp_popcntdata_fu_451");
    grp_popcntdata_fu_451->ap_clk(ap_clk);
    grp_popcntdata_fu_451->ap_rst(ap_rst);
    grp_popcntdata_fu_451->ap_start(grp_popcntdata_fu_451_ap_start);
    grp_popcntdata_fu_451->ap_done(grp_popcntdata_fu_451_ap_done);
    grp_popcntdata_fu_451->ap_idle(grp_popcntdata_fu_451_ap_idle);
    grp_popcntdata_fu_451->ap_ready(grp_popcntdata_fu_451_ap_ready);
    grp_popcntdata_fu_451->x_V(and_ln1355_15_reg_1398);
    grp_popcntdata_fu_451->ap_return(grp_popcntdata_fu_451_ap_return);
    tancalc_mux_42_1024_1_1_U215 = new tancalc_tancalc_mux_42_1024_1_1<1,1,1024,1024,1024,1024,2,1024>("tancalc_mux_42_1024_1_1_U215");
    tancalc_mux_42_1024_1_1_U215->din0(ref_local_0_V_read);
    tancalc_mux_42_1024_1_1_U215->din1(ref_local_1_V_read);
    tancalc_mux_42_1024_1_1_U215->din2(ref_local_2_V_read);
    tancalc_mux_42_1024_1_1_U215->din3(ref_local_3_V_read);
    tancalc_mux_42_1024_1_1_U215->din4(tmp_fu_460_p5);
    tancalc_mux_42_1024_1_1_U215->dout(tmp_fu_460_p6);
    tancalc_mux_42_11_1_1_U216 = new tancalc_tancalc_mux_42_11_1_1<1,1,11,11,11,11,2,11>("tancalc_mux_42_11_1_1_U216");
    tancalc_mux_42_11_1_1_U216->din0(refpop_local_0_V_read);
    tancalc_mux_42_11_1_1_U216->din1(refpop_local_1_V_read);
    tancalc_mux_42_11_1_1_U216->din2(refpop_local_2_V_read);
    tancalc_mux_42_11_1_1_U216->din3(refpop_local_3_V_read);
    tancalc_mux_42_11_1_1_U216->din4(trunc_ln138_reg_1243);
    tancalc_mux_42_11_1_1_U216->dout(tmp_1_fu_570_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1353_10_fu_940_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_31_fu_937_p1 );

    SC_METHOD(thread_add_ln1353_11_fu_975_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_34_fu_972_p1 );

    SC_METHOD(thread_add_ln1353_12_fu_1010_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_37_fu_1007_p1 );

    SC_METHOD(thread_add_ln1353_13_fu_1045_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_40_fu_1042_p1 );

    SC_METHOD(thread_add_ln1353_14_fu_1080_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_43_fu_1077_p1 );

    SC_METHOD(thread_add_ln1353_15_fu_1115_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_46_fu_1112_p1 );

    SC_METHOD(thread_add_ln1353_1_fu_625_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_4_fu_622_p1 );

    SC_METHOD(thread_add_ln1353_2_fu_660_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_7_fu_657_p1 );

    SC_METHOD(thread_add_ln1353_3_fu_695_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_10_fu_692_p1 );

    SC_METHOD(thread_add_ln1353_4_fu_730_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_13_fu_727_p1 );

    SC_METHOD(thread_add_ln1353_5_fu_765_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_16_fu_762_p1 );

    SC_METHOD(thread_add_ln1353_6_fu_800_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_19_fu_797_p1 );

    SC_METHOD(thread_add_ln1353_7_fu_835_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_22_fu_832_p1 );

    SC_METHOD(thread_add_ln1353_8_fu_870_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_25_fu_867_p1 );

    SC_METHOD(thread_add_ln1353_9_fu_905_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_28_fu_902_p1 );

    SC_METHOD(thread_add_ln1353_fu_590_p2);
    sensitive << ( zext_ln215_fu_583_p1 );
    sensitive << ( zext_ln215_1_fu_587_p1 );

    SC_METHOD(thread_and_ln1355_10_fu_534_p2);
    sensitive << ( cmpr_local_10_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_11_fu_540_p2);
    sensitive << ( cmpr_local_11_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_12_fu_546_p2);
    sensitive << ( cmpr_local_12_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_13_fu_552_p2);
    sensitive << ( cmpr_local_13_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_14_fu_558_p2);
    sensitive << ( cmpr_local_14_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_15_fu_564_p2);
    sensitive << ( cmpr_local_15_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_1_fu_480_p2);
    sensitive << ( cmpr_local_1_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_2_fu_486_p2);
    sensitive << ( cmpr_local_2_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_3_fu_492_p2);
    sensitive << ( cmpr_local_3_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_4_fu_498_p2);
    sensitive << ( cmpr_local_4_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_5_fu_504_p2);
    sensitive << ( cmpr_local_5_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_6_fu_510_p2);
    sensitive << ( cmpr_local_6_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_7_fu_516_p2);
    sensitive << ( cmpr_local_7_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_8_fu_522_p2);
    sensitive << ( cmpr_local_8_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_9_fu_528_p2);
    sensitive << ( cmpr_local_9_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_and_ln1355_fu_474_p2);
    sensitive << ( cmpr_local_0_V_dout );
    sensitive << ( tmp_fu_460_p6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_ap_block_state3_on_subcall_done);
    sensitive << ( grp_popcntdata_fu_376_ap_done );
    sensitive << ( grp_popcntdata_fu_381_ap_done );
    sensitive << ( grp_popcntdata_fu_386_ap_done );
    sensitive << ( grp_popcntdata_fu_391_ap_done );
    sensitive << ( grp_popcntdata_fu_396_ap_done );
    sensitive << ( grp_popcntdata_fu_401_ap_done );
    sensitive << ( grp_popcntdata_fu_406_ap_done );
    sensitive << ( grp_popcntdata_fu_411_ap_done );
    sensitive << ( grp_popcntdata_fu_416_ap_done );
    sensitive << ( grp_popcntdata_fu_421_ap_done );
    sensitive << ( grp_popcntdata_fu_426_ap_done );
    sensitive << ( grp_popcntdata_fu_431_ap_done );
    sensitive << ( grp_popcntdata_fu_436_ap_done );
    sensitive << ( grp_popcntdata_fu_441_ap_done );
    sensitive << ( grp_popcntdata_fu_446_ap_done );
    sensitive << ( grp_popcntdata_fu_451_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_fu_616_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_1_fu_651_p2 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_10_fu_966_p2 );
    sensitive << ( ap_return_10_preg );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_11_fu_1001_p2 );
    sensitive << ( ap_return_11_preg );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_12_fu_1036_p2 );
    sensitive << ( ap_return_12_preg );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_13_fu_1071_p2 );
    sensitive << ( ap_return_13_preg );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_14_fu_1106_p2 );
    sensitive << ( ap_return_14_preg );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_15_fu_1141_p2 );
    sensitive << ( ap_return_15_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_2_fu_686_p2 );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_3_fu_721_p2 );
    sensitive << ( ap_return_3_preg );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_4_fu_756_p2 );
    sensitive << ( ap_return_4_preg );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_5_fu_791_p2 );
    sensitive << ( ap_return_5_preg );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_6_fu_826_p2 );
    sensitive << ( ap_return_6_preg );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_7_fu_861_p2 );
    sensitive << ( ap_return_7_preg );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_8_fu_896_p2 );
    sensitive << ( ap_return_8_preg );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( xor_ln54_9_fu_931_p2 );
    sensitive << ( ap_return_9_preg );

    SC_METHOD(thread_cmpr_local_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );

    SC_METHOD(thread_cmpr_local_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_10_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_10_V_empty_n );

    SC_METHOD(thread_cmpr_local_10_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_11_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_11_V_empty_n );

    SC_METHOD(thread_cmpr_local_11_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_12_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_12_V_empty_n );

    SC_METHOD(thread_cmpr_local_12_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_13_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_13_V_empty_n );

    SC_METHOD(thread_cmpr_local_13_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_14_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_14_V_empty_n );

    SC_METHOD(thread_cmpr_local_14_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_15_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_15_V_empty_n );

    SC_METHOD(thread_cmpr_local_15_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_1_V_empty_n );

    SC_METHOD(thread_cmpr_local_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_2_V_empty_n );

    SC_METHOD(thread_cmpr_local_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_3_V_empty_n );

    SC_METHOD(thread_cmpr_local_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_4_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_4_V_empty_n );

    SC_METHOD(thread_cmpr_local_4_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_5_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_5_V_empty_n );

    SC_METHOD(thread_cmpr_local_5_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_6_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_6_V_empty_n );

    SC_METHOD(thread_cmpr_local_6_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_7_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_7_V_empty_n );

    SC_METHOD(thread_cmpr_local_7_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_8_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_8_V_empty_n );

    SC_METHOD(thread_cmpr_local_8_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmpr_local_9_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_9_V_empty_n );

    SC_METHOD(thread_cmpr_local_9_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_0_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_0_V_empty_n );

    SC_METHOD(thread_cmprpop_local_0_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_10_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_10_V_empty_n );

    SC_METHOD(thread_cmprpop_local_10_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_11_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_11_V_empty_n );

    SC_METHOD(thread_cmprpop_local_11_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_12_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_12_V_empty_n );

    SC_METHOD(thread_cmprpop_local_12_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_13_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_13_V_empty_n );

    SC_METHOD(thread_cmprpop_local_13_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_14_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_14_V_empty_n );

    SC_METHOD(thread_cmprpop_local_14_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_15_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_15_V_empty_n );

    SC_METHOD(thread_cmprpop_local_15_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_1_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_1_V_empty_n );

    SC_METHOD(thread_cmprpop_local_1_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_2_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_2_V_empty_n );

    SC_METHOD(thread_cmprpop_local_2_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_3_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_3_V_empty_n );

    SC_METHOD(thread_cmprpop_local_3_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_4_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_4_V_empty_n );

    SC_METHOD(thread_cmprpop_local_4_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_5_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_5_V_empty_n );

    SC_METHOD(thread_cmprpop_local_5_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_6_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_6_V_empty_n );

    SC_METHOD(thread_cmprpop_local_6_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_7_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_7_V_empty_n );

    SC_METHOD(thread_cmprpop_local_7_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_8_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_8_V_empty_n );

    SC_METHOD(thread_cmprpop_local_8_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_cmprpop_local_9_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmprpop_local_9_V_empty_n );

    SC_METHOD(thread_cmprpop_local_9_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_data_num_0_i_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_num_0_i_empty_n );

    SC_METHOD(thread_data_num_0_i_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_data_num_0_i_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_dout );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_data_num_0_i_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_data_num_0_i_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );

    SC_METHOD(thread_grp_popcntdata_fu_376_ap_start);
    sensitive << ( grp_popcntdata_fu_376_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_381_ap_start);
    sensitive << ( grp_popcntdata_fu_381_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_386_ap_start);
    sensitive << ( grp_popcntdata_fu_386_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_391_ap_start);
    sensitive << ( grp_popcntdata_fu_391_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_396_ap_start);
    sensitive << ( grp_popcntdata_fu_396_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_401_ap_start);
    sensitive << ( grp_popcntdata_fu_401_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_406_ap_start);
    sensitive << ( grp_popcntdata_fu_406_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_411_ap_start);
    sensitive << ( grp_popcntdata_fu_411_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_416_ap_start);
    sensitive << ( grp_popcntdata_fu_416_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_421_ap_start);
    sensitive << ( grp_popcntdata_fu_421_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_426_ap_start);
    sensitive << ( grp_popcntdata_fu_426_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_431_ap_start);
    sensitive << ( grp_popcntdata_fu_431_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_436_ap_start);
    sensitive << ( grp_popcntdata_fu_436_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_441_ap_start);
    sensitive << ( grp_popcntdata_fu_441_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_446_ap_start);
    sensitive << ( grp_popcntdata_fu_446_ap_start_reg );

    SC_METHOD(thread_grp_popcntdata_fu_451_ap_start);
    sensitive << ( grp_popcntdata_fu_451_ap_start_reg );

    SC_METHOD(thread_icmp_ln54_10_fu_960_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_33_fu_950_p1 );
    sensitive << ( sub_ln1354_10_fu_954_p2 );

    SC_METHOD(thread_icmp_ln54_11_fu_995_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_36_fu_985_p1 );
    sensitive << ( sub_ln1354_11_fu_989_p2 );

    SC_METHOD(thread_icmp_ln54_12_fu_1030_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_39_fu_1020_p1 );
    sensitive << ( sub_ln1354_12_fu_1024_p2 );

    SC_METHOD(thread_icmp_ln54_13_fu_1065_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_42_fu_1055_p1 );
    sensitive << ( sub_ln1354_13_fu_1059_p2 );

    SC_METHOD(thread_icmp_ln54_14_fu_1100_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_45_fu_1090_p1 );
    sensitive << ( sub_ln1354_14_fu_1094_p2 );

    SC_METHOD(thread_icmp_ln54_15_fu_1135_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_48_fu_1125_p1 );
    sensitive << ( sub_ln1354_15_fu_1129_p2 );

    SC_METHOD(thread_icmp_ln54_1_fu_645_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_6_fu_635_p1 );
    sensitive << ( sub_ln1354_1_fu_639_p2 );

    SC_METHOD(thread_icmp_ln54_2_fu_680_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_9_fu_670_p1 );
    sensitive << ( sub_ln1354_2_fu_674_p2 );

    SC_METHOD(thread_icmp_ln54_3_fu_715_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_12_fu_705_p1 );
    sensitive << ( sub_ln1354_3_fu_709_p2 );

    SC_METHOD(thread_icmp_ln54_4_fu_750_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_15_fu_740_p1 );
    sensitive << ( sub_ln1354_4_fu_744_p2 );

    SC_METHOD(thread_icmp_ln54_5_fu_785_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_18_fu_775_p1 );
    sensitive << ( sub_ln1354_5_fu_779_p2 );

    SC_METHOD(thread_icmp_ln54_6_fu_820_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_21_fu_810_p1 );
    sensitive << ( sub_ln1354_6_fu_814_p2 );

    SC_METHOD(thread_icmp_ln54_7_fu_855_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_24_fu_845_p1 );
    sensitive << ( sub_ln1354_7_fu_849_p2 );

    SC_METHOD(thread_icmp_ln54_8_fu_890_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_27_fu_880_p1 );
    sensitive << ( sub_ln1354_8_fu_884_p2 );

    SC_METHOD(thread_icmp_ln54_9_fu_925_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_30_fu_915_p1 );
    sensitive << ( sub_ln1354_9_fu_919_p2 );

    SC_METHOD(thread_icmp_ln54_fu_610_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );
    sensitive << ( zext_ln215_3_fu_600_p1 );
    sensitive << ( sub_ln1354_fu_604_p2 );

    SC_METHOD(thread_sub_ln1354_10_fu_954_p2);
    sensitive << ( zext_ln215_32_fu_946_p1 );
    sensitive << ( zext_ln215_33_fu_950_p1 );

    SC_METHOD(thread_sub_ln1354_11_fu_989_p2);
    sensitive << ( zext_ln215_35_fu_981_p1 );
    sensitive << ( zext_ln215_36_fu_985_p1 );

    SC_METHOD(thread_sub_ln1354_12_fu_1024_p2);
    sensitive << ( zext_ln215_38_fu_1016_p1 );
    sensitive << ( zext_ln215_39_fu_1020_p1 );

    SC_METHOD(thread_sub_ln1354_13_fu_1059_p2);
    sensitive << ( zext_ln215_41_fu_1051_p1 );
    sensitive << ( zext_ln215_42_fu_1055_p1 );

    SC_METHOD(thread_sub_ln1354_14_fu_1094_p2);
    sensitive << ( zext_ln215_44_fu_1086_p1 );
    sensitive << ( zext_ln215_45_fu_1090_p1 );

    SC_METHOD(thread_sub_ln1354_15_fu_1129_p2);
    sensitive << ( zext_ln215_47_fu_1121_p1 );
    sensitive << ( zext_ln215_48_fu_1125_p1 );

    SC_METHOD(thread_sub_ln1354_1_fu_639_p2);
    sensitive << ( zext_ln215_5_fu_631_p1 );
    sensitive << ( zext_ln215_6_fu_635_p1 );

    SC_METHOD(thread_sub_ln1354_2_fu_674_p2);
    sensitive << ( zext_ln215_8_fu_666_p1 );
    sensitive << ( zext_ln215_9_fu_670_p1 );

    SC_METHOD(thread_sub_ln1354_3_fu_709_p2);
    sensitive << ( zext_ln215_11_fu_701_p1 );
    sensitive << ( zext_ln215_12_fu_705_p1 );

    SC_METHOD(thread_sub_ln1354_4_fu_744_p2);
    sensitive << ( zext_ln215_14_fu_736_p1 );
    sensitive << ( zext_ln215_15_fu_740_p1 );

    SC_METHOD(thread_sub_ln1354_5_fu_779_p2);
    sensitive << ( zext_ln215_17_fu_771_p1 );
    sensitive << ( zext_ln215_18_fu_775_p1 );

    SC_METHOD(thread_sub_ln1354_6_fu_814_p2);
    sensitive << ( zext_ln215_20_fu_806_p1 );
    sensitive << ( zext_ln215_21_fu_810_p1 );

    SC_METHOD(thread_sub_ln1354_7_fu_849_p2);
    sensitive << ( zext_ln215_23_fu_841_p1 );
    sensitive << ( zext_ln215_24_fu_845_p1 );

    SC_METHOD(thread_sub_ln1354_8_fu_884_p2);
    sensitive << ( zext_ln215_26_fu_876_p1 );
    sensitive << ( zext_ln215_27_fu_880_p1 );

    SC_METHOD(thread_sub_ln1354_9_fu_919_p2);
    sensitive << ( zext_ln215_29_fu_911_p1 );
    sensitive << ( zext_ln215_30_fu_915_p1 );

    SC_METHOD(thread_sub_ln1354_fu_604_p2);
    sensitive << ( zext_ln215_2_fu_596_p1 );
    sensitive << ( zext_ln215_3_fu_600_p1 );

    SC_METHOD(thread_tmp_fu_460_p5);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( data_num_0_i_dout );

    SC_METHOD(thread_trunc_ln138_fu_456_p1);
    sensitive << ( data_num_0_i_dout );

    SC_METHOD(thread_xor_ln54_10_fu_966_p2);
    sensitive << ( icmp_ln54_10_fu_960_p2 );

    SC_METHOD(thread_xor_ln54_11_fu_1001_p2);
    sensitive << ( icmp_ln54_11_fu_995_p2 );

    SC_METHOD(thread_xor_ln54_12_fu_1036_p2);
    sensitive << ( icmp_ln54_12_fu_1030_p2 );

    SC_METHOD(thread_xor_ln54_13_fu_1071_p2);
    sensitive << ( icmp_ln54_13_fu_1065_p2 );

    SC_METHOD(thread_xor_ln54_14_fu_1106_p2);
    sensitive << ( icmp_ln54_14_fu_1100_p2 );

    SC_METHOD(thread_xor_ln54_15_fu_1141_p2);
    sensitive << ( icmp_ln54_15_fu_1135_p2 );

    SC_METHOD(thread_xor_ln54_1_fu_651_p2);
    sensitive << ( icmp_ln54_1_fu_645_p2 );

    SC_METHOD(thread_xor_ln54_2_fu_686_p2);
    sensitive << ( icmp_ln54_2_fu_680_p2 );

    SC_METHOD(thread_xor_ln54_3_fu_721_p2);
    sensitive << ( icmp_ln54_3_fu_715_p2 );

    SC_METHOD(thread_xor_ln54_4_fu_756_p2);
    sensitive << ( icmp_ln54_4_fu_750_p2 );

    SC_METHOD(thread_xor_ln54_5_fu_791_p2);
    sensitive << ( icmp_ln54_5_fu_785_p2 );

    SC_METHOD(thread_xor_ln54_6_fu_826_p2);
    sensitive << ( icmp_ln54_6_fu_820_p2 );

    SC_METHOD(thread_xor_ln54_7_fu_861_p2);
    sensitive << ( icmp_ln54_7_fu_855_p2 );

    SC_METHOD(thread_xor_ln54_8_fu_896_p2);
    sensitive << ( icmp_ln54_8_fu_890_p2 );

    SC_METHOD(thread_xor_ln54_9_fu_931_p2);
    sensitive << ( icmp_ln54_9_fu_925_p2 );

    SC_METHOD(thread_xor_ln54_fu_616_p2);
    sensitive << ( icmp_ln54_fu_610_p2 );

    SC_METHOD(thread_zext_ln215_10_fu_692_p1);
    sensitive << ( cmprpop_local_3_V_read_reg_1283 );

    SC_METHOD(thread_zext_ln215_11_fu_701_p1);
    sensitive << ( add_ln1353_3_fu_695_p2 );

    SC_METHOD(thread_zext_ln215_12_fu_705_p1);
    sensitive << ( grp_popcntdata_fu_391_ap_return );

    SC_METHOD(thread_zext_ln215_13_fu_727_p1);
    sensitive << ( cmprpop_local_4_V_read_reg_1293 );

    SC_METHOD(thread_zext_ln215_14_fu_736_p1);
    sensitive << ( add_ln1353_4_fu_730_p2 );

    SC_METHOD(thread_zext_ln215_15_fu_740_p1);
    sensitive << ( grp_popcntdata_fu_396_ap_return );

    SC_METHOD(thread_zext_ln215_16_fu_762_p1);
    sensitive << ( cmprpop_local_5_V_read_reg_1303 );

    SC_METHOD(thread_zext_ln215_17_fu_771_p1);
    sensitive << ( add_ln1353_5_fu_765_p2 );

    SC_METHOD(thread_zext_ln215_18_fu_775_p1);
    sensitive << ( grp_popcntdata_fu_401_ap_return );

    SC_METHOD(thread_zext_ln215_19_fu_797_p1);
    sensitive << ( cmprpop_local_6_V_read_reg_1313 );

    SC_METHOD(thread_zext_ln215_1_fu_587_p1);
    sensitive << ( cmprpop_local_0_V_read_reg_1253 );

    SC_METHOD(thread_zext_ln215_20_fu_806_p1);
    sensitive << ( add_ln1353_6_fu_800_p2 );

    SC_METHOD(thread_zext_ln215_21_fu_810_p1);
    sensitive << ( grp_popcntdata_fu_406_ap_return );

    SC_METHOD(thread_zext_ln215_22_fu_832_p1);
    sensitive << ( cmprpop_local_7_V_read_reg_1323 );

    SC_METHOD(thread_zext_ln215_23_fu_841_p1);
    sensitive << ( add_ln1353_7_fu_835_p2 );

    SC_METHOD(thread_zext_ln215_24_fu_845_p1);
    sensitive << ( grp_popcntdata_fu_411_ap_return );

    SC_METHOD(thread_zext_ln215_25_fu_867_p1);
    sensitive << ( cmprpop_local_8_V_read_reg_1333 );

    SC_METHOD(thread_zext_ln215_26_fu_876_p1);
    sensitive << ( add_ln1353_8_fu_870_p2 );

    SC_METHOD(thread_zext_ln215_27_fu_880_p1);
    sensitive << ( grp_popcntdata_fu_416_ap_return );

    SC_METHOD(thread_zext_ln215_28_fu_902_p1);
    sensitive << ( cmprpop_local_9_V_read_reg_1343 );

    SC_METHOD(thread_zext_ln215_29_fu_911_p1);
    sensitive << ( add_ln1353_9_fu_905_p2 );

    SC_METHOD(thread_zext_ln215_2_fu_596_p1);
    sensitive << ( add_ln1353_fu_590_p2 );

    SC_METHOD(thread_zext_ln215_30_fu_915_p1);
    sensitive << ( grp_popcntdata_fu_421_ap_return );

    SC_METHOD(thread_zext_ln215_31_fu_937_p1);
    sensitive << ( cmprpop_local_10_V_read_reg_1353 );

    SC_METHOD(thread_zext_ln215_32_fu_946_p1);
    sensitive << ( add_ln1353_10_fu_940_p2 );

    SC_METHOD(thread_zext_ln215_33_fu_950_p1);
    sensitive << ( grp_popcntdata_fu_426_ap_return );

    SC_METHOD(thread_zext_ln215_34_fu_972_p1);
    sensitive << ( cmprpop_local_11_V_read_reg_1363 );

    SC_METHOD(thread_zext_ln215_35_fu_981_p1);
    sensitive << ( add_ln1353_11_fu_975_p2 );

    SC_METHOD(thread_zext_ln215_36_fu_985_p1);
    sensitive << ( grp_popcntdata_fu_431_ap_return );

    SC_METHOD(thread_zext_ln215_37_fu_1007_p1);
    sensitive << ( cmprpop_local_12_V_read_reg_1373 );

    SC_METHOD(thread_zext_ln215_38_fu_1016_p1);
    sensitive << ( add_ln1353_12_fu_1010_p2 );

    SC_METHOD(thread_zext_ln215_39_fu_1020_p1);
    sensitive << ( grp_popcntdata_fu_436_ap_return );

    SC_METHOD(thread_zext_ln215_3_fu_600_p1);
    sensitive << ( grp_popcntdata_fu_376_ap_return );

    SC_METHOD(thread_zext_ln215_40_fu_1042_p1);
    sensitive << ( cmprpop_local_13_V_read_reg_1383 );

    SC_METHOD(thread_zext_ln215_41_fu_1051_p1);
    sensitive << ( add_ln1353_13_fu_1045_p2 );

    SC_METHOD(thread_zext_ln215_42_fu_1055_p1);
    sensitive << ( grp_popcntdata_fu_441_ap_return );

    SC_METHOD(thread_zext_ln215_43_fu_1077_p1);
    sensitive << ( cmprpop_local_14_V_read_reg_1393 );

    SC_METHOD(thread_zext_ln215_44_fu_1086_p1);
    sensitive << ( add_ln1353_14_fu_1080_p2 );

    SC_METHOD(thread_zext_ln215_45_fu_1090_p1);
    sensitive << ( grp_popcntdata_fu_446_ap_return );

    SC_METHOD(thread_zext_ln215_46_fu_1112_p1);
    sensitive << ( cmprpop_local_15_V_read_reg_1403 );

    SC_METHOD(thread_zext_ln215_47_fu_1121_p1);
    sensitive << ( add_ln1353_15_fu_1115_p2 );

    SC_METHOD(thread_zext_ln215_48_fu_1125_p1);
    sensitive << ( grp_popcntdata_fu_451_ap_return );

    SC_METHOD(thread_zext_ln215_4_fu_622_p1);
    sensitive << ( cmprpop_local_1_V_read_reg_1263 );

    SC_METHOD(thread_zext_ln215_5_fu_631_p1);
    sensitive << ( add_ln1353_1_fu_625_p2 );

    SC_METHOD(thread_zext_ln215_6_fu_635_p1);
    sensitive << ( grp_popcntdata_fu_381_ap_return );

    SC_METHOD(thread_zext_ln215_7_fu_657_p1);
    sensitive << ( cmprpop_local_2_V_read_reg_1273 );

    SC_METHOD(thread_zext_ln215_8_fu_666_p1);
    sensitive << ( add_ln1353_2_fu_660_p2 );

    SC_METHOD(thread_zext_ln215_9_fu_670_p1);
    sensitive << ( grp_popcntdata_fu_386_ap_return );

    SC_METHOD(thread_zext_ln215_fu_583_p1);
    sensitive << ( tmp_1_fu_570_p6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cmpr_local_0_V_empty_n );
    sensitive << ( cmpr_local_1_V_empty_n );
    sensitive << ( cmpr_local_2_V_empty_n );
    sensitive << ( cmpr_local_3_V_empty_n );
    sensitive << ( cmpr_local_4_V_empty_n );
    sensitive << ( cmpr_local_5_V_empty_n );
    sensitive << ( cmpr_local_6_V_empty_n );
    sensitive << ( cmpr_local_7_V_empty_n );
    sensitive << ( cmpr_local_8_V_empty_n );
    sensitive << ( cmpr_local_9_V_empty_n );
    sensitive << ( cmpr_local_10_V_empty_n );
    sensitive << ( cmpr_local_11_V_empty_n );
    sensitive << ( cmpr_local_12_V_empty_n );
    sensitive << ( cmpr_local_13_V_empty_n );
    sensitive << ( cmpr_local_14_V_empty_n );
    sensitive << ( cmpr_local_15_V_empty_n );
    sensitive << ( cmprpop_local_0_V_empty_n );
    sensitive << ( cmprpop_local_1_V_empty_n );
    sensitive << ( cmprpop_local_2_V_empty_n );
    sensitive << ( cmprpop_local_3_V_empty_n );
    sensitive << ( cmprpop_local_4_V_empty_n );
    sensitive << ( cmprpop_local_5_V_empty_n );
    sensitive << ( cmprpop_local_6_V_empty_n );
    sensitive << ( cmprpop_local_7_V_empty_n );
    sensitive << ( cmprpop_local_8_V_empty_n );
    sensitive << ( cmprpop_local_9_V_empty_n );
    sensitive << ( cmprpop_local_10_V_empty_n );
    sensitive << ( cmprpop_local_11_V_empty_n );
    sensitive << ( cmprpop_local_12_V_empty_n );
    sensitive << ( cmprpop_local_13_V_empty_n );
    sensitive << ( cmprpop_local_14_V_empty_n );
    sensitive << ( cmprpop_local_15_V_empty_n );
    sensitive << ( data_num_0_i_empty_n );
    sensitive << ( data_num_0_i_out_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    grp_popcntdata_fu_376_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_381_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_386_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_391_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_396_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_401_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_406_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_411_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_416_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_421_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_426_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_431_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_436_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_441_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_446_ap_start_reg = SC_LOGIC_0;
    grp_popcntdata_fu_451_ap_start_reg = SC_LOGIC_0;
    ap_return_0_preg = "0";
    ap_return_1_preg = "0";
    ap_return_2_preg = "0";
    ap_return_3_preg = "0";
    ap_return_4_preg = "0";
    ap_return_5_preg = "0";
    ap_return_6_preg = "0";
    ap_return_7_preg = "0";
    ap_return_8_preg = "0";
    ap_return_9_preg = "0";
    ap_return_10_preg = "0";
    ap_return_11_preg = "0";
    ap_return_12_preg = "0";
    ap_return_13_preg = "0";
    ap_return_14_preg = "0";
    ap_return_15_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "tancalc_calculation_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ref_local_0_V_read, "(port)ref_local_0_V_read");
    sc_trace(mVcdFile, ref_local_1_V_read, "(port)ref_local_1_V_read");
    sc_trace(mVcdFile, ref_local_2_V_read, "(port)ref_local_2_V_read");
    sc_trace(mVcdFile, ref_local_3_V_read, "(port)ref_local_3_V_read");
    sc_trace(mVcdFile, cmpr_local_0_V_dout, "(port)cmpr_local_0_V_dout");
    sc_trace(mVcdFile, cmpr_local_0_V_empty_n, "(port)cmpr_local_0_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_0_V_read, "(port)cmpr_local_0_V_read");
    sc_trace(mVcdFile, cmpr_local_1_V_dout, "(port)cmpr_local_1_V_dout");
    sc_trace(mVcdFile, cmpr_local_1_V_empty_n, "(port)cmpr_local_1_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_1_V_read, "(port)cmpr_local_1_V_read");
    sc_trace(mVcdFile, cmpr_local_2_V_dout, "(port)cmpr_local_2_V_dout");
    sc_trace(mVcdFile, cmpr_local_2_V_empty_n, "(port)cmpr_local_2_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_2_V_read, "(port)cmpr_local_2_V_read");
    sc_trace(mVcdFile, cmpr_local_3_V_dout, "(port)cmpr_local_3_V_dout");
    sc_trace(mVcdFile, cmpr_local_3_V_empty_n, "(port)cmpr_local_3_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_3_V_read, "(port)cmpr_local_3_V_read");
    sc_trace(mVcdFile, cmpr_local_4_V_dout, "(port)cmpr_local_4_V_dout");
    sc_trace(mVcdFile, cmpr_local_4_V_empty_n, "(port)cmpr_local_4_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_4_V_read, "(port)cmpr_local_4_V_read");
    sc_trace(mVcdFile, cmpr_local_5_V_dout, "(port)cmpr_local_5_V_dout");
    sc_trace(mVcdFile, cmpr_local_5_V_empty_n, "(port)cmpr_local_5_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_5_V_read, "(port)cmpr_local_5_V_read");
    sc_trace(mVcdFile, cmpr_local_6_V_dout, "(port)cmpr_local_6_V_dout");
    sc_trace(mVcdFile, cmpr_local_6_V_empty_n, "(port)cmpr_local_6_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_6_V_read, "(port)cmpr_local_6_V_read");
    sc_trace(mVcdFile, cmpr_local_7_V_dout, "(port)cmpr_local_7_V_dout");
    sc_trace(mVcdFile, cmpr_local_7_V_empty_n, "(port)cmpr_local_7_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_7_V_read, "(port)cmpr_local_7_V_read");
    sc_trace(mVcdFile, cmpr_local_8_V_dout, "(port)cmpr_local_8_V_dout");
    sc_trace(mVcdFile, cmpr_local_8_V_empty_n, "(port)cmpr_local_8_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_8_V_read, "(port)cmpr_local_8_V_read");
    sc_trace(mVcdFile, cmpr_local_9_V_dout, "(port)cmpr_local_9_V_dout");
    sc_trace(mVcdFile, cmpr_local_9_V_empty_n, "(port)cmpr_local_9_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_9_V_read, "(port)cmpr_local_9_V_read");
    sc_trace(mVcdFile, cmpr_local_10_V_dout, "(port)cmpr_local_10_V_dout");
    sc_trace(mVcdFile, cmpr_local_10_V_empty_n, "(port)cmpr_local_10_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_10_V_read, "(port)cmpr_local_10_V_read");
    sc_trace(mVcdFile, cmpr_local_11_V_dout, "(port)cmpr_local_11_V_dout");
    sc_trace(mVcdFile, cmpr_local_11_V_empty_n, "(port)cmpr_local_11_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_11_V_read, "(port)cmpr_local_11_V_read");
    sc_trace(mVcdFile, cmpr_local_12_V_dout, "(port)cmpr_local_12_V_dout");
    sc_trace(mVcdFile, cmpr_local_12_V_empty_n, "(port)cmpr_local_12_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_12_V_read, "(port)cmpr_local_12_V_read");
    sc_trace(mVcdFile, cmpr_local_13_V_dout, "(port)cmpr_local_13_V_dout");
    sc_trace(mVcdFile, cmpr_local_13_V_empty_n, "(port)cmpr_local_13_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_13_V_read, "(port)cmpr_local_13_V_read");
    sc_trace(mVcdFile, cmpr_local_14_V_dout, "(port)cmpr_local_14_V_dout");
    sc_trace(mVcdFile, cmpr_local_14_V_empty_n, "(port)cmpr_local_14_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_14_V_read, "(port)cmpr_local_14_V_read");
    sc_trace(mVcdFile, cmpr_local_15_V_dout, "(port)cmpr_local_15_V_dout");
    sc_trace(mVcdFile, cmpr_local_15_V_empty_n, "(port)cmpr_local_15_V_empty_n");
    sc_trace(mVcdFile, cmpr_local_15_V_read, "(port)cmpr_local_15_V_read");
    sc_trace(mVcdFile, refpop_local_0_V_read, "(port)refpop_local_0_V_read");
    sc_trace(mVcdFile, refpop_local_1_V_read, "(port)refpop_local_1_V_read");
    sc_trace(mVcdFile, refpop_local_2_V_read, "(port)refpop_local_2_V_read");
    sc_trace(mVcdFile, refpop_local_3_V_read, "(port)refpop_local_3_V_read");
    sc_trace(mVcdFile, cmprpop_local_0_V_dout, "(port)cmprpop_local_0_V_dout");
    sc_trace(mVcdFile, cmprpop_local_0_V_empty_n, "(port)cmprpop_local_0_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_0_V_read, "(port)cmprpop_local_0_V_read");
    sc_trace(mVcdFile, cmprpop_local_1_V_dout, "(port)cmprpop_local_1_V_dout");
    sc_trace(mVcdFile, cmprpop_local_1_V_empty_n, "(port)cmprpop_local_1_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_1_V_read, "(port)cmprpop_local_1_V_read");
    sc_trace(mVcdFile, cmprpop_local_2_V_dout, "(port)cmprpop_local_2_V_dout");
    sc_trace(mVcdFile, cmprpop_local_2_V_empty_n, "(port)cmprpop_local_2_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_2_V_read, "(port)cmprpop_local_2_V_read");
    sc_trace(mVcdFile, cmprpop_local_3_V_dout, "(port)cmprpop_local_3_V_dout");
    sc_trace(mVcdFile, cmprpop_local_3_V_empty_n, "(port)cmprpop_local_3_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_3_V_read, "(port)cmprpop_local_3_V_read");
    sc_trace(mVcdFile, cmprpop_local_4_V_dout, "(port)cmprpop_local_4_V_dout");
    sc_trace(mVcdFile, cmprpop_local_4_V_empty_n, "(port)cmprpop_local_4_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_4_V_read, "(port)cmprpop_local_4_V_read");
    sc_trace(mVcdFile, cmprpop_local_5_V_dout, "(port)cmprpop_local_5_V_dout");
    sc_trace(mVcdFile, cmprpop_local_5_V_empty_n, "(port)cmprpop_local_5_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_5_V_read, "(port)cmprpop_local_5_V_read");
    sc_trace(mVcdFile, cmprpop_local_6_V_dout, "(port)cmprpop_local_6_V_dout");
    sc_trace(mVcdFile, cmprpop_local_6_V_empty_n, "(port)cmprpop_local_6_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_6_V_read, "(port)cmprpop_local_6_V_read");
    sc_trace(mVcdFile, cmprpop_local_7_V_dout, "(port)cmprpop_local_7_V_dout");
    sc_trace(mVcdFile, cmprpop_local_7_V_empty_n, "(port)cmprpop_local_7_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_7_V_read, "(port)cmprpop_local_7_V_read");
    sc_trace(mVcdFile, cmprpop_local_8_V_dout, "(port)cmprpop_local_8_V_dout");
    sc_trace(mVcdFile, cmprpop_local_8_V_empty_n, "(port)cmprpop_local_8_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_8_V_read, "(port)cmprpop_local_8_V_read");
    sc_trace(mVcdFile, cmprpop_local_9_V_dout, "(port)cmprpop_local_9_V_dout");
    sc_trace(mVcdFile, cmprpop_local_9_V_empty_n, "(port)cmprpop_local_9_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_9_V_read, "(port)cmprpop_local_9_V_read");
    sc_trace(mVcdFile, cmprpop_local_10_V_dout, "(port)cmprpop_local_10_V_dout");
    sc_trace(mVcdFile, cmprpop_local_10_V_empty_n, "(port)cmprpop_local_10_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_10_V_read, "(port)cmprpop_local_10_V_read");
    sc_trace(mVcdFile, cmprpop_local_11_V_dout, "(port)cmprpop_local_11_V_dout");
    sc_trace(mVcdFile, cmprpop_local_11_V_empty_n, "(port)cmprpop_local_11_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_11_V_read, "(port)cmprpop_local_11_V_read");
    sc_trace(mVcdFile, cmprpop_local_12_V_dout, "(port)cmprpop_local_12_V_dout");
    sc_trace(mVcdFile, cmprpop_local_12_V_empty_n, "(port)cmprpop_local_12_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_12_V_read, "(port)cmprpop_local_12_V_read");
    sc_trace(mVcdFile, cmprpop_local_13_V_dout, "(port)cmprpop_local_13_V_dout");
    sc_trace(mVcdFile, cmprpop_local_13_V_empty_n, "(port)cmprpop_local_13_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_13_V_read, "(port)cmprpop_local_13_V_read");
    sc_trace(mVcdFile, cmprpop_local_14_V_dout, "(port)cmprpop_local_14_V_dout");
    sc_trace(mVcdFile, cmprpop_local_14_V_empty_n, "(port)cmprpop_local_14_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_14_V_read, "(port)cmprpop_local_14_V_read");
    sc_trace(mVcdFile, cmprpop_local_15_V_dout, "(port)cmprpop_local_15_V_dout");
    sc_trace(mVcdFile, cmprpop_local_15_V_empty_n, "(port)cmprpop_local_15_V_empty_n");
    sc_trace(mVcdFile, cmprpop_local_15_V_read, "(port)cmprpop_local_15_V_read");
    sc_trace(mVcdFile, data_num_0_i_dout, "(port)data_num_0_i_dout");
    sc_trace(mVcdFile, data_num_0_i_empty_n, "(port)data_num_0_i_empty_n");
    sc_trace(mVcdFile, data_num_0_i_read, "(port)data_num_0_i_read");
    sc_trace(mVcdFile, data_num_0_i_out_din, "(port)data_num_0_i_out_din");
    sc_trace(mVcdFile, data_num_0_i_out_full_n, "(port)data_num_0_i_out_full_n");
    sc_trace(mVcdFile, data_num_0_i_out_write, "(port)data_num_0_i_out_write");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cmpr_local_0_V_blk_n, "cmpr_local_0_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_1_V_blk_n, "cmpr_local_1_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_2_V_blk_n, "cmpr_local_2_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_3_V_blk_n, "cmpr_local_3_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_4_V_blk_n, "cmpr_local_4_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_5_V_blk_n, "cmpr_local_5_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_6_V_blk_n, "cmpr_local_6_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_7_V_blk_n, "cmpr_local_7_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_8_V_blk_n, "cmpr_local_8_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_9_V_blk_n, "cmpr_local_9_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_10_V_blk_n, "cmpr_local_10_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_11_V_blk_n, "cmpr_local_11_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_12_V_blk_n, "cmpr_local_12_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_13_V_blk_n, "cmpr_local_13_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_14_V_blk_n, "cmpr_local_14_V_blk_n");
    sc_trace(mVcdFile, cmpr_local_15_V_blk_n, "cmpr_local_15_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_0_V_blk_n, "cmprpop_local_0_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_1_V_blk_n, "cmprpop_local_1_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_2_V_blk_n, "cmprpop_local_2_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_3_V_blk_n, "cmprpop_local_3_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_4_V_blk_n, "cmprpop_local_4_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_5_V_blk_n, "cmprpop_local_5_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_6_V_blk_n, "cmprpop_local_6_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_7_V_blk_n, "cmprpop_local_7_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_8_V_blk_n, "cmprpop_local_8_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_9_V_blk_n, "cmprpop_local_9_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_10_V_blk_n, "cmprpop_local_10_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_11_V_blk_n, "cmprpop_local_11_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_12_V_blk_n, "cmprpop_local_12_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_13_V_blk_n, "cmprpop_local_13_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_14_V_blk_n, "cmprpop_local_14_V_blk_n");
    sc_trace(mVcdFile, cmprpop_local_15_V_blk_n, "cmprpop_local_15_V_blk_n");
    sc_trace(mVcdFile, data_num_0_i_blk_n, "data_num_0_i_blk_n");
    sc_trace(mVcdFile, data_num_0_i_out_blk_n, "data_num_0_i_out_blk_n");
    sc_trace(mVcdFile, trunc_ln138_fu_456_p1, "trunc_ln138_fu_456_p1");
    sc_trace(mVcdFile, trunc_ln138_reg_1243, "trunc_ln138_reg_1243");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, and_ln1355_fu_474_p2, "and_ln1355_fu_474_p2");
    sc_trace(mVcdFile, and_ln1355_reg_1248, "and_ln1355_reg_1248");
    sc_trace(mVcdFile, cmprpop_local_0_V_read_reg_1253, "cmprpop_local_0_V_read_reg_1253");
    sc_trace(mVcdFile, and_ln1355_1_fu_480_p2, "and_ln1355_1_fu_480_p2");
    sc_trace(mVcdFile, and_ln1355_1_reg_1258, "and_ln1355_1_reg_1258");
    sc_trace(mVcdFile, cmprpop_local_1_V_read_reg_1263, "cmprpop_local_1_V_read_reg_1263");
    sc_trace(mVcdFile, and_ln1355_2_fu_486_p2, "and_ln1355_2_fu_486_p2");
    sc_trace(mVcdFile, and_ln1355_2_reg_1268, "and_ln1355_2_reg_1268");
    sc_trace(mVcdFile, cmprpop_local_2_V_read_reg_1273, "cmprpop_local_2_V_read_reg_1273");
    sc_trace(mVcdFile, and_ln1355_3_fu_492_p2, "and_ln1355_3_fu_492_p2");
    sc_trace(mVcdFile, and_ln1355_3_reg_1278, "and_ln1355_3_reg_1278");
    sc_trace(mVcdFile, cmprpop_local_3_V_read_reg_1283, "cmprpop_local_3_V_read_reg_1283");
    sc_trace(mVcdFile, and_ln1355_4_fu_498_p2, "and_ln1355_4_fu_498_p2");
    sc_trace(mVcdFile, and_ln1355_4_reg_1288, "and_ln1355_4_reg_1288");
    sc_trace(mVcdFile, cmprpop_local_4_V_read_reg_1293, "cmprpop_local_4_V_read_reg_1293");
    sc_trace(mVcdFile, and_ln1355_5_fu_504_p2, "and_ln1355_5_fu_504_p2");
    sc_trace(mVcdFile, and_ln1355_5_reg_1298, "and_ln1355_5_reg_1298");
    sc_trace(mVcdFile, cmprpop_local_5_V_read_reg_1303, "cmprpop_local_5_V_read_reg_1303");
    sc_trace(mVcdFile, and_ln1355_6_fu_510_p2, "and_ln1355_6_fu_510_p2");
    sc_trace(mVcdFile, and_ln1355_6_reg_1308, "and_ln1355_6_reg_1308");
    sc_trace(mVcdFile, cmprpop_local_6_V_read_reg_1313, "cmprpop_local_6_V_read_reg_1313");
    sc_trace(mVcdFile, and_ln1355_7_fu_516_p2, "and_ln1355_7_fu_516_p2");
    sc_trace(mVcdFile, and_ln1355_7_reg_1318, "and_ln1355_7_reg_1318");
    sc_trace(mVcdFile, cmprpop_local_7_V_read_reg_1323, "cmprpop_local_7_V_read_reg_1323");
    sc_trace(mVcdFile, and_ln1355_8_fu_522_p2, "and_ln1355_8_fu_522_p2");
    sc_trace(mVcdFile, and_ln1355_8_reg_1328, "and_ln1355_8_reg_1328");
    sc_trace(mVcdFile, cmprpop_local_8_V_read_reg_1333, "cmprpop_local_8_V_read_reg_1333");
    sc_trace(mVcdFile, and_ln1355_9_fu_528_p2, "and_ln1355_9_fu_528_p2");
    sc_trace(mVcdFile, and_ln1355_9_reg_1338, "and_ln1355_9_reg_1338");
    sc_trace(mVcdFile, cmprpop_local_9_V_read_reg_1343, "cmprpop_local_9_V_read_reg_1343");
    sc_trace(mVcdFile, and_ln1355_10_fu_534_p2, "and_ln1355_10_fu_534_p2");
    sc_trace(mVcdFile, and_ln1355_10_reg_1348, "and_ln1355_10_reg_1348");
    sc_trace(mVcdFile, cmprpop_local_10_V_read_reg_1353, "cmprpop_local_10_V_read_reg_1353");
    sc_trace(mVcdFile, and_ln1355_11_fu_540_p2, "and_ln1355_11_fu_540_p2");
    sc_trace(mVcdFile, and_ln1355_11_reg_1358, "and_ln1355_11_reg_1358");
    sc_trace(mVcdFile, cmprpop_local_11_V_read_reg_1363, "cmprpop_local_11_V_read_reg_1363");
    sc_trace(mVcdFile, and_ln1355_12_fu_546_p2, "and_ln1355_12_fu_546_p2");
    sc_trace(mVcdFile, and_ln1355_12_reg_1368, "and_ln1355_12_reg_1368");
    sc_trace(mVcdFile, cmprpop_local_12_V_read_reg_1373, "cmprpop_local_12_V_read_reg_1373");
    sc_trace(mVcdFile, and_ln1355_13_fu_552_p2, "and_ln1355_13_fu_552_p2");
    sc_trace(mVcdFile, and_ln1355_13_reg_1378, "and_ln1355_13_reg_1378");
    sc_trace(mVcdFile, cmprpop_local_13_V_read_reg_1383, "cmprpop_local_13_V_read_reg_1383");
    sc_trace(mVcdFile, and_ln1355_14_fu_558_p2, "and_ln1355_14_fu_558_p2");
    sc_trace(mVcdFile, and_ln1355_14_reg_1388, "and_ln1355_14_reg_1388");
    sc_trace(mVcdFile, cmprpop_local_14_V_read_reg_1393, "cmprpop_local_14_V_read_reg_1393");
    sc_trace(mVcdFile, and_ln1355_15_fu_564_p2, "and_ln1355_15_fu_564_p2");
    sc_trace(mVcdFile, and_ln1355_15_reg_1398, "and_ln1355_15_reg_1398");
    sc_trace(mVcdFile, cmprpop_local_15_V_read_reg_1403, "cmprpop_local_15_V_read_reg_1403");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_start, "grp_popcntdata_fu_376_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_done, "grp_popcntdata_fu_376_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_idle, "grp_popcntdata_fu_376_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_ready, "grp_popcntdata_fu_376_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_return, "grp_popcntdata_fu_376_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_start, "grp_popcntdata_fu_381_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_done, "grp_popcntdata_fu_381_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_idle, "grp_popcntdata_fu_381_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_ready, "grp_popcntdata_fu_381_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_return, "grp_popcntdata_fu_381_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_start, "grp_popcntdata_fu_386_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_done, "grp_popcntdata_fu_386_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_idle, "grp_popcntdata_fu_386_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_ready, "grp_popcntdata_fu_386_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_return, "grp_popcntdata_fu_386_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_start, "grp_popcntdata_fu_391_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_done, "grp_popcntdata_fu_391_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_idle, "grp_popcntdata_fu_391_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_ready, "grp_popcntdata_fu_391_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_return, "grp_popcntdata_fu_391_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_start, "grp_popcntdata_fu_396_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_done, "grp_popcntdata_fu_396_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_idle, "grp_popcntdata_fu_396_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_ready, "grp_popcntdata_fu_396_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_return, "grp_popcntdata_fu_396_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_start, "grp_popcntdata_fu_401_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_done, "grp_popcntdata_fu_401_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_idle, "grp_popcntdata_fu_401_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_ready, "grp_popcntdata_fu_401_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_return, "grp_popcntdata_fu_401_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_start, "grp_popcntdata_fu_406_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_done, "grp_popcntdata_fu_406_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_idle, "grp_popcntdata_fu_406_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_ready, "grp_popcntdata_fu_406_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_return, "grp_popcntdata_fu_406_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_start, "grp_popcntdata_fu_411_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_done, "grp_popcntdata_fu_411_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_idle, "grp_popcntdata_fu_411_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_ready, "grp_popcntdata_fu_411_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_return, "grp_popcntdata_fu_411_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_start, "grp_popcntdata_fu_416_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_done, "grp_popcntdata_fu_416_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_idle, "grp_popcntdata_fu_416_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_ready, "grp_popcntdata_fu_416_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_return, "grp_popcntdata_fu_416_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_start, "grp_popcntdata_fu_421_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_done, "grp_popcntdata_fu_421_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_idle, "grp_popcntdata_fu_421_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_ready, "grp_popcntdata_fu_421_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_return, "grp_popcntdata_fu_421_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_start, "grp_popcntdata_fu_426_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_done, "grp_popcntdata_fu_426_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_idle, "grp_popcntdata_fu_426_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_ready, "grp_popcntdata_fu_426_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_return, "grp_popcntdata_fu_426_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_start, "grp_popcntdata_fu_431_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_done, "grp_popcntdata_fu_431_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_idle, "grp_popcntdata_fu_431_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_ready, "grp_popcntdata_fu_431_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_return, "grp_popcntdata_fu_431_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_start, "grp_popcntdata_fu_436_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_done, "grp_popcntdata_fu_436_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_idle, "grp_popcntdata_fu_436_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_ready, "grp_popcntdata_fu_436_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_return, "grp_popcntdata_fu_436_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_start, "grp_popcntdata_fu_441_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_done, "grp_popcntdata_fu_441_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_idle, "grp_popcntdata_fu_441_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_ready, "grp_popcntdata_fu_441_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_return, "grp_popcntdata_fu_441_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_start, "grp_popcntdata_fu_446_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_done, "grp_popcntdata_fu_446_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_idle, "grp_popcntdata_fu_446_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_ready, "grp_popcntdata_fu_446_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_return, "grp_popcntdata_fu_446_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_start, "grp_popcntdata_fu_451_ap_start");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_done, "grp_popcntdata_fu_451_ap_done");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_idle, "grp_popcntdata_fu_451_ap_idle");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_ready, "grp_popcntdata_fu_451_ap_ready");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_return, "grp_popcntdata_fu_451_ap_return");
    sc_trace(mVcdFile, grp_popcntdata_fu_376_ap_start_reg, "grp_popcntdata_fu_376_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_popcntdata_fu_381_ap_start_reg, "grp_popcntdata_fu_381_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_386_ap_start_reg, "grp_popcntdata_fu_386_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_391_ap_start_reg, "grp_popcntdata_fu_391_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_396_ap_start_reg, "grp_popcntdata_fu_396_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_401_ap_start_reg, "grp_popcntdata_fu_401_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_406_ap_start_reg, "grp_popcntdata_fu_406_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_411_ap_start_reg, "grp_popcntdata_fu_411_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_416_ap_start_reg, "grp_popcntdata_fu_416_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_421_ap_start_reg, "grp_popcntdata_fu_421_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_426_ap_start_reg, "grp_popcntdata_fu_426_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_431_ap_start_reg, "grp_popcntdata_fu_431_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_436_ap_start_reg, "grp_popcntdata_fu_436_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_441_ap_start_reg, "grp_popcntdata_fu_441_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_446_ap_start_reg, "grp_popcntdata_fu_446_ap_start_reg");
    sc_trace(mVcdFile, grp_popcntdata_fu_451_ap_start_reg, "grp_popcntdata_fu_451_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state3_on_subcall_done, "ap_block_state3_on_subcall_done");
    sc_trace(mVcdFile, tmp_fu_460_p5, "tmp_fu_460_p5");
    sc_trace(mVcdFile, tmp_fu_460_p6, "tmp_fu_460_p6");
    sc_trace(mVcdFile, tmp_1_fu_570_p6, "tmp_1_fu_570_p6");
    sc_trace(mVcdFile, zext_ln215_fu_583_p1, "zext_ln215_fu_583_p1");
    sc_trace(mVcdFile, zext_ln215_1_fu_587_p1, "zext_ln215_1_fu_587_p1");
    sc_trace(mVcdFile, add_ln1353_fu_590_p2, "add_ln1353_fu_590_p2");
    sc_trace(mVcdFile, zext_ln215_2_fu_596_p1, "zext_ln215_2_fu_596_p1");
    sc_trace(mVcdFile, zext_ln215_3_fu_600_p1, "zext_ln215_3_fu_600_p1");
    sc_trace(mVcdFile, sub_ln1354_fu_604_p2, "sub_ln1354_fu_604_p2");
    sc_trace(mVcdFile, icmp_ln54_fu_610_p2, "icmp_ln54_fu_610_p2");
    sc_trace(mVcdFile, zext_ln215_4_fu_622_p1, "zext_ln215_4_fu_622_p1");
    sc_trace(mVcdFile, add_ln1353_1_fu_625_p2, "add_ln1353_1_fu_625_p2");
    sc_trace(mVcdFile, zext_ln215_5_fu_631_p1, "zext_ln215_5_fu_631_p1");
    sc_trace(mVcdFile, zext_ln215_6_fu_635_p1, "zext_ln215_6_fu_635_p1");
    sc_trace(mVcdFile, sub_ln1354_1_fu_639_p2, "sub_ln1354_1_fu_639_p2");
    sc_trace(mVcdFile, icmp_ln54_1_fu_645_p2, "icmp_ln54_1_fu_645_p2");
    sc_trace(mVcdFile, zext_ln215_7_fu_657_p1, "zext_ln215_7_fu_657_p1");
    sc_trace(mVcdFile, add_ln1353_2_fu_660_p2, "add_ln1353_2_fu_660_p2");
    sc_trace(mVcdFile, zext_ln215_8_fu_666_p1, "zext_ln215_8_fu_666_p1");
    sc_trace(mVcdFile, zext_ln215_9_fu_670_p1, "zext_ln215_9_fu_670_p1");
    sc_trace(mVcdFile, sub_ln1354_2_fu_674_p2, "sub_ln1354_2_fu_674_p2");
    sc_trace(mVcdFile, icmp_ln54_2_fu_680_p2, "icmp_ln54_2_fu_680_p2");
    sc_trace(mVcdFile, zext_ln215_10_fu_692_p1, "zext_ln215_10_fu_692_p1");
    sc_trace(mVcdFile, add_ln1353_3_fu_695_p2, "add_ln1353_3_fu_695_p2");
    sc_trace(mVcdFile, zext_ln215_11_fu_701_p1, "zext_ln215_11_fu_701_p1");
    sc_trace(mVcdFile, zext_ln215_12_fu_705_p1, "zext_ln215_12_fu_705_p1");
    sc_trace(mVcdFile, sub_ln1354_3_fu_709_p2, "sub_ln1354_3_fu_709_p2");
    sc_trace(mVcdFile, icmp_ln54_3_fu_715_p2, "icmp_ln54_3_fu_715_p2");
    sc_trace(mVcdFile, zext_ln215_13_fu_727_p1, "zext_ln215_13_fu_727_p1");
    sc_trace(mVcdFile, add_ln1353_4_fu_730_p2, "add_ln1353_4_fu_730_p2");
    sc_trace(mVcdFile, zext_ln215_14_fu_736_p1, "zext_ln215_14_fu_736_p1");
    sc_trace(mVcdFile, zext_ln215_15_fu_740_p1, "zext_ln215_15_fu_740_p1");
    sc_trace(mVcdFile, sub_ln1354_4_fu_744_p2, "sub_ln1354_4_fu_744_p2");
    sc_trace(mVcdFile, icmp_ln54_4_fu_750_p2, "icmp_ln54_4_fu_750_p2");
    sc_trace(mVcdFile, zext_ln215_16_fu_762_p1, "zext_ln215_16_fu_762_p1");
    sc_trace(mVcdFile, add_ln1353_5_fu_765_p2, "add_ln1353_5_fu_765_p2");
    sc_trace(mVcdFile, zext_ln215_17_fu_771_p1, "zext_ln215_17_fu_771_p1");
    sc_trace(mVcdFile, zext_ln215_18_fu_775_p1, "zext_ln215_18_fu_775_p1");
    sc_trace(mVcdFile, sub_ln1354_5_fu_779_p2, "sub_ln1354_5_fu_779_p2");
    sc_trace(mVcdFile, icmp_ln54_5_fu_785_p2, "icmp_ln54_5_fu_785_p2");
    sc_trace(mVcdFile, zext_ln215_19_fu_797_p1, "zext_ln215_19_fu_797_p1");
    sc_trace(mVcdFile, add_ln1353_6_fu_800_p2, "add_ln1353_6_fu_800_p2");
    sc_trace(mVcdFile, zext_ln215_20_fu_806_p1, "zext_ln215_20_fu_806_p1");
    sc_trace(mVcdFile, zext_ln215_21_fu_810_p1, "zext_ln215_21_fu_810_p1");
    sc_trace(mVcdFile, sub_ln1354_6_fu_814_p2, "sub_ln1354_6_fu_814_p2");
    sc_trace(mVcdFile, icmp_ln54_6_fu_820_p2, "icmp_ln54_6_fu_820_p2");
    sc_trace(mVcdFile, zext_ln215_22_fu_832_p1, "zext_ln215_22_fu_832_p1");
    sc_trace(mVcdFile, add_ln1353_7_fu_835_p2, "add_ln1353_7_fu_835_p2");
    sc_trace(mVcdFile, zext_ln215_23_fu_841_p1, "zext_ln215_23_fu_841_p1");
    sc_trace(mVcdFile, zext_ln215_24_fu_845_p1, "zext_ln215_24_fu_845_p1");
    sc_trace(mVcdFile, sub_ln1354_7_fu_849_p2, "sub_ln1354_7_fu_849_p2");
    sc_trace(mVcdFile, icmp_ln54_7_fu_855_p2, "icmp_ln54_7_fu_855_p2");
    sc_trace(mVcdFile, zext_ln215_25_fu_867_p1, "zext_ln215_25_fu_867_p1");
    sc_trace(mVcdFile, add_ln1353_8_fu_870_p2, "add_ln1353_8_fu_870_p2");
    sc_trace(mVcdFile, zext_ln215_26_fu_876_p1, "zext_ln215_26_fu_876_p1");
    sc_trace(mVcdFile, zext_ln215_27_fu_880_p1, "zext_ln215_27_fu_880_p1");
    sc_trace(mVcdFile, sub_ln1354_8_fu_884_p2, "sub_ln1354_8_fu_884_p2");
    sc_trace(mVcdFile, icmp_ln54_8_fu_890_p2, "icmp_ln54_8_fu_890_p2");
    sc_trace(mVcdFile, zext_ln215_28_fu_902_p1, "zext_ln215_28_fu_902_p1");
    sc_trace(mVcdFile, add_ln1353_9_fu_905_p2, "add_ln1353_9_fu_905_p2");
    sc_trace(mVcdFile, zext_ln215_29_fu_911_p1, "zext_ln215_29_fu_911_p1");
    sc_trace(mVcdFile, zext_ln215_30_fu_915_p1, "zext_ln215_30_fu_915_p1");
    sc_trace(mVcdFile, sub_ln1354_9_fu_919_p2, "sub_ln1354_9_fu_919_p2");
    sc_trace(mVcdFile, icmp_ln54_9_fu_925_p2, "icmp_ln54_9_fu_925_p2");
    sc_trace(mVcdFile, zext_ln215_31_fu_937_p1, "zext_ln215_31_fu_937_p1");
    sc_trace(mVcdFile, add_ln1353_10_fu_940_p2, "add_ln1353_10_fu_940_p2");
    sc_trace(mVcdFile, zext_ln215_32_fu_946_p1, "zext_ln215_32_fu_946_p1");
    sc_trace(mVcdFile, zext_ln215_33_fu_950_p1, "zext_ln215_33_fu_950_p1");
    sc_trace(mVcdFile, sub_ln1354_10_fu_954_p2, "sub_ln1354_10_fu_954_p2");
    sc_trace(mVcdFile, icmp_ln54_10_fu_960_p2, "icmp_ln54_10_fu_960_p2");
    sc_trace(mVcdFile, zext_ln215_34_fu_972_p1, "zext_ln215_34_fu_972_p1");
    sc_trace(mVcdFile, add_ln1353_11_fu_975_p2, "add_ln1353_11_fu_975_p2");
    sc_trace(mVcdFile, zext_ln215_35_fu_981_p1, "zext_ln215_35_fu_981_p1");
    sc_trace(mVcdFile, zext_ln215_36_fu_985_p1, "zext_ln215_36_fu_985_p1");
    sc_trace(mVcdFile, sub_ln1354_11_fu_989_p2, "sub_ln1354_11_fu_989_p2");
    sc_trace(mVcdFile, icmp_ln54_11_fu_995_p2, "icmp_ln54_11_fu_995_p2");
    sc_trace(mVcdFile, zext_ln215_37_fu_1007_p1, "zext_ln215_37_fu_1007_p1");
    sc_trace(mVcdFile, add_ln1353_12_fu_1010_p2, "add_ln1353_12_fu_1010_p2");
    sc_trace(mVcdFile, zext_ln215_38_fu_1016_p1, "zext_ln215_38_fu_1016_p1");
    sc_trace(mVcdFile, zext_ln215_39_fu_1020_p1, "zext_ln215_39_fu_1020_p1");
    sc_trace(mVcdFile, sub_ln1354_12_fu_1024_p2, "sub_ln1354_12_fu_1024_p2");
    sc_trace(mVcdFile, icmp_ln54_12_fu_1030_p2, "icmp_ln54_12_fu_1030_p2");
    sc_trace(mVcdFile, zext_ln215_40_fu_1042_p1, "zext_ln215_40_fu_1042_p1");
    sc_trace(mVcdFile, add_ln1353_13_fu_1045_p2, "add_ln1353_13_fu_1045_p2");
    sc_trace(mVcdFile, zext_ln215_41_fu_1051_p1, "zext_ln215_41_fu_1051_p1");
    sc_trace(mVcdFile, zext_ln215_42_fu_1055_p1, "zext_ln215_42_fu_1055_p1");
    sc_trace(mVcdFile, sub_ln1354_13_fu_1059_p2, "sub_ln1354_13_fu_1059_p2");
    sc_trace(mVcdFile, icmp_ln54_13_fu_1065_p2, "icmp_ln54_13_fu_1065_p2");
    sc_trace(mVcdFile, zext_ln215_43_fu_1077_p1, "zext_ln215_43_fu_1077_p1");
    sc_trace(mVcdFile, add_ln1353_14_fu_1080_p2, "add_ln1353_14_fu_1080_p2");
    sc_trace(mVcdFile, zext_ln215_44_fu_1086_p1, "zext_ln215_44_fu_1086_p1");
    sc_trace(mVcdFile, zext_ln215_45_fu_1090_p1, "zext_ln215_45_fu_1090_p1");
    sc_trace(mVcdFile, sub_ln1354_14_fu_1094_p2, "sub_ln1354_14_fu_1094_p2");
    sc_trace(mVcdFile, icmp_ln54_14_fu_1100_p2, "icmp_ln54_14_fu_1100_p2");
    sc_trace(mVcdFile, zext_ln215_46_fu_1112_p1, "zext_ln215_46_fu_1112_p1");
    sc_trace(mVcdFile, add_ln1353_15_fu_1115_p2, "add_ln1353_15_fu_1115_p2");
    sc_trace(mVcdFile, zext_ln215_47_fu_1121_p1, "zext_ln215_47_fu_1121_p1");
    sc_trace(mVcdFile, zext_ln215_48_fu_1125_p1, "zext_ln215_48_fu_1125_p1");
    sc_trace(mVcdFile, sub_ln1354_15_fu_1129_p2, "sub_ln1354_15_fu_1129_p2");
    sc_trace(mVcdFile, icmp_ln54_15_fu_1135_p2, "icmp_ln54_15_fu_1135_p2");
    sc_trace(mVcdFile, xor_ln54_fu_616_p2, "xor_ln54_fu_616_p2");
    sc_trace(mVcdFile, xor_ln54_1_fu_651_p2, "xor_ln54_1_fu_651_p2");
    sc_trace(mVcdFile, xor_ln54_2_fu_686_p2, "xor_ln54_2_fu_686_p2");
    sc_trace(mVcdFile, xor_ln54_3_fu_721_p2, "xor_ln54_3_fu_721_p2");
    sc_trace(mVcdFile, xor_ln54_4_fu_756_p2, "xor_ln54_4_fu_756_p2");
    sc_trace(mVcdFile, xor_ln54_5_fu_791_p2, "xor_ln54_5_fu_791_p2");
    sc_trace(mVcdFile, xor_ln54_6_fu_826_p2, "xor_ln54_6_fu_826_p2");
    sc_trace(mVcdFile, xor_ln54_7_fu_861_p2, "xor_ln54_7_fu_861_p2");
    sc_trace(mVcdFile, xor_ln54_8_fu_896_p2, "xor_ln54_8_fu_896_p2");
    sc_trace(mVcdFile, xor_ln54_9_fu_931_p2, "xor_ln54_9_fu_931_p2");
    sc_trace(mVcdFile, xor_ln54_10_fu_966_p2, "xor_ln54_10_fu_966_p2");
    sc_trace(mVcdFile, xor_ln54_11_fu_1001_p2, "xor_ln54_11_fu_1001_p2");
    sc_trace(mVcdFile, xor_ln54_12_fu_1036_p2, "xor_ln54_12_fu_1036_p2");
    sc_trace(mVcdFile, xor_ln54_13_fu_1071_p2, "xor_ln54_13_fu_1071_p2");
    sc_trace(mVcdFile, xor_ln54_14_fu_1106_p2, "xor_ln54_14_fu_1106_p2");
    sc_trace(mVcdFile, xor_ln54_15_fu_1141_p2, "xor_ln54_15_fu_1141_p2");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_return_8_preg, "ap_return_8_preg");
    sc_trace(mVcdFile, ap_return_9_preg, "ap_return_9_preg");
    sc_trace(mVcdFile, ap_return_10_preg, "ap_return_10_preg");
    sc_trace(mVcdFile, ap_return_11_preg, "ap_return_11_preg");
    sc_trace(mVcdFile, ap_return_12_preg, "ap_return_12_preg");
    sc_trace(mVcdFile, ap_return_13_preg, "ap_return_13_preg");
    sc_trace(mVcdFile, ap_return_14_preg, "ap_return_14_preg");
    sc_trace(mVcdFile, ap_return_15_preg, "ap_return_15_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

tancalc_calculation::~tancalc_calculation() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_popcntdata_fu_376;
    delete grp_popcntdata_fu_381;
    delete grp_popcntdata_fu_386;
    delete grp_popcntdata_fu_391;
    delete grp_popcntdata_fu_396;
    delete grp_popcntdata_fu_401;
    delete grp_popcntdata_fu_406;
    delete grp_popcntdata_fu_411;
    delete grp_popcntdata_fu_416;
    delete grp_popcntdata_fu_421;
    delete grp_popcntdata_fu_426;
    delete grp_popcntdata_fu_431;
    delete grp_popcntdata_fu_436;
    delete grp_popcntdata_fu_441;
    delete grp_popcntdata_fu_446;
    delete grp_popcntdata_fu_451;
    delete tancalc_mux_42_1024_1_1_U215;
    delete tancalc_mux_42_11_1_1_U216;
}

void tancalc_calculation::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                    esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_0_preg = xor_ln54_fu_616_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_10_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_10_preg = xor_ln54_10_fu_966_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_11_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_11_preg = xor_ln54_11_fu_1001_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_12_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_12_preg = xor_ln54_12_fu_1036_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_13_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_13_preg = xor_ln54_13_fu_1071_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_14_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_14_preg = xor_ln54_14_fu_1106_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_15_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_15_preg = xor_ln54_15_fu_1141_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_1_preg = xor_ln54_1_fu_651_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_2_preg = xor_ln54_2_fu_686_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_3_preg = xor_ln54_3_fu_721_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_4_preg = xor_ln54_4_fu_756_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_5_preg = xor_ln54_5_fu_791_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_6_preg = xor_ln54_6_fu_826_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_7_preg = xor_ln54_7_fu_861_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_8_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_8_preg = xor_ln54_8_fu_896_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_9_preg = ap_const_lv1_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_9_preg = xor_ln54_9_fu_931_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_376_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_376_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_376_ap_ready.read())) {
            grp_popcntdata_fu_376_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_381_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_381_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_381_ap_ready.read())) {
            grp_popcntdata_fu_381_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_386_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_386_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_386_ap_ready.read())) {
            grp_popcntdata_fu_386_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_391_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_391_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_391_ap_ready.read())) {
            grp_popcntdata_fu_391_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_396_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_396_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_396_ap_ready.read())) {
            grp_popcntdata_fu_396_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_401_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_401_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_401_ap_ready.read())) {
            grp_popcntdata_fu_401_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_406_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_406_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_406_ap_ready.read())) {
            grp_popcntdata_fu_406_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_411_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_411_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_411_ap_ready.read())) {
            grp_popcntdata_fu_411_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_416_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_416_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_416_ap_ready.read())) {
            grp_popcntdata_fu_416_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_421_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_421_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_421_ap_ready.read())) {
            grp_popcntdata_fu_421_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_426_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_426_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_426_ap_ready.read())) {
            grp_popcntdata_fu_426_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_431_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_431_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_431_ap_ready.read())) {
            grp_popcntdata_fu_431_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_436_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_436_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_436_ap_ready.read())) {
            grp_popcntdata_fu_436_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_441_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_441_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_441_ap_ready.read())) {
            grp_popcntdata_fu_441_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_446_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_446_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_446_ap_ready.read())) {
            grp_popcntdata_fu_446_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_popcntdata_fu_451_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            grp_popcntdata_fu_451_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_popcntdata_fu_451_ap_ready.read())) {
            grp_popcntdata_fu_451_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        and_ln1355_10_reg_1348 = and_ln1355_10_fu_534_p2.read();
        and_ln1355_11_reg_1358 = and_ln1355_11_fu_540_p2.read();
        and_ln1355_12_reg_1368 = and_ln1355_12_fu_546_p2.read();
        and_ln1355_13_reg_1378 = and_ln1355_13_fu_552_p2.read();
        and_ln1355_14_reg_1388 = and_ln1355_14_fu_558_p2.read();
        and_ln1355_15_reg_1398 = and_ln1355_15_fu_564_p2.read();
        and_ln1355_1_reg_1258 = and_ln1355_1_fu_480_p2.read();
        and_ln1355_2_reg_1268 = and_ln1355_2_fu_486_p2.read();
        and_ln1355_3_reg_1278 = and_ln1355_3_fu_492_p2.read();
        and_ln1355_4_reg_1288 = and_ln1355_4_fu_498_p2.read();
        and_ln1355_5_reg_1298 = and_ln1355_5_fu_504_p2.read();
        and_ln1355_6_reg_1308 = and_ln1355_6_fu_510_p2.read();
        and_ln1355_7_reg_1318 = and_ln1355_7_fu_516_p2.read();
        and_ln1355_8_reg_1328 = and_ln1355_8_fu_522_p2.read();
        and_ln1355_9_reg_1338 = and_ln1355_9_fu_528_p2.read();
        and_ln1355_reg_1248 = and_ln1355_fu_474_p2.read();
        cmprpop_local_0_V_read_reg_1253 = cmprpop_local_0_V_dout.read();
        cmprpop_local_10_V_read_reg_1353 = cmprpop_local_10_V_dout.read();
        cmprpop_local_11_V_read_reg_1363 = cmprpop_local_11_V_dout.read();
        cmprpop_local_12_V_read_reg_1373 = cmprpop_local_12_V_dout.read();
        cmprpop_local_13_V_read_reg_1383 = cmprpop_local_13_V_dout.read();
        cmprpop_local_14_V_read_reg_1393 = cmprpop_local_14_V_dout.read();
        cmprpop_local_15_V_read_reg_1403 = cmprpop_local_15_V_dout.read();
        cmprpop_local_1_V_read_reg_1263 = cmprpop_local_1_V_dout.read();
        cmprpop_local_2_V_read_reg_1273 = cmprpop_local_2_V_dout.read();
        cmprpop_local_3_V_read_reg_1283 = cmprpop_local_3_V_dout.read();
        cmprpop_local_4_V_read_reg_1293 = cmprpop_local_4_V_dout.read();
        cmprpop_local_5_V_read_reg_1303 = cmprpop_local_5_V_dout.read();
        cmprpop_local_6_V_read_reg_1313 = cmprpop_local_6_V_dout.read();
        cmprpop_local_7_V_read_reg_1323 = cmprpop_local_7_V_dout.read();
        cmprpop_local_8_V_read_reg_1333 = cmprpop_local_8_V_dout.read();
        cmprpop_local_9_V_read_reg_1343 = cmprpop_local_9_V_dout.read();
        trunc_ln138_reg_1243 = trunc_ln138_fu_456_p1.read();
    }
}

void tancalc_calculation::thread_add_ln1353_10_fu_940_p2() {
    add_ln1353_10_fu_940_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_31_fu_937_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_31_fu_937_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_11_fu_975_p2() {
    add_ln1353_11_fu_975_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_34_fu_972_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_34_fu_972_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_12_fu_1010_p2() {
    add_ln1353_12_fu_1010_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_37_fu_1007_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_37_fu_1007_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_13_fu_1045_p2() {
    add_ln1353_13_fu_1045_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_40_fu_1042_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_40_fu_1042_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_14_fu_1080_p2() {
    add_ln1353_14_fu_1080_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_43_fu_1077_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_43_fu_1077_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_15_fu_1115_p2() {
    add_ln1353_15_fu_1115_p2 = (!zext_ln215_46_fu_1112_p1.read().is_01() || !zext_ln215_fu_583_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_46_fu_1112_p1.read()) + sc_biguint<12>(zext_ln215_fu_583_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_1_fu_625_p2() {
    add_ln1353_1_fu_625_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_4_fu_622_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_4_fu_622_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_2_fu_660_p2() {
    add_ln1353_2_fu_660_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_7_fu_657_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_7_fu_657_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_3_fu_695_p2() {
    add_ln1353_3_fu_695_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_10_fu_692_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_10_fu_692_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_4_fu_730_p2() {
    add_ln1353_4_fu_730_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_13_fu_727_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_13_fu_727_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_5_fu_765_p2() {
    add_ln1353_5_fu_765_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_16_fu_762_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_16_fu_762_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_6_fu_800_p2() {
    add_ln1353_6_fu_800_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_19_fu_797_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_19_fu_797_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_7_fu_835_p2() {
    add_ln1353_7_fu_835_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_22_fu_832_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_22_fu_832_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_8_fu_870_p2() {
    add_ln1353_8_fu_870_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_25_fu_867_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_25_fu_867_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_9_fu_905_p2() {
    add_ln1353_9_fu_905_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_28_fu_902_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_28_fu_902_p1.read()));
}

void tancalc_calculation::thread_add_ln1353_fu_590_p2() {
    add_ln1353_fu_590_p2 = (!zext_ln215_fu_583_p1.read().is_01() || !zext_ln215_1_fu_587_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln215_fu_583_p1.read()) + sc_biguint<12>(zext_ln215_1_fu_587_p1.read()));
}

void tancalc_calculation::thread_and_ln1355_10_fu_534_p2() {
    and_ln1355_10_fu_534_p2 = (cmpr_local_10_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_11_fu_540_p2() {
    and_ln1355_11_fu_540_p2 = (cmpr_local_11_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_12_fu_546_p2() {
    and_ln1355_12_fu_546_p2 = (cmpr_local_12_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_13_fu_552_p2() {
    and_ln1355_13_fu_552_p2 = (cmpr_local_13_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_14_fu_558_p2() {
    and_ln1355_14_fu_558_p2 = (cmpr_local_14_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_15_fu_564_p2() {
    and_ln1355_15_fu_564_p2 = (cmpr_local_15_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_1_fu_480_p2() {
    and_ln1355_1_fu_480_p2 = (cmpr_local_1_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_2_fu_486_p2() {
    and_ln1355_2_fu_486_p2 = (cmpr_local_2_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_3_fu_492_p2() {
    and_ln1355_3_fu_492_p2 = (cmpr_local_3_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_4_fu_498_p2() {
    and_ln1355_4_fu_498_p2 = (cmpr_local_4_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_5_fu_504_p2() {
    and_ln1355_5_fu_504_p2 = (cmpr_local_5_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_6_fu_510_p2() {
    and_ln1355_6_fu_510_p2 = (cmpr_local_6_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_7_fu_516_p2() {
    and_ln1355_7_fu_516_p2 = (cmpr_local_7_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_8_fu_522_p2() {
    and_ln1355_8_fu_522_p2 = (cmpr_local_8_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_9_fu_528_p2() {
    and_ln1355_9_fu_528_p2 = (cmpr_local_9_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_and_ln1355_fu_474_p2() {
    and_ln1355_fu_474_p2 = (cmpr_local_0_V_dout.read() & tmp_fu_460_p6.read());
}

void tancalc_calculation::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void tancalc_calculation::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void tancalc_calculation::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void tancalc_calculation::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void tancalc_calculation::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_376_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_381_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_386_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_391_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_396_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_401_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_406_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_411_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_416_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_421_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_426_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_431_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_436_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_441_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_446_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_popcntdata_fu_451_ap_done.read()));
}

void tancalc_calculation::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void tancalc_calculation::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_0 = xor_ln54_fu_616_p2.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_1 = xor_ln54_1_fu_651_p2.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_10 = xor_ln54_10_fu_966_p2.read();
    } else {
        ap_return_10 = ap_return_10_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_11() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_11 = xor_ln54_11_fu_1001_p2.read();
    } else {
        ap_return_11 = ap_return_11_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_12() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_12 = xor_ln54_12_fu_1036_p2.read();
    } else {
        ap_return_12 = ap_return_12_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_13() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_13 = xor_ln54_13_fu_1071_p2.read();
    } else {
        ap_return_13 = ap_return_13_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_14() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_14 = xor_ln54_14_fu_1106_p2.read();
    } else {
        ap_return_14 = ap_return_14_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_15() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_15 = xor_ln54_15_fu_1141_p2.read();
    } else {
        ap_return_15 = ap_return_15_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_2 = xor_ln54_2_fu_686_p2.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_3 = xor_ln54_3_fu_721_p2.read();
    } else {
        ap_return_3 = ap_return_3_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_4 = xor_ln54_4_fu_756_p2.read();
    } else {
        ap_return_4 = ap_return_4_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_5() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_5 = xor_ln54_5_fu_791_p2.read();
    } else {
        ap_return_5 = ap_return_5_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_6() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_6 = xor_ln54_6_fu_826_p2.read();
    } else {
        ap_return_6 = ap_return_6_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_7() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_7 = xor_ln54_7_fu_861_p2.read();
    } else {
        ap_return_7 = ap_return_7_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_8 = xor_ln54_8_fu_896_p2.read();
    } else {
        ap_return_8 = ap_return_8_preg.read();
    }
}

void tancalc_calculation::thread_ap_return_9() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return_9 = xor_ln54_9_fu_931_p2.read();
    } else {
        ap_return_9 = ap_return_9_preg.read();
    }
}

void tancalc_calculation::thread_cmpr_local_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_0_V_blk_n = cmpr_local_0_V_empty_n.read();
    } else {
        cmpr_local_0_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_0_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_0_V_read = ap_const_logic_1;
    } else {
        cmpr_local_0_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_10_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_10_V_blk_n = cmpr_local_10_V_empty_n.read();
    } else {
        cmpr_local_10_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_10_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_10_V_read = ap_const_logic_1;
    } else {
        cmpr_local_10_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_11_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_11_V_blk_n = cmpr_local_11_V_empty_n.read();
    } else {
        cmpr_local_11_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_11_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_11_V_read = ap_const_logic_1;
    } else {
        cmpr_local_11_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_12_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_12_V_blk_n = cmpr_local_12_V_empty_n.read();
    } else {
        cmpr_local_12_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_12_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_12_V_read = ap_const_logic_1;
    } else {
        cmpr_local_12_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_13_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_13_V_blk_n = cmpr_local_13_V_empty_n.read();
    } else {
        cmpr_local_13_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_13_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_13_V_read = ap_const_logic_1;
    } else {
        cmpr_local_13_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_14_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_14_V_blk_n = cmpr_local_14_V_empty_n.read();
    } else {
        cmpr_local_14_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_14_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_14_V_read = ap_const_logic_1;
    } else {
        cmpr_local_14_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_15_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_15_V_blk_n = cmpr_local_15_V_empty_n.read();
    } else {
        cmpr_local_15_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_15_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_15_V_read = ap_const_logic_1;
    } else {
        cmpr_local_15_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_1_V_blk_n = cmpr_local_1_V_empty_n.read();
    } else {
        cmpr_local_1_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_1_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_1_V_read = ap_const_logic_1;
    } else {
        cmpr_local_1_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_2_V_blk_n = cmpr_local_2_V_empty_n.read();
    } else {
        cmpr_local_2_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_2_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_2_V_read = ap_const_logic_1;
    } else {
        cmpr_local_2_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_3_V_blk_n = cmpr_local_3_V_empty_n.read();
    } else {
        cmpr_local_3_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_3_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_3_V_read = ap_const_logic_1;
    } else {
        cmpr_local_3_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_4_V_blk_n = cmpr_local_4_V_empty_n.read();
    } else {
        cmpr_local_4_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_4_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_4_V_read = ap_const_logic_1;
    } else {
        cmpr_local_4_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_5_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_5_V_blk_n = cmpr_local_5_V_empty_n.read();
    } else {
        cmpr_local_5_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_5_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_5_V_read = ap_const_logic_1;
    } else {
        cmpr_local_5_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_6_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_6_V_blk_n = cmpr_local_6_V_empty_n.read();
    } else {
        cmpr_local_6_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_6_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_6_V_read = ap_const_logic_1;
    } else {
        cmpr_local_6_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_7_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_7_V_blk_n = cmpr_local_7_V_empty_n.read();
    } else {
        cmpr_local_7_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_7_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_7_V_read = ap_const_logic_1;
    } else {
        cmpr_local_7_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_8_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_8_V_blk_n = cmpr_local_8_V_empty_n.read();
    } else {
        cmpr_local_8_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_8_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_8_V_read = ap_const_logic_1;
    } else {
        cmpr_local_8_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmpr_local_9_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmpr_local_9_V_blk_n = cmpr_local_9_V_empty_n.read();
    } else {
        cmpr_local_9_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmpr_local_9_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmpr_local_9_V_read = ap_const_logic_1;
    } else {
        cmpr_local_9_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_0_V_blk_n = cmprpop_local_0_V_empty_n.read();
    } else {
        cmprpop_local_0_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_0_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_0_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_0_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_10_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_10_V_blk_n = cmprpop_local_10_V_empty_n.read();
    } else {
        cmprpop_local_10_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_10_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_10_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_10_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_11_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_11_V_blk_n = cmprpop_local_11_V_empty_n.read();
    } else {
        cmprpop_local_11_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_11_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_11_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_11_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_12_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_12_V_blk_n = cmprpop_local_12_V_empty_n.read();
    } else {
        cmprpop_local_12_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_12_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_12_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_12_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_13_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_13_V_blk_n = cmprpop_local_13_V_empty_n.read();
    } else {
        cmprpop_local_13_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_13_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_13_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_13_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_14_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_14_V_blk_n = cmprpop_local_14_V_empty_n.read();
    } else {
        cmprpop_local_14_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_14_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_14_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_14_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_15_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_15_V_blk_n = cmprpop_local_15_V_empty_n.read();
    } else {
        cmprpop_local_15_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_15_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_15_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_15_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_1_V_blk_n = cmprpop_local_1_V_empty_n.read();
    } else {
        cmprpop_local_1_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_1_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_1_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_1_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_2_V_blk_n = cmprpop_local_2_V_empty_n.read();
    } else {
        cmprpop_local_2_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_2_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_2_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_2_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_3_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_3_V_blk_n = cmprpop_local_3_V_empty_n.read();
    } else {
        cmprpop_local_3_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_3_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_3_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_3_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_4_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_4_V_blk_n = cmprpop_local_4_V_empty_n.read();
    } else {
        cmprpop_local_4_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_4_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_4_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_4_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_5_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_5_V_blk_n = cmprpop_local_5_V_empty_n.read();
    } else {
        cmprpop_local_5_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_5_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_5_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_5_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_6_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_6_V_blk_n = cmprpop_local_6_V_empty_n.read();
    } else {
        cmprpop_local_6_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_6_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_6_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_6_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_7_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_7_V_blk_n = cmprpop_local_7_V_empty_n.read();
    } else {
        cmprpop_local_7_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_7_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_7_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_7_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_8_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_8_V_blk_n = cmprpop_local_8_V_empty_n.read();
    } else {
        cmprpop_local_8_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_8_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_8_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_8_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_cmprpop_local_9_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        cmprpop_local_9_V_blk_n = cmprpop_local_9_V_empty_n.read();
    } else {
        cmprpop_local_9_V_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_cmprpop_local_9_V_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        cmprpop_local_9_V_read = ap_const_logic_1;
    } else {
        cmprpop_local_9_V_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_data_num_0_i_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_num_0_i_blk_n = data_num_0_i_empty_n.read();
    } else {
        data_num_0_i_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_data_num_0_i_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        data_num_0_i_out_blk_n = data_num_0_i_out_full_n.read();
    } else {
        data_num_0_i_out_blk_n = ap_const_logic_1;
    }
}

void tancalc_calculation::thread_data_num_0_i_out_din() {
    data_num_0_i_out_din = data_num_0_i_dout.read();
}

void tancalc_calculation::thread_data_num_0_i_out_write() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        data_num_0_i_out_write = ap_const_logic_1;
    } else {
        data_num_0_i_out_write = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_data_num_0_i_read() {
    if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        data_num_0_i_read = ap_const_logic_1;
    } else {
        data_num_0_i_read = ap_const_logic_0;
    }
}

void tancalc_calculation::thread_grp_popcntdata_fu_376_ap_start() {
    grp_popcntdata_fu_376_ap_start = grp_popcntdata_fu_376_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_381_ap_start() {
    grp_popcntdata_fu_381_ap_start = grp_popcntdata_fu_381_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_386_ap_start() {
    grp_popcntdata_fu_386_ap_start = grp_popcntdata_fu_386_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_391_ap_start() {
    grp_popcntdata_fu_391_ap_start = grp_popcntdata_fu_391_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_396_ap_start() {
    grp_popcntdata_fu_396_ap_start = grp_popcntdata_fu_396_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_401_ap_start() {
    grp_popcntdata_fu_401_ap_start = grp_popcntdata_fu_401_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_406_ap_start() {
    grp_popcntdata_fu_406_ap_start = grp_popcntdata_fu_406_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_411_ap_start() {
    grp_popcntdata_fu_411_ap_start = grp_popcntdata_fu_411_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_416_ap_start() {
    grp_popcntdata_fu_416_ap_start = grp_popcntdata_fu_416_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_421_ap_start() {
    grp_popcntdata_fu_421_ap_start = grp_popcntdata_fu_421_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_426_ap_start() {
    grp_popcntdata_fu_426_ap_start = grp_popcntdata_fu_426_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_431_ap_start() {
    grp_popcntdata_fu_431_ap_start = grp_popcntdata_fu_431_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_436_ap_start() {
    grp_popcntdata_fu_436_ap_start = grp_popcntdata_fu_436_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_441_ap_start() {
    grp_popcntdata_fu_441_ap_start = grp_popcntdata_fu_441_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_446_ap_start() {
    grp_popcntdata_fu_446_ap_start = grp_popcntdata_fu_446_ap_start_reg.read();
}

void tancalc_calculation::thread_grp_popcntdata_fu_451_ap_start() {
    grp_popcntdata_fu_451_ap_start = grp_popcntdata_fu_451_ap_start_reg.read();
}

void tancalc_calculation::thread_icmp_ln54_10_fu_960_p2() {
    icmp_ln54_10_fu_960_p2 = (!zext_ln215_33_fu_950_p1.read().is_01() || !sub_ln1354_10_fu_954_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_33_fu_950_p1.read()) < sc_bigint<13>(sub_ln1354_10_fu_954_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_11_fu_995_p2() {
    icmp_ln54_11_fu_995_p2 = (!zext_ln215_36_fu_985_p1.read().is_01() || !sub_ln1354_11_fu_989_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_36_fu_985_p1.read()) < sc_bigint<13>(sub_ln1354_11_fu_989_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_12_fu_1030_p2() {
    icmp_ln54_12_fu_1030_p2 = (!zext_ln215_39_fu_1020_p1.read().is_01() || !sub_ln1354_12_fu_1024_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_39_fu_1020_p1.read()) < sc_bigint<13>(sub_ln1354_12_fu_1024_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_13_fu_1065_p2() {
    icmp_ln54_13_fu_1065_p2 = (!zext_ln215_42_fu_1055_p1.read().is_01() || !sub_ln1354_13_fu_1059_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_42_fu_1055_p1.read()) < sc_bigint<13>(sub_ln1354_13_fu_1059_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_14_fu_1100_p2() {
    icmp_ln54_14_fu_1100_p2 = (!zext_ln215_45_fu_1090_p1.read().is_01() || !sub_ln1354_14_fu_1094_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_45_fu_1090_p1.read()) < sc_bigint<13>(sub_ln1354_14_fu_1094_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_15_fu_1135_p2() {
    icmp_ln54_15_fu_1135_p2 = (!zext_ln215_48_fu_1125_p1.read().is_01() || !sub_ln1354_15_fu_1129_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_48_fu_1125_p1.read()) < sc_bigint<13>(sub_ln1354_15_fu_1129_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_1_fu_645_p2() {
    icmp_ln54_1_fu_645_p2 = (!zext_ln215_6_fu_635_p1.read().is_01() || !sub_ln1354_1_fu_639_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_6_fu_635_p1.read()) < sc_bigint<13>(sub_ln1354_1_fu_639_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_2_fu_680_p2() {
    icmp_ln54_2_fu_680_p2 = (!zext_ln215_9_fu_670_p1.read().is_01() || !sub_ln1354_2_fu_674_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_9_fu_670_p1.read()) < sc_bigint<13>(sub_ln1354_2_fu_674_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_3_fu_715_p2() {
    icmp_ln54_3_fu_715_p2 = (!zext_ln215_12_fu_705_p1.read().is_01() || !sub_ln1354_3_fu_709_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_12_fu_705_p1.read()) < sc_bigint<13>(sub_ln1354_3_fu_709_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_4_fu_750_p2() {
    icmp_ln54_4_fu_750_p2 = (!zext_ln215_15_fu_740_p1.read().is_01() || !sub_ln1354_4_fu_744_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_15_fu_740_p1.read()) < sc_bigint<13>(sub_ln1354_4_fu_744_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_5_fu_785_p2() {
    icmp_ln54_5_fu_785_p2 = (!zext_ln215_18_fu_775_p1.read().is_01() || !sub_ln1354_5_fu_779_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_18_fu_775_p1.read()) < sc_bigint<13>(sub_ln1354_5_fu_779_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_6_fu_820_p2() {
    icmp_ln54_6_fu_820_p2 = (!zext_ln215_21_fu_810_p1.read().is_01() || !sub_ln1354_6_fu_814_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_21_fu_810_p1.read()) < sc_bigint<13>(sub_ln1354_6_fu_814_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_7_fu_855_p2() {
    icmp_ln54_7_fu_855_p2 = (!zext_ln215_24_fu_845_p1.read().is_01() || !sub_ln1354_7_fu_849_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_24_fu_845_p1.read()) < sc_bigint<13>(sub_ln1354_7_fu_849_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_8_fu_890_p2() {
    icmp_ln54_8_fu_890_p2 = (!zext_ln215_27_fu_880_p1.read().is_01() || !sub_ln1354_8_fu_884_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_27_fu_880_p1.read()) < sc_bigint<13>(sub_ln1354_8_fu_884_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_9_fu_925_p2() {
    icmp_ln54_9_fu_925_p2 = (!zext_ln215_30_fu_915_p1.read().is_01() || !sub_ln1354_9_fu_919_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_30_fu_915_p1.read()) < sc_bigint<13>(sub_ln1354_9_fu_919_p2.read()));
}

void tancalc_calculation::thread_icmp_ln54_fu_610_p2() {
    icmp_ln54_fu_610_p2 = (!zext_ln215_3_fu_600_p1.read().is_01() || !sub_ln1354_fu_604_p2.read().is_01())? sc_lv<1>(): (sc_bigint<13>(zext_ln215_3_fu_600_p1.read()) < sc_bigint<13>(sub_ln1354_fu_604_p2.read()));
}

void tancalc_calculation::thread_sub_ln1354_10_fu_954_p2() {
    sub_ln1354_10_fu_954_p2 = (!zext_ln215_32_fu_946_p1.read().is_01() || !zext_ln215_33_fu_950_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_32_fu_946_p1.read()) - sc_biguint<13>(zext_ln215_33_fu_950_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_11_fu_989_p2() {
    sub_ln1354_11_fu_989_p2 = (!zext_ln215_35_fu_981_p1.read().is_01() || !zext_ln215_36_fu_985_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_35_fu_981_p1.read()) - sc_biguint<13>(zext_ln215_36_fu_985_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_12_fu_1024_p2() {
    sub_ln1354_12_fu_1024_p2 = (!zext_ln215_38_fu_1016_p1.read().is_01() || !zext_ln215_39_fu_1020_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_38_fu_1016_p1.read()) - sc_biguint<13>(zext_ln215_39_fu_1020_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_13_fu_1059_p2() {
    sub_ln1354_13_fu_1059_p2 = (!zext_ln215_41_fu_1051_p1.read().is_01() || !zext_ln215_42_fu_1055_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_41_fu_1051_p1.read()) - sc_biguint<13>(zext_ln215_42_fu_1055_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_14_fu_1094_p2() {
    sub_ln1354_14_fu_1094_p2 = (!zext_ln215_44_fu_1086_p1.read().is_01() || !zext_ln215_45_fu_1090_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_44_fu_1086_p1.read()) - sc_biguint<13>(zext_ln215_45_fu_1090_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_15_fu_1129_p2() {
    sub_ln1354_15_fu_1129_p2 = (!zext_ln215_47_fu_1121_p1.read().is_01() || !zext_ln215_48_fu_1125_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_47_fu_1121_p1.read()) - sc_biguint<13>(zext_ln215_48_fu_1125_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_1_fu_639_p2() {
    sub_ln1354_1_fu_639_p2 = (!zext_ln215_5_fu_631_p1.read().is_01() || !zext_ln215_6_fu_635_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_5_fu_631_p1.read()) - sc_biguint<13>(zext_ln215_6_fu_635_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_2_fu_674_p2() {
    sub_ln1354_2_fu_674_p2 = (!zext_ln215_8_fu_666_p1.read().is_01() || !zext_ln215_9_fu_670_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_8_fu_666_p1.read()) - sc_biguint<13>(zext_ln215_9_fu_670_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_3_fu_709_p2() {
    sub_ln1354_3_fu_709_p2 = (!zext_ln215_11_fu_701_p1.read().is_01() || !zext_ln215_12_fu_705_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_11_fu_701_p1.read()) - sc_biguint<13>(zext_ln215_12_fu_705_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_4_fu_744_p2() {
    sub_ln1354_4_fu_744_p2 = (!zext_ln215_14_fu_736_p1.read().is_01() || !zext_ln215_15_fu_740_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_14_fu_736_p1.read()) - sc_biguint<13>(zext_ln215_15_fu_740_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_5_fu_779_p2() {
    sub_ln1354_5_fu_779_p2 = (!zext_ln215_17_fu_771_p1.read().is_01() || !zext_ln215_18_fu_775_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_17_fu_771_p1.read()) - sc_biguint<13>(zext_ln215_18_fu_775_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_6_fu_814_p2() {
    sub_ln1354_6_fu_814_p2 = (!zext_ln215_20_fu_806_p1.read().is_01() || !zext_ln215_21_fu_810_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_20_fu_806_p1.read()) - sc_biguint<13>(zext_ln215_21_fu_810_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_7_fu_849_p2() {
    sub_ln1354_7_fu_849_p2 = (!zext_ln215_23_fu_841_p1.read().is_01() || !zext_ln215_24_fu_845_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_23_fu_841_p1.read()) - sc_biguint<13>(zext_ln215_24_fu_845_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_8_fu_884_p2() {
    sub_ln1354_8_fu_884_p2 = (!zext_ln215_26_fu_876_p1.read().is_01() || !zext_ln215_27_fu_880_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_26_fu_876_p1.read()) - sc_biguint<13>(zext_ln215_27_fu_880_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_9_fu_919_p2() {
    sub_ln1354_9_fu_919_p2 = (!zext_ln215_29_fu_911_p1.read().is_01() || !zext_ln215_30_fu_915_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_29_fu_911_p1.read()) - sc_biguint<13>(zext_ln215_30_fu_915_p1.read()));
}

void tancalc_calculation::thread_sub_ln1354_fu_604_p2() {
    sub_ln1354_fu_604_p2 = (!zext_ln215_2_fu_596_p1.read().is_01() || !zext_ln215_3_fu_600_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(zext_ln215_2_fu_596_p1.read()) - sc_biguint<13>(zext_ln215_3_fu_600_p1.read()));
}

void tancalc_calculation::thread_tmp_fu_460_p5() {
    tmp_fu_460_p5 = data_num_0_i_dout.read().range(2-1, 0);
}

void tancalc_calculation::thread_trunc_ln138_fu_456_p1() {
    trunc_ln138_fu_456_p1 = data_num_0_i_dout.read().range(2-1, 0);
}

void tancalc_calculation::thread_xor_ln54_10_fu_966_p2() {
    xor_ln54_10_fu_966_p2 = (icmp_ln54_10_fu_960_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_11_fu_1001_p2() {
    xor_ln54_11_fu_1001_p2 = (icmp_ln54_11_fu_995_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_12_fu_1036_p2() {
    xor_ln54_12_fu_1036_p2 = (icmp_ln54_12_fu_1030_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_13_fu_1071_p2() {
    xor_ln54_13_fu_1071_p2 = (icmp_ln54_13_fu_1065_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_14_fu_1106_p2() {
    xor_ln54_14_fu_1106_p2 = (icmp_ln54_14_fu_1100_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_15_fu_1141_p2() {
    xor_ln54_15_fu_1141_p2 = (icmp_ln54_15_fu_1135_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_1_fu_651_p2() {
    xor_ln54_1_fu_651_p2 = (icmp_ln54_1_fu_645_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_2_fu_686_p2() {
    xor_ln54_2_fu_686_p2 = (icmp_ln54_2_fu_680_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_3_fu_721_p2() {
    xor_ln54_3_fu_721_p2 = (icmp_ln54_3_fu_715_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_4_fu_756_p2() {
    xor_ln54_4_fu_756_p2 = (icmp_ln54_4_fu_750_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_5_fu_791_p2() {
    xor_ln54_5_fu_791_p2 = (icmp_ln54_5_fu_785_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_6_fu_826_p2() {
    xor_ln54_6_fu_826_p2 = (icmp_ln54_6_fu_820_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_7_fu_861_p2() {
    xor_ln54_7_fu_861_p2 = (icmp_ln54_7_fu_855_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_8_fu_896_p2() {
    xor_ln54_8_fu_896_p2 = (icmp_ln54_8_fu_890_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_9_fu_931_p2() {
    xor_ln54_9_fu_931_p2 = (icmp_ln54_9_fu_925_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_xor_ln54_fu_616_p2() {
    xor_ln54_fu_616_p2 = (icmp_ln54_fu_610_p2.read() ^ ap_const_lv1_1);
}

void tancalc_calculation::thread_zext_ln215_10_fu_692_p1() {
    zext_ln215_10_fu_692_p1 = esl_zext<12,11>(cmprpop_local_3_V_read_reg_1283.read());
}

void tancalc_calculation::thread_zext_ln215_11_fu_701_p1() {
    zext_ln215_11_fu_701_p1 = esl_zext<13,12>(add_ln1353_3_fu_695_p2.read());
}

void tancalc_calculation::thread_zext_ln215_12_fu_705_p1() {
    zext_ln215_12_fu_705_p1 = esl_zext<13,11>(grp_popcntdata_fu_391_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_13_fu_727_p1() {
    zext_ln215_13_fu_727_p1 = esl_zext<12,11>(cmprpop_local_4_V_read_reg_1293.read());
}

void tancalc_calculation::thread_zext_ln215_14_fu_736_p1() {
    zext_ln215_14_fu_736_p1 = esl_zext<13,12>(add_ln1353_4_fu_730_p2.read());
}

void tancalc_calculation::thread_zext_ln215_15_fu_740_p1() {
    zext_ln215_15_fu_740_p1 = esl_zext<13,11>(grp_popcntdata_fu_396_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_16_fu_762_p1() {
    zext_ln215_16_fu_762_p1 = esl_zext<12,11>(cmprpop_local_5_V_read_reg_1303.read());
}

void tancalc_calculation::thread_zext_ln215_17_fu_771_p1() {
    zext_ln215_17_fu_771_p1 = esl_zext<13,12>(add_ln1353_5_fu_765_p2.read());
}

void tancalc_calculation::thread_zext_ln215_18_fu_775_p1() {
    zext_ln215_18_fu_775_p1 = esl_zext<13,11>(grp_popcntdata_fu_401_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_19_fu_797_p1() {
    zext_ln215_19_fu_797_p1 = esl_zext<12,11>(cmprpop_local_6_V_read_reg_1313.read());
}

void tancalc_calculation::thread_zext_ln215_1_fu_587_p1() {
    zext_ln215_1_fu_587_p1 = esl_zext<12,11>(cmprpop_local_0_V_read_reg_1253.read());
}

void tancalc_calculation::thread_zext_ln215_20_fu_806_p1() {
    zext_ln215_20_fu_806_p1 = esl_zext<13,12>(add_ln1353_6_fu_800_p2.read());
}

void tancalc_calculation::thread_zext_ln215_21_fu_810_p1() {
    zext_ln215_21_fu_810_p1 = esl_zext<13,11>(grp_popcntdata_fu_406_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_22_fu_832_p1() {
    zext_ln215_22_fu_832_p1 = esl_zext<12,11>(cmprpop_local_7_V_read_reg_1323.read());
}

void tancalc_calculation::thread_zext_ln215_23_fu_841_p1() {
    zext_ln215_23_fu_841_p1 = esl_zext<13,12>(add_ln1353_7_fu_835_p2.read());
}

void tancalc_calculation::thread_zext_ln215_24_fu_845_p1() {
    zext_ln215_24_fu_845_p1 = esl_zext<13,11>(grp_popcntdata_fu_411_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_25_fu_867_p1() {
    zext_ln215_25_fu_867_p1 = esl_zext<12,11>(cmprpop_local_8_V_read_reg_1333.read());
}

void tancalc_calculation::thread_zext_ln215_26_fu_876_p1() {
    zext_ln215_26_fu_876_p1 = esl_zext<13,12>(add_ln1353_8_fu_870_p2.read());
}

void tancalc_calculation::thread_zext_ln215_27_fu_880_p1() {
    zext_ln215_27_fu_880_p1 = esl_zext<13,11>(grp_popcntdata_fu_416_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_28_fu_902_p1() {
    zext_ln215_28_fu_902_p1 = esl_zext<12,11>(cmprpop_local_9_V_read_reg_1343.read());
}

void tancalc_calculation::thread_zext_ln215_29_fu_911_p1() {
    zext_ln215_29_fu_911_p1 = esl_zext<13,12>(add_ln1353_9_fu_905_p2.read());
}

void tancalc_calculation::thread_zext_ln215_2_fu_596_p1() {
    zext_ln215_2_fu_596_p1 = esl_zext<13,12>(add_ln1353_fu_590_p2.read());
}

void tancalc_calculation::thread_zext_ln215_30_fu_915_p1() {
    zext_ln215_30_fu_915_p1 = esl_zext<13,11>(grp_popcntdata_fu_421_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_31_fu_937_p1() {
    zext_ln215_31_fu_937_p1 = esl_zext<12,11>(cmprpop_local_10_V_read_reg_1353.read());
}

void tancalc_calculation::thread_zext_ln215_32_fu_946_p1() {
    zext_ln215_32_fu_946_p1 = esl_zext<13,12>(add_ln1353_10_fu_940_p2.read());
}

void tancalc_calculation::thread_zext_ln215_33_fu_950_p1() {
    zext_ln215_33_fu_950_p1 = esl_zext<13,11>(grp_popcntdata_fu_426_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_34_fu_972_p1() {
    zext_ln215_34_fu_972_p1 = esl_zext<12,11>(cmprpop_local_11_V_read_reg_1363.read());
}

void tancalc_calculation::thread_zext_ln215_35_fu_981_p1() {
    zext_ln215_35_fu_981_p1 = esl_zext<13,12>(add_ln1353_11_fu_975_p2.read());
}

void tancalc_calculation::thread_zext_ln215_36_fu_985_p1() {
    zext_ln215_36_fu_985_p1 = esl_zext<13,11>(grp_popcntdata_fu_431_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_37_fu_1007_p1() {
    zext_ln215_37_fu_1007_p1 = esl_zext<12,11>(cmprpop_local_12_V_read_reg_1373.read());
}

void tancalc_calculation::thread_zext_ln215_38_fu_1016_p1() {
    zext_ln215_38_fu_1016_p1 = esl_zext<13,12>(add_ln1353_12_fu_1010_p2.read());
}

void tancalc_calculation::thread_zext_ln215_39_fu_1020_p1() {
    zext_ln215_39_fu_1020_p1 = esl_zext<13,11>(grp_popcntdata_fu_436_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_3_fu_600_p1() {
    zext_ln215_3_fu_600_p1 = esl_zext<13,11>(grp_popcntdata_fu_376_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_40_fu_1042_p1() {
    zext_ln215_40_fu_1042_p1 = esl_zext<12,11>(cmprpop_local_13_V_read_reg_1383.read());
}

void tancalc_calculation::thread_zext_ln215_41_fu_1051_p1() {
    zext_ln215_41_fu_1051_p1 = esl_zext<13,12>(add_ln1353_13_fu_1045_p2.read());
}

void tancalc_calculation::thread_zext_ln215_42_fu_1055_p1() {
    zext_ln215_42_fu_1055_p1 = esl_zext<13,11>(grp_popcntdata_fu_441_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_43_fu_1077_p1() {
    zext_ln215_43_fu_1077_p1 = esl_zext<12,11>(cmprpop_local_14_V_read_reg_1393.read());
}

void tancalc_calculation::thread_zext_ln215_44_fu_1086_p1() {
    zext_ln215_44_fu_1086_p1 = esl_zext<13,12>(add_ln1353_14_fu_1080_p2.read());
}

void tancalc_calculation::thread_zext_ln215_45_fu_1090_p1() {
    zext_ln215_45_fu_1090_p1 = esl_zext<13,11>(grp_popcntdata_fu_446_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_46_fu_1112_p1() {
    zext_ln215_46_fu_1112_p1 = esl_zext<12,10>(cmprpop_local_15_V_read_reg_1403.read());
}

void tancalc_calculation::thread_zext_ln215_47_fu_1121_p1() {
    zext_ln215_47_fu_1121_p1 = esl_zext<13,12>(add_ln1353_15_fu_1115_p2.read());
}

void tancalc_calculation::thread_zext_ln215_48_fu_1125_p1() {
    zext_ln215_48_fu_1125_p1 = esl_zext<13,11>(grp_popcntdata_fu_451_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_4_fu_622_p1() {
    zext_ln215_4_fu_622_p1 = esl_zext<12,11>(cmprpop_local_1_V_read_reg_1263.read());
}

void tancalc_calculation::thread_zext_ln215_5_fu_631_p1() {
    zext_ln215_5_fu_631_p1 = esl_zext<13,12>(add_ln1353_1_fu_625_p2.read());
}

void tancalc_calculation::thread_zext_ln215_6_fu_635_p1() {
    zext_ln215_6_fu_635_p1 = esl_zext<13,11>(grp_popcntdata_fu_381_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_7_fu_657_p1() {
    zext_ln215_7_fu_657_p1 = esl_zext<12,11>(cmprpop_local_2_V_read_reg_1273.read());
}

void tancalc_calculation::thread_zext_ln215_8_fu_666_p1() {
    zext_ln215_8_fu_666_p1 = esl_zext<13,12>(add_ln1353_2_fu_660_p2.read());
}

void tancalc_calculation::thread_zext_ln215_9_fu_670_p1() {
    zext_ln215_9_fu_670_p1 = esl_zext<13,11>(grp_popcntdata_fu_386_ap_return.read());
}

void tancalc_calculation::thread_zext_ln215_fu_583_p1() {
    zext_ln215_fu_583_p1 = esl_zext<12,11>(tmp_1_fu_570_p6.read());
}

void tancalc_calculation::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(cmprpop_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmpr_local_0_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(data_num_0_i_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_15_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_14_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_13_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_12_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_11_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_10_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_9_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_8_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_7_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_6_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_5_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_4_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_3_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_2_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(cmprpop_local_1_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

