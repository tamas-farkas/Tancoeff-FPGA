-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tancalc_calculation is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ref_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    ref_local_ce0 : OUT STD_LOGIC;
    ref_local_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cmpr_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    cmpr_local_ce0 : OUT STD_LOGIC;
    cmpr_local_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    refpop_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    refpop_local_ce0 : OUT STD_LOGIC;
    refpop_local_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    cmprpop_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    cmprpop_local_ce0 : OUT STD_LOGIC;
    cmprpop_local_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    result_local_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_local_ce0 : OUT STD_LOGIC;
    result_local_we0 : OUT STD_LOGIC;
    result_local_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of tancalc_calculation is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_210 : STD_LOGIC_VECTOR (14 downto 0);
    signal ref_num_0_reg_221 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmpr_num_0_reg_232 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln33_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln33_reg_1265_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln33_fu_249_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln36_1_fu_275_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln36_1_reg_1274 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln36_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_reg_1279 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_reg_1279_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_1_fu_288_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_1_reg_1290 : STD_LOGIC_VECTOR (63 downto 0);
    signal cmpr_num_fu_293_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_14_fu_1059_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln36_14_reg_1305 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln36_29_fu_1205_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln36_29_reg_1310 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_ref_num_0_phi_fu_225_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln37_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln33_1_fu_269_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln36_fu_261_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln36_31_fu_423_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln36_30_fu_419_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln36_29_fu_415_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln36_28_fu_411_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln36_27_fu_407_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln36_26_fu_403_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln36_25_fu_399_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln36_24_fu_395_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln36_23_fu_391_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln36_22_fu_387_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln36_21_fu_383_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln36_20_fu_379_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln36_19_fu_375_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln36_18_fu_371_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln36_17_fu_367_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln36_16_fu_363_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln36_15_fu_359_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln36_14_fu_355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln36_13_fu_351_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln36_12_fu_347_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln36_11_fu_343_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln36_10_fu_339_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln36_9_fu_335_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln36_8_fu_331_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln36_7_fu_327_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln36_6_fu_323_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln36_5_fu_319_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln36_4_fu_315_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln36_3_fu_311_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln36_2_fu_307_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln36_1_fu_303_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln36_fu_299_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln3_15_fu_523_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln3_14_fu_517_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln7_fu_529_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln7_1_fu_533_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln7_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_13_fu_511_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal and_ln3_12_fu_505_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_62_fu_571_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_11_fu_499_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal and_ln3_10_fu_493_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_64_fu_595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_9_fu_487_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln3_8_fu_481_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_66_fu_619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_627_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_7_fu_475_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln3_6_fu_469_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_68_fu_643_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_651_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_5_fu_463_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal and_ln3_4_fu_457_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_70_fu_667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_675_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_3_fu_451_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal and_ln3_2_fu_445_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_72_fu_691_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3_1_fu_439_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal and_ln3_fu_433_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_74_fu_715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln36_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_fu_747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_fu_763_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_787_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_fu_811_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_835_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_843_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_859_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln7_121_fu_563_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_fu_559_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_fu_919_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_122_fu_567_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_123_fu_587_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_1_fu_929_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_3_fu_935_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_2_fu_925_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_2_fu_939_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_124_fu_591_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_125_fu_611_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_3_fu_949_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_126_fu_615_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_127_fu_635_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_4_fu_959_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_6_fu_965_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_5_fu_955_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_5_fu_969_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_7_fu_975_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_4_fu_945_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_6_fu_979_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_128_fu_639_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_129_fu_659_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_7_fu_989_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_130_fu_663_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_131_fu_683_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_8_fu_999_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_10_fu_1005_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_9_fu_995_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_9_fu_1009_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_132_fu_687_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_133_fu_707_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_10_fu_1019_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_134_fu_711_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_135_fu_731_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_11_fu_1029_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_13_fu_1035_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_12_fu_1025_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_12_fu_1039_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_14_fu_1045_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_11_fu_1015_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_13_fu_1049_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_15_fu_1055_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln36_8_fu_985_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln7_136_fu_735_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_137_fu_755_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_15_fu_1065_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_138_fu_759_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_139_fu_779_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_16_fu_1075_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_18_fu_1081_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_17_fu_1071_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_17_fu_1085_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_140_fu_783_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_141_fu_803_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_18_fu_1095_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_142_fu_807_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_143_fu_827_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_19_fu_1105_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_21_fu_1111_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_20_fu_1101_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_20_fu_1115_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_22_fu_1121_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_19_fu_1091_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_21_fu_1125_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln7_144_fu_831_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_145_fu_851_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_22_fu_1135_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_146_fu_855_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_147_fu_875_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_23_fu_1145_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_25_fu_1151_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_24_fu_1141_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_24_fu_1155_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln7_148_fu_879_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_149_fu_899_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_25_fu_1165_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln7_150_fu_903_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_32_fu_915_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln36_26_fu_1175_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln36_28_fu_1181_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_27_fu_1171_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_27_fu_1185_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln36_29_fu_1191_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_26_fu_1161_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_28_fu_1195_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln36_30_fu_1201_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln36_23_fu_1131_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln36_31_fu_1214_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln36_16_fu_1211_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln36_30_fu_1217_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal temp_fu_1223_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln37_1_fu_1235_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln37_2_fu_1239_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln37_fu_1243_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln37_3_fu_1249_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln37_fu_1231_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln37_fu_1253_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cmpr_num_0_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_fu_243_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                cmpr_num_0_reg_232 <= cmpr_num_fu_293_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                cmpr_num_0_reg_232 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_fu_243_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_210 <= add_ln33_fu_249_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_210 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    ref_num_0_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_reg_1265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                ref_num_0_reg_221 <= select_ln36_1_reg_1274;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ref_num_0_reg_221 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_reg_1265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln36_14_reg_1305 <= add_ln36_14_fu_1059_p2;
                add_ln36_29_reg_1310 <= add_ln36_29_fu_1205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln33_reg_1265 <= icmp_ln33_fu_243_p2;
                icmp_ln33_reg_1265_pp0_iter1_reg <= icmp_ln33_reg_1265;
                    zext_ln36_reg_1279_pp0_iter1_reg(7 downto 0) <= zext_ln36_reg_1279(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_fu_243_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln36_1_reg_1274 <= select_ln36_1_fu_275_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln33_fu_243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln36_1_reg_1290(7 downto 0) <= zext_ln36_1_fu_288_p1(7 downto 0);
                    zext_ln36_reg_1279(7 downto 0) <= zext_ln36_fu_283_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln36_reg_1279(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln36_reg_1279_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln36_1_reg_1290(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln33_fu_243_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln33_fu_243_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln33_fu_243_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln33_1_fu_269_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_ref_num_0_phi_fu_225_p4));
    add_ln33_fu_249_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_210) + unsigned(ap_const_lv15_1));
    add_ln36_10_fu_1019_p2 <= std_logic_vector(unsigned(zext_ln7_132_fu_687_p1) + unsigned(zext_ln7_133_fu_707_p1));
    add_ln36_11_fu_1029_p2 <= std_logic_vector(unsigned(zext_ln7_134_fu_711_p1) + unsigned(zext_ln7_135_fu_731_p1));
    add_ln36_12_fu_1039_p2 <= std_logic_vector(unsigned(zext_ln36_13_fu_1035_p1) + unsigned(zext_ln36_12_fu_1025_p1));
    add_ln36_13_fu_1049_p2 <= std_logic_vector(unsigned(zext_ln36_14_fu_1045_p1) + unsigned(zext_ln36_11_fu_1015_p1));
    add_ln36_14_fu_1059_p2 <= std_logic_vector(unsigned(zext_ln36_15_fu_1055_p1) + unsigned(zext_ln36_8_fu_985_p1));
    add_ln36_15_fu_1065_p2 <= std_logic_vector(unsigned(zext_ln7_136_fu_735_p1) + unsigned(zext_ln7_137_fu_755_p1));
    add_ln36_16_fu_1075_p2 <= std_logic_vector(unsigned(zext_ln7_138_fu_759_p1) + unsigned(zext_ln7_139_fu_779_p1));
    add_ln36_17_fu_1085_p2 <= std_logic_vector(unsigned(zext_ln36_18_fu_1081_p1) + unsigned(zext_ln36_17_fu_1071_p1));
    add_ln36_18_fu_1095_p2 <= std_logic_vector(unsigned(zext_ln7_140_fu_783_p1) + unsigned(zext_ln7_141_fu_803_p1));
    add_ln36_19_fu_1105_p2 <= std_logic_vector(unsigned(zext_ln7_142_fu_807_p1) + unsigned(zext_ln7_143_fu_827_p1));
    add_ln36_1_fu_929_p2 <= std_logic_vector(unsigned(zext_ln7_122_fu_567_p1) + unsigned(zext_ln7_123_fu_587_p1));
    add_ln36_20_fu_1115_p2 <= std_logic_vector(unsigned(zext_ln36_21_fu_1111_p1) + unsigned(zext_ln36_20_fu_1101_p1));
    add_ln36_21_fu_1125_p2 <= std_logic_vector(unsigned(zext_ln36_22_fu_1121_p1) + unsigned(zext_ln36_19_fu_1091_p1));
    add_ln36_22_fu_1135_p2 <= std_logic_vector(unsigned(zext_ln7_144_fu_831_p1) + unsigned(zext_ln7_145_fu_851_p1));
    add_ln36_23_fu_1145_p2 <= std_logic_vector(unsigned(zext_ln7_146_fu_855_p1) + unsigned(zext_ln7_147_fu_875_p1));
    add_ln36_24_fu_1155_p2 <= std_logic_vector(unsigned(zext_ln36_25_fu_1151_p1) + unsigned(zext_ln36_24_fu_1141_p1));
    add_ln36_25_fu_1165_p2 <= std_logic_vector(unsigned(zext_ln7_148_fu_879_p1) + unsigned(zext_ln7_149_fu_899_p1));
    add_ln36_26_fu_1175_p2 <= std_logic_vector(unsigned(zext_ln7_150_fu_903_p1) + unsigned(zext_ln36_32_fu_915_p1));
    add_ln36_27_fu_1185_p2 <= std_logic_vector(unsigned(zext_ln36_28_fu_1181_p1) + unsigned(zext_ln36_27_fu_1171_p1));
    add_ln36_28_fu_1195_p2 <= std_logic_vector(unsigned(zext_ln36_29_fu_1191_p1) + unsigned(zext_ln36_26_fu_1161_p1));
    add_ln36_29_fu_1205_p2 <= std_logic_vector(unsigned(zext_ln36_30_fu_1201_p1) + unsigned(zext_ln36_23_fu_1131_p1));
    add_ln36_2_fu_939_p2 <= std_logic_vector(unsigned(zext_ln36_3_fu_935_p1) + unsigned(zext_ln36_2_fu_925_p1));
    add_ln36_30_fu_1217_p2 <= std_logic_vector(unsigned(zext_ln36_31_fu_1214_p1) + unsigned(zext_ln36_16_fu_1211_p1));
    add_ln36_3_fu_949_p2 <= std_logic_vector(unsigned(zext_ln7_124_fu_591_p1) + unsigned(zext_ln7_125_fu_611_p1));
    add_ln36_4_fu_959_p2 <= std_logic_vector(unsigned(zext_ln7_126_fu_615_p1) + unsigned(zext_ln7_127_fu_635_p1));
    add_ln36_5_fu_969_p2 <= std_logic_vector(unsigned(zext_ln36_6_fu_965_p1) + unsigned(zext_ln36_5_fu_955_p1));
    add_ln36_6_fu_979_p2 <= std_logic_vector(unsigned(zext_ln36_7_fu_975_p1) + unsigned(zext_ln36_4_fu_945_p1));
    add_ln36_7_fu_989_p2 <= std_logic_vector(unsigned(zext_ln7_128_fu_639_p1) + unsigned(zext_ln7_129_fu_659_p1));
    add_ln36_8_fu_999_p2 <= std_logic_vector(unsigned(zext_ln7_130_fu_663_p1) + unsigned(zext_ln7_131_fu_683_p1));
    add_ln36_9_fu_1009_p2 <= std_logic_vector(unsigned(zext_ln36_10_fu_1005_p1) + unsigned(zext_ln36_9_fu_995_p1));
    add_ln36_fu_919_p2 <= std_logic_vector(unsigned(zext_ln7_121_fu_563_p1) + unsigned(zext_ln7_fu_559_p1));
    add_ln37_fu_1243_p2 <= std_logic_vector(unsigned(zext_ln37_1_fu_1235_p1) + unsigned(zext_ln37_2_fu_1239_p1));
    and_ln36_fu_427_p2 <= (ref_local_q0 and cmpr_local_q0);
    and_ln3_10_fu_493_p2 <= (trunc_ln36_11_fu_343_p1 and trunc_ln36_10_fu_339_p1);
    and_ln3_11_fu_499_p2 <= (trunc_ln36_9_fu_335_p1 and trunc_ln36_8_fu_331_p1);
    and_ln3_12_fu_505_p2 <= (trunc_ln36_7_fu_327_p1 and trunc_ln36_6_fu_323_p1);
    and_ln3_13_fu_511_p2 <= (trunc_ln36_5_fu_319_p1 and trunc_ln36_4_fu_315_p1);
    and_ln3_14_fu_517_p2 <= (trunc_ln36_3_fu_311_p1 and trunc_ln36_2_fu_307_p1);
    and_ln3_15_fu_523_p2 <= (trunc_ln36_fu_299_p1 and trunc_ln36_1_fu_303_p1);
    and_ln3_1_fu_439_p2 <= (trunc_ln36_29_fu_415_p1 and trunc_ln36_28_fu_411_p1);
    and_ln3_2_fu_445_p2 <= (trunc_ln36_27_fu_407_p1 and trunc_ln36_26_fu_403_p1);
    and_ln3_3_fu_451_p2 <= (trunc_ln36_25_fu_399_p1 and trunc_ln36_24_fu_395_p1);
    and_ln3_4_fu_457_p2 <= (trunc_ln36_23_fu_391_p1 and trunc_ln36_22_fu_387_p1);
    and_ln3_5_fu_463_p2 <= (trunc_ln36_21_fu_383_p1 and trunc_ln36_20_fu_379_p1);
    and_ln3_6_fu_469_p2 <= (trunc_ln36_19_fu_375_p1 and trunc_ln36_18_fu_371_p1);
    and_ln3_7_fu_475_p2 <= (trunc_ln36_17_fu_367_p1 and trunc_ln36_16_fu_363_p1);
    and_ln3_8_fu_481_p2 <= (trunc_ln36_15_fu_359_p1 and trunc_ln36_14_fu_355_p1);
    and_ln3_9_fu_487_p2 <= (trunc_ln36_13_fu_351_p1 and trunc_ln36_12_fu_347_p1);
    and_ln3_fu_433_p2 <= (trunc_ln36_31_fu_423_p1 and trunc_ln36_30_fu_419_p1);
    and_ln7_fu_553_p2 <= (trunc_ln7_fu_529_p1 and trunc_ln7_1_fu_533_p1);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln33_fu_243_p2)
    begin
        if ((icmp_ln33_fu_243_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_ref_num_0_phi_fu_225_p4_assign_proc : process(ref_num_0_reg_221, icmp_ln33_reg_1265, ap_CS_fsm_pp0_stage0, select_ln36_1_reg_1274, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln33_reg_1265 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_ref_num_0_phi_fu_225_p4 <= select_ln36_1_reg_1274;
        else 
            ap_phi_mux_ref_num_0_phi_fu_225_p4 <= ref_num_0_reg_221;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_local_address0 <= zext_ln36_1_fu_288_p1(7 - 1 downto 0);

    cmpr_local_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cmpr_local_ce0 <= ap_const_logic_1;
        else 
            cmpr_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_num_fu_293_p2 <= std_logic_vector(unsigned(select_ln36_fu_261_p3) + unsigned(ap_const_lv8_1));
    cmprpop_local_address0 <= zext_ln36_1_reg_1290(7 - 1 downto 0);

    cmprpop_local_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            cmprpop_local_ce0 <= ap_const_logic_1;
        else 
            cmprpop_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln33_fu_243_p2 <= "1" when (indvar_flatten_reg_210 = ap_const_lv15_4000) else "0";
    icmp_ln34_fu_255_p2 <= "1" when (cmpr_num_0_reg_232 = ap_const_lv8_80) else "0";
    icmp_ln37_fu_1259_p2 <= "1" when (unsigned(zext_ln37_fu_1231_p1) < unsigned(sub_ln37_fu_1253_p2)) else "0";
    ref_local_address0 <= zext_ln36_fu_283_p1(7 - 1 downto 0);

    ref_local_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ref_local_ce0 <= ap_const_logic_1;
        else 
            ref_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    refpop_local_address0 <= zext_ln36_reg_1279(7 - 1 downto 0);

    refpop_local_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            refpop_local_ce0 <= ap_const_logic_1;
        else 
            refpop_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_local_address0 <= zext_ln36_reg_1279_pp0_iter1_reg(7 - 1 downto 0);

    result_local_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            result_local_ce0 <= ap_const_logic_1;
        else 
            result_local_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    result_local_d0 <= ap_const_lv1_1;

    result_local_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, icmp_ln37_fu_1259_p2)
    begin
        if (((icmp_ln37_fu_1259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            result_local_we0 <= ap_const_logic_1;
        else 
            result_local_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln36_1_fu_275_p3 <= 
        add_ln33_1_fu_269_p2 when (icmp_ln34_fu_255_p2(0) = '1') else 
        ap_phi_mux_ref_num_0_phi_fu_225_p4;
    select_ln36_fu_261_p3 <= 
        ap_const_lv8_0 when (icmp_ln34_fu_255_p2(0) = '1') else 
        cmpr_num_0_reg_232;
    sub_ln37_fu_1253_p2 <= std_logic_vector(unsigned(zext_ln37_3_fu_1249_p1) - unsigned(zext_ln37_fu_1231_p1));
    temp_fu_1223_p3 <= (add_ln36_30_fu_1217_p2 & ap_const_lv1_0);
    tmp_61_fu_545_p3 <= and_ln3_14_fu_517_p2(2 downto 2);
    tmp_62_fu_571_p3 <= and_ln3_13_fu_511_p2(3 downto 3);
    tmp_63_fu_579_p3 <= and_ln3_12_fu_505_p2(4 downto 4);
    tmp_64_fu_595_p3 <= and_ln3_11_fu_499_p2(5 downto 5);
    tmp_65_fu_603_p3 <= and_ln3_10_fu_493_p2(6 downto 6);
    tmp_66_fu_619_p3 <= and_ln3_9_fu_487_p2(7 downto 7);
    tmp_67_fu_627_p3 <= and_ln3_8_fu_481_p2(8 downto 8);
    tmp_68_fu_643_p3 <= and_ln3_7_fu_475_p2(9 downto 9);
    tmp_69_fu_651_p3 <= and_ln3_6_fu_469_p2(10 downto 10);
    tmp_70_fu_667_p3 <= and_ln3_5_fu_463_p2(11 downto 11);
    tmp_71_fu_675_p3 <= and_ln3_4_fu_457_p2(12 downto 12);
    tmp_72_fu_691_p3 <= and_ln3_3_fu_451_p2(13 downto 13);
    tmp_73_fu_699_p3 <= and_ln3_2_fu_445_p2(14 downto 14);
    tmp_74_fu_715_p3 <= and_ln3_1_fu_439_p2(15 downto 15);
    tmp_75_fu_723_p3 <= and_ln3_fu_433_p2(16 downto 16);
    tmp_76_fu_739_p3 <= and_ln36_fu_427_p2(17 downto 17);
    tmp_77_fu_747_p3 <= and_ln36_fu_427_p2(18 downto 18);
    tmp_78_fu_763_p3 <= and_ln36_fu_427_p2(19 downto 19);
    tmp_79_fu_771_p3 <= and_ln36_fu_427_p2(20 downto 20);
    tmp_80_fu_787_p3 <= and_ln36_fu_427_p2(21 downto 21);
    tmp_81_fu_795_p3 <= and_ln36_fu_427_p2(22 downto 22);
    tmp_82_fu_811_p3 <= and_ln36_fu_427_p2(23 downto 23);
    tmp_83_fu_819_p3 <= and_ln36_fu_427_p2(24 downto 24);
    tmp_84_fu_835_p3 <= and_ln36_fu_427_p2(25 downto 25);
    tmp_85_fu_843_p3 <= and_ln36_fu_427_p2(26 downto 26);
    tmp_86_fu_859_p3 <= and_ln36_fu_427_p2(27 downto 27);
    tmp_87_fu_867_p3 <= and_ln36_fu_427_p2(28 downto 28);
    tmp_88_fu_883_p3 <= and_ln36_fu_427_p2(29 downto 29);
    tmp_89_fu_891_p3 <= and_ln36_fu_427_p2(30 downto 30);
    tmp_90_fu_907_p3 <= and_ln36_fu_427_p2(31 downto 31);
    tmp_fu_537_p3 <= and_ln3_15_fu_523_p2(1 downto 1);
    trunc_ln36_10_fu_339_p1 <= ref_local_q0(21 - 1 downto 0);
    trunc_ln36_11_fu_343_p1 <= cmpr_local_q0(21 - 1 downto 0);
    trunc_ln36_12_fu_347_p1 <= ref_local_q0(22 - 1 downto 0);
    trunc_ln36_13_fu_351_p1 <= cmpr_local_q0(22 - 1 downto 0);
    trunc_ln36_14_fu_355_p1 <= ref_local_q0(23 - 1 downto 0);
    trunc_ln36_15_fu_359_p1 <= cmpr_local_q0(23 - 1 downto 0);
    trunc_ln36_16_fu_363_p1 <= ref_local_q0(24 - 1 downto 0);
    trunc_ln36_17_fu_367_p1 <= cmpr_local_q0(24 - 1 downto 0);
    trunc_ln36_18_fu_371_p1 <= ref_local_q0(25 - 1 downto 0);
    trunc_ln36_19_fu_375_p1 <= cmpr_local_q0(25 - 1 downto 0);
    trunc_ln36_1_fu_303_p1 <= cmpr_local_q0(16 - 1 downto 0);
    trunc_ln36_20_fu_379_p1 <= ref_local_q0(26 - 1 downto 0);
    trunc_ln36_21_fu_383_p1 <= cmpr_local_q0(26 - 1 downto 0);
    trunc_ln36_22_fu_387_p1 <= ref_local_q0(27 - 1 downto 0);
    trunc_ln36_23_fu_391_p1 <= cmpr_local_q0(27 - 1 downto 0);
    trunc_ln36_24_fu_395_p1 <= ref_local_q0(28 - 1 downto 0);
    trunc_ln36_25_fu_399_p1 <= cmpr_local_q0(28 - 1 downto 0);
    trunc_ln36_26_fu_403_p1 <= ref_local_q0(29 - 1 downto 0);
    trunc_ln36_27_fu_407_p1 <= cmpr_local_q0(29 - 1 downto 0);
    trunc_ln36_28_fu_411_p1 <= ref_local_q0(30 - 1 downto 0);
    trunc_ln36_29_fu_415_p1 <= cmpr_local_q0(30 - 1 downto 0);
    trunc_ln36_2_fu_307_p1 <= ref_local_q0(17 - 1 downto 0);
    trunc_ln36_30_fu_419_p1 <= ref_local_q0(31 - 1 downto 0);
    trunc_ln36_31_fu_423_p1 <= cmpr_local_q0(31 - 1 downto 0);
    trunc_ln36_3_fu_311_p1 <= cmpr_local_q0(17 - 1 downto 0);
    trunc_ln36_4_fu_315_p1 <= ref_local_q0(18 - 1 downto 0);
    trunc_ln36_5_fu_319_p1 <= cmpr_local_q0(18 - 1 downto 0);
    trunc_ln36_6_fu_323_p1 <= ref_local_q0(19 - 1 downto 0);
    trunc_ln36_7_fu_327_p1 <= cmpr_local_q0(19 - 1 downto 0);
    trunc_ln36_8_fu_331_p1 <= ref_local_q0(20 - 1 downto 0);
    trunc_ln36_9_fu_335_p1 <= cmpr_local_q0(20 - 1 downto 0);
    trunc_ln36_fu_299_p1 <= ref_local_q0(16 - 1 downto 0);
    trunc_ln7_1_fu_533_p1 <= cmpr_local_q0(1 - 1 downto 0);
    trunc_ln7_fu_529_p1 <= ref_local_q0(1 - 1 downto 0);
    zext_ln36_10_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_8_fu_999_p2),3));
    zext_ln36_11_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_9_fu_1009_p2),4));
    zext_ln36_12_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_10_fu_1019_p2),3));
    zext_ln36_13_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_11_fu_1029_p2),3));
    zext_ln36_14_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_12_fu_1039_p2),4));
    zext_ln36_15_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_13_fu_1049_p2),5));
    zext_ln36_16_fu_1211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_14_reg_1305),6));
    zext_ln36_17_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_15_fu_1065_p2),3));
    zext_ln36_18_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_16_fu_1075_p2),3));
    zext_ln36_19_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_17_fu_1085_p2),4));
    zext_ln36_1_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln36_fu_261_p3),64));
    zext_ln36_20_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_18_fu_1095_p2),3));
    zext_ln36_21_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_19_fu_1105_p2),3));
    zext_ln36_22_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_20_fu_1115_p2),4));
    zext_ln36_23_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_21_fu_1125_p2),5));
    zext_ln36_24_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_22_fu_1135_p2),3));
    zext_ln36_25_fu_1151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_23_fu_1145_p2),3));
    zext_ln36_26_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_24_fu_1155_p2),4));
    zext_ln36_27_fu_1171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_25_fu_1165_p2),3));
    zext_ln36_28_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_26_fu_1175_p2),3));
    zext_ln36_29_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_27_fu_1185_p2),4));
    zext_ln36_2_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_fu_919_p2),3));
    zext_ln36_30_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_28_fu_1195_p2),5));
    zext_ln36_31_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_29_reg_1310),6));
    zext_ln36_32_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_907_p3),2));
    zext_ln36_3_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_1_fu_929_p2),3));
    zext_ln36_4_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_2_fu_939_p2),4));
    zext_ln36_5_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_3_fu_949_p2),3));
    zext_ln36_6_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_4_fu_959_p2),3));
    zext_ln36_7_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_5_fu_969_p2),4));
    zext_ln36_8_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_6_fu_979_p2),5));
    zext_ln36_9_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_7_fu_989_p2),3));
    zext_ln36_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln36_1_fu_275_p3),64));
    zext_ln37_1_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refpop_local_q0),7));
    zext_ln37_2_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_q0),7));
    zext_ln37_3_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln37_fu_1243_p2),8));
    zext_ln37_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_fu_1223_p3),8));
    zext_ln7_121_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_537_p3),2));
    zext_ln7_122_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_545_p3),2));
    zext_ln7_123_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_571_p3),2));
    zext_ln7_124_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_579_p3),2));
    zext_ln7_125_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_595_p3),2));
    zext_ln7_126_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_603_p3),2));
    zext_ln7_127_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_619_p3),2));
    zext_ln7_128_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_627_p3),2));
    zext_ln7_129_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_643_p3),2));
    zext_ln7_130_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_651_p3),2));
    zext_ln7_131_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_667_p3),2));
    zext_ln7_132_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_675_p3),2));
    zext_ln7_133_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_691_p3),2));
    zext_ln7_134_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_699_p3),2));
    zext_ln7_135_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_715_p3),2));
    zext_ln7_136_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_723_p3),2));
    zext_ln7_137_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_739_p3),2));
    zext_ln7_138_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_747_p3),2));
    zext_ln7_139_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_763_p3),2));
    zext_ln7_140_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_771_p3),2));
    zext_ln7_141_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_787_p3),2));
    zext_ln7_142_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_795_p3),2));
    zext_ln7_143_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_811_p3),2));
    zext_ln7_144_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_819_p3),2));
    zext_ln7_145_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_835_p3),2));
    zext_ln7_146_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_843_p3),2));
    zext_ln7_147_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_859_p3),2));
    zext_ln7_148_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_867_p3),2));
    zext_ln7_149_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_883_p3),2));
    zext_ln7_150_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_891_p3),2));
    zext_ln7_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln7_fu_553_p2),2));
end behav;
