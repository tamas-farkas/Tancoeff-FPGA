-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tancalc_tancalc is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of tancalc_tancalc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "tancalc_tancalc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-fsgd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=758,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=0,HLS_SYN_FF=23072,HLS_SYN_LUT=59742,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv1024_lc_2 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_V : STD_LOGIC_VECTOR (63 downto 0);
    signal output_V : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal icmp_ln134_reg_2024 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln134_reg_2024_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal icmp_ln134_reg_2024_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal icmp_ln134_reg_2024_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_part_num_0_i24_reg_365 : STD_LOGIC_VECTOR (5 downto 0);
    signal data_num_assign_reg_376 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_popcntdata_fu_387_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_432 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_state17_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln134_reg_2024_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7 : BOOLEAN;
    signal ap_block_state32_io : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal icmp_ln134_reg_2024_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_popcntdata_fu_392_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_436 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_397_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_440 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_402_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_444 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_407_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_448 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_412_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_452 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_417_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_456 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_popcntdata_fu_422_ap_return : STD_LOGIC_VECTOR (10 downto 0);
    signal reg_460 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_V3_reg_1874 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_3_reg_1879 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_cast_fu_494_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal p_cast_reg_1890 : STD_LOGIC_VECTOR (58 downto 0);
    signal cmpr_chunk_num_fu_503_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmpr_chunk_num_reg_1900 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln219_fu_527_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal add_ln219_reg_1905 : STD_LOGIC_VECTOR (58 downto 0);
    signal icmp_ln92_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal data_part_num_fu_548_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal trunc_ln29_1_reg_1925 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln29_1_reg_1925_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln29_1_reg_1925_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln29_1_reg_1925_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln30_fu_564_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln30_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln30_reg_1929_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_input_V_reg_1934 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln364_fu_694_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln364_reg_1939 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln215_1_fu_830_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_1_reg_1944 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal zext_ln215_4_fu_834_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_4_reg_1949 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_7_fu_838_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_7_reg_1954 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_10_fu_842_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_10_reg_1959 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_13_fu_846_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_13_reg_1964 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_16_fu_850_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_16_reg_1969 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_19_fu_854_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_19_reg_1974 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_22_fu_858_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_22_reg_1979 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_25_fu_862_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_25_reg_1984 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_28_fu_866_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_28_reg_1989 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_31_fu_870_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_31_reg_1994 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_34_fu_874_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_34_reg_1999 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_37_fu_878_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_37_reg_2004 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_40_fu_882_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_40_reg_2009 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_43_fu_886_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_43_reg_2014 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_46_fu_890_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_46_reg_2019 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln134_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln134_reg_2024_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln134_reg_2024_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal data_num_fu_900_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal data_num_reg_2028 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln137_fu_906_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln137_reg_2033 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln219_1_fu_916_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal add_ln219_1_reg_2038 : STD_LOGIC_VECTOR (58 downto 0);
    signal add_ln219_2_fu_940_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal add_ln219_2_reg_2049 : STD_LOGIC_VECTOR (58 downto 0);
    signal gmem0_addr_2_read_reg_2060 : STD_LOGIC_VECTOR (511 downto 0);
    signal ref_local_0_V_fu_979_p3 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ref_local_0_V_reg_2066 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_fu_986_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_reg_2078 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_1_fu_992_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_1_reg_2083 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_2_fu_998_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_2_reg_2088 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_3_fu_1004_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_3_reg_2093 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_4_fu_1010_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_4_reg_2098 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_5_fu_1016_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_5_reg_2103 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_6_fu_1022_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_6_reg_2108 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_7_fu_1028_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_7_reg_2113 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcnt_fu_427_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal refpop_local_0_V_reg_2118 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal and_ln1355_8_fu_1058_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_8_reg_2123 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_9_fu_1063_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_9_reg_2128 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_10_fu_1068_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_10_reg_2133 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_11_fu_1073_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_11_reg_2138 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_12_fu_1078_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_12_reg_2143 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_13_fu_1083_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_13_reg_2148 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_14_fu_1088_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_14_reg_2153 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_15_fu_1093_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln1355_15_reg_2158 : STD_LOGIC_VECTOR (1023 downto 0);
    signal zext_ln215_fu_1098_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_reg_2163 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln66_6_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_6_reg_2175 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_14_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_14_reg_2180 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state17 : STD_LOGIC;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal grp_popcntdata_fu_387_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_387_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call36 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call36 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call36 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call36 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call36 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call36 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call36 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call36 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp291 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call36 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call36 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call36 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call36 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call36 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call36 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call36 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call36 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp307 : BOOLEAN;
    signal grp_popcntdata_fu_392_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_392_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call43 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call43 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call43 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call43 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call43 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call43 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call43 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp292 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call43 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call43 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call43 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call43 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call43 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call43 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call43 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call43 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp308 : BOOLEAN;
    signal grp_popcntdata_fu_397_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_397_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call49 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call49 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call49 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call49 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call49 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call49 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call49 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call49 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp293 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call49 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call49 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call49 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call49 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call49 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call49 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call49 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call49 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp309 : BOOLEAN;
    signal grp_popcntdata_fu_402_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_402_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call57 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call57 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call57 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call57 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call57 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call57 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call57 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call57 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp294 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call57 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call57 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call57 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call57 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call57 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call57 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call57 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call57 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp310 : BOOLEAN;
    signal grp_popcntdata_fu_407_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_407_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call65 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call65 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call65 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call65 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call65 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call65 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call65 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call65 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp295 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call65 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call65 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call65 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call65 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call65 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call65 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call65 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call65 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp311 : BOOLEAN;
    signal grp_popcntdata_fu_412_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_412_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call73 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call73 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call73 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call73 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call73 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call73 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call73 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call73 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp296 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call73 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call73 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call73 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call73 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call73 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call73 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call73 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call73 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp312 : BOOLEAN;
    signal grp_popcntdata_fu_417_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_417_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call81 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call81 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call81 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call81 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call81 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call81 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call81 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call81 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp297 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call81 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call81 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call81 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call81 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call81 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call81 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call81 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call81 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp313 : BOOLEAN;
    signal grp_popcntdata_fu_422_x_V : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_popcntdata_fu_422_ap_ce : STD_LOGIC;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call89 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call89 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call89 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call89 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call89 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call89 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call89 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call89 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp298 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call89 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call89 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call89 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call89 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call89 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call89 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call89 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call89 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp314 : BOOLEAN;
    signal grp_popcnt_fu_427_x_V : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_popcnt_fu_427_ap_ce : STD_LOGIC;
    signal ap_block_state11_pp0_stage0_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1_ignore_call6 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2_ignore_call6 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3_ignore_call6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter4_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp163 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter0_ignore_call34 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter1_ignore_call34 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter2_ignore_call34 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter3_ignore_call34 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4_ignore_call34 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter5_ignore_call34 : BOOLEAN;
    signal ap_block_state29_pp1_stage0_iter6_ignore_call34 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter7_ignore_call34 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp273 : BOOLEAN;
    signal ap_block_state18_pp1_stage1_iter0_ignore_call34 : BOOLEAN;
    signal ap_block_state20_pp1_stage1_iter1_ignore_call34 : BOOLEAN;
    signal ap_block_state22_pp1_stage1_iter2_ignore_call34 : BOOLEAN;
    signal ap_block_state24_pp1_stage1_iter3_ignore_call34 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter4_ignore_call34 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter5_ignore_call34 : BOOLEAN;
    signal ap_block_state30_pp1_stage1_iter6_ignore_call34 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter7_ignore_call34 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_ignoreCallOp290 : BOOLEAN;
    signal cmpr_chunk_num_assign_reg_354 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_phi_mux_data_num_assign_phi_fu_380_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln219_1_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln219_3_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln219_5_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1_01001 : BOOLEAN;
    signal cmpr_local_15_V_fu_162 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_0_V_fu_581_p3 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_1_fu_166 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_2_fu_170 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_3_fu_174 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_4_fu_178 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_5_fu_182 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_6_fu_186 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_7_fu_190 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_8_fu_194 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_9_fu_198 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_10_fu_202 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_11_fu_206 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_12_fu_210 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_13_fu_214 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_14_fu_218 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_15_fu_222 : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmprpop_local_15_V_fu_226 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_0_V_2_fu_698_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_1_fu_230 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_2_fu_234 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_3_fu_238 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_4_fu_242 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_5_fu_246 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_6_fu_250 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_7_fu_254 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_8_fu_258 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_9_fu_262 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_10_fu_266 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_11_fu_270 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_12_fu_274 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_13_fu_278 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_14_fu_282 : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_15_V_15_fu_286 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln93_fu_509_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_fu_513_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln219_fu_523_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal shl_ln1_fu_568_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal num_hi_fu_575_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln647_fu_668_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln647_fu_672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln647_1_fu_678_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal lshr_ln647_fu_682_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal p_Result_s_fu_688_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal zext_ln219_2_fu_912_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal or_ln32_fu_931_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln219_4_fu_936_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal add_ln1353_fu_1101_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_2_fu_1106_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_3_fu_1110_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_1_fu_1120_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_5_fu_1125_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_6_fu_1129_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1353_2_fu_1139_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_8_fu_1144_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_9_fu_1148_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_2_fu_1152_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_3_fu_1170_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_11_fu_1175_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_12_fu_1179_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_3_fu_1183_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_1_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_4_fu_1201_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_14_fu_1206_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_15_fu_1210_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_4_fu_1214_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_2_fu_1220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_5_fu_1232_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_17_fu_1237_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_18_fu_1241_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_5_fu_1245_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_3_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_6_fu_1263_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_20_fu_1268_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_21_fu_1272_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_6_fu_1276_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_4_fu_1282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_7_fu_1294_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_23_fu_1299_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_24_fu_1303_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_7_fu_1307_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_5_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1354_fu_1114_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_13_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1354_1_fu_1133_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_14_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_13_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_14_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_1_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_1_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_2_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_3_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_4_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_5_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_4_fu_1373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_3_fu_1367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_5_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_2_fu_1361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_8_fu_1391_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_26_fu_1395_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_27_fu_1399_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_8_fu_1403_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_6_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_9_fu_1421_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_29_fu_1425_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_30_fu_1429_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_9_fu_1433_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_7_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_10_fu_1451_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_32_fu_1455_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_33_fu_1459_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_10_fu_1463_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_8_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_11_fu_1481_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_35_fu_1485_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_36_fu_1489_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_11_fu_1493_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_9_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_12_fu_1511_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_38_fu_1515_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_39_fu_1519_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_12_fu_1523_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_10_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_13_fu_1541_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_41_fu_1545_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_42_fu_1549_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_13_fu_1553_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_11_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_14_fu_1571_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_44_fu_1575_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_45_fu_1579_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_14_fu_1583_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln54_12_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1353_15_fu_1601_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln215_47_fu_1605_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln215_48_fu_1609_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1354_15_fu_1613_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln66_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_6_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_7_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_8_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_9_fu_1505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_8_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_7_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_10_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_11_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln66_fu_1625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_12_fu_1595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_11_fu_1655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_10_fu_1649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_12_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_9_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_13_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_992 : BOOLEAN;
    signal ap_condition_994 : BOOLEAN;

    component tancalc_popcntdata IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (1023 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (10 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component tancalc_popcnt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (511 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component tancalc_tancalc_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        input_V : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_V : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component tancalc_tancalc_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component tancalc_tancalc_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    tancalc_control_s_axi_U : component tancalc_tancalc_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        input_V => input_V,
        output_V => output_V);

    tancalc_gmem0_m_axi_U : component tancalc_tancalc_gmem0_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => gmem0_ARLEN,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    tancalc_gmem1_m_axi_U : component tancalc_tancalc_gmem1_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem1_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => empty_fu_484_p1,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_100,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => gmem1_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_FFFFFFFFFFFFFFFF,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    grp_popcntdata_fu_387 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_387_x_V,
        ap_return => grp_popcntdata_fu_387_ap_return,
        ap_ce => grp_popcntdata_fu_387_ap_ce);

    grp_popcntdata_fu_392 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_392_x_V,
        ap_return => grp_popcntdata_fu_392_ap_return,
        ap_ce => grp_popcntdata_fu_392_ap_ce);

    grp_popcntdata_fu_397 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_397_x_V,
        ap_return => grp_popcntdata_fu_397_ap_return,
        ap_ce => grp_popcntdata_fu_397_ap_ce);

    grp_popcntdata_fu_402 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_402_x_V,
        ap_return => grp_popcntdata_fu_402_ap_return,
        ap_ce => grp_popcntdata_fu_402_ap_ce);

    grp_popcntdata_fu_407 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_407_x_V,
        ap_return => grp_popcntdata_fu_407_ap_return,
        ap_ce => grp_popcntdata_fu_407_ap_ce);

    grp_popcntdata_fu_412 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_412_x_V,
        ap_return => grp_popcntdata_fu_412_ap_return,
        ap_ce => grp_popcntdata_fu_412_ap_ce);

    grp_popcntdata_fu_417 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_417_x_V,
        ap_return => grp_popcntdata_fu_417_ap_return,
        ap_ce => grp_popcntdata_fu_417_ap_ce);

    grp_popcntdata_fu_422 : component tancalc_popcntdata
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcntdata_fu_422_x_V,
        ap_return => grp_popcntdata_fu_422_ap_return,
        ap_ce => grp_popcntdata_fu_422_ap_ce);

    grp_popcnt_fu_427 : component tancalc_popcnt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        x_V => grp_popcnt_fu_427_x_V,
        ap_return => grp_popcnt_fu_427_ap_return,
        ap_ce => grp_popcnt_fu_427_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state11);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    cmpr_chunk_num_assign_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                cmpr_chunk_num_assign_reg_354 <= cmpr_chunk_num_reg_1900;
            elsif (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                cmpr_chunk_num_assign_reg_354 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    data_num_assign_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                data_num_assign_reg_376 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0))) then 
                data_num_assign_reg_376 <= data_num_reg_2028;
            end if; 
        end if;
    end process;

    data_part_num_0_i24_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln27_fu_542_p2 = ap_const_lv1_0))) then 
                data_part_num_0_i24_reg_365 <= data_part_num_fu_548_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                data_part_num_0_i24_reg_365 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_fu_894_p2 = ap_const_lv1_0))) then
                add_ln219_1_reg_2038 <= add_ln219_1_fu_916_p2;
                    shl_ln137_reg_2033(6 downto 1) <= shl_ln137_fu_906_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024 = ap_const_lv1_0))) then
                add_ln219_2_reg_2049 <= add_ln219_2_fu_940_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln92_fu_497_p2 = ap_const_lv1_0))) then
                add_ln219_reg_1905 <= add_ln219_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0))) then
                    and_ln1355_10_reg_2133(511 downto 0) <= and_ln1355_10_fu_1068_p2(511 downto 0);
                    and_ln1355_11_reg_2138(511 downto 0) <= and_ln1355_11_fu_1073_p2(511 downto 0);
                    and_ln1355_12_reg_2143(511 downto 0) <= and_ln1355_12_fu_1078_p2(511 downto 0);
                    and_ln1355_13_reg_2148(511 downto 0) <= and_ln1355_13_fu_1083_p2(511 downto 0);
                    and_ln1355_14_reg_2153(511 downto 0) <= and_ln1355_14_fu_1088_p2(511 downto 0);
                    and_ln1355_15_reg_2158(511 downto 0) <= and_ln1355_15_fu_1093_p2(511 downto 0);
                    and_ln1355_8_reg_2123(511 downto 0) <= and_ln1355_8_fu_1058_p2(511 downto 0);
                    and_ln1355_9_reg_2128(511 downto 0) <= and_ln1355_9_fu_1063_p2(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0))) then
                    and_ln1355_1_reg_2083(511 downto 0) <= and_ln1355_1_fu_992_p2(511 downto 0);
                    and_ln1355_2_reg_2088(511 downto 0) <= and_ln1355_2_fu_998_p2(511 downto 0);
                    and_ln1355_3_reg_2093(511 downto 0) <= and_ln1355_3_fu_1004_p2(511 downto 0);
                    and_ln1355_4_reg_2098(511 downto 0) <= and_ln1355_4_fu_1010_p2(511 downto 0);
                    and_ln1355_5_reg_2103(511 downto 0) <= and_ln1355_5_fu_1016_p2(511 downto 0);
                    and_ln1355_6_reg_2108(511 downto 0) <= and_ln1355_6_fu_1022_p2(511 downto 0);
                    and_ln1355_7_reg_2113(511 downto 0) <= and_ln1355_7_fu_1028_p2(511 downto 0);
                    and_ln1355_reg_2078(511 downto 0) <= and_ln1355_fu_986_p2(511 downto 0);
                    ref_local_0_V_reg_2066(511 downto 0) <= ref_local_0_V_fu_979_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                cmpr_chunk_num_reg_1900 <= cmpr_chunk_num_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_10_fu_202(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_11_fu_206(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_12_fu_210(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_13_fu_214(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_14_fu_218(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_15_fu_222(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_1_fu_166(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_2_fu_170(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_3_fu_174(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_4_fu_178(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_5_fu_182(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_6_fu_186(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_7_fu_190(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_8_fu_194(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_9_fu_198(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter1_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    cmpr_local_15_V_fu_162(511 downto 0) <= cmpr_local_0_V_fu_581_p3(511 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_10_fu_266(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_11_fu_270(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_12_fu_274(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_13_fu_278(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_14_fu_282(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_15_fu_286(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_1_fu_230(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_2_fu_234(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_3_fu_238(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_4_fu_242(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_5_fu_246(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_6_fu_250(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_7_fu_254(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_8_fu_258(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_9_fu_262(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln29_1_reg_1925_pp0_iter3_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                    cmprpop_local_15_V_fu_226(9 downto 0) <= cmprpop_local_0_V_2_fu_698_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                data_num_reg_2028 <= data_num_fu_900_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0))) then
                gmem0_addr_2_read_reg_2060 <= gmem0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln134_reg_2024 <= icmp_ln134_fu_894_p2;
                icmp_ln134_reg_2024_pp1_iter1_reg <= icmp_ln134_reg_2024;
                icmp_ln134_reg_2024_pp1_iter2_reg <= icmp_ln134_reg_2024_pp1_iter1_reg;
                icmp_ln134_reg_2024_pp1_iter3_reg <= icmp_ln134_reg_2024_pp1_iter2_reg;
                icmp_ln134_reg_2024_pp1_iter4_reg <= icmp_ln134_reg_2024_pp1_iter3_reg;
                icmp_ln134_reg_2024_pp1_iter5_reg <= icmp_ln134_reg_2024_pp1_iter4_reg;
                icmp_ln134_reg_2024_pp1_iter6_reg <= icmp_ln134_reg_2024_pp1_iter5_reg;
                icmp_ln134_reg_2024_pp1_iter7_reg <= icmp_ln134_reg_2024_pp1_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter6_reg = ap_const_lv1_0))) then
                or_ln66_14_reg_2180 <= or_ln66_14_fu_1673_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter6_reg = ap_const_lv1_0))) then
                or_ln66_6_reg_2175 <= or_ln66_6_fu_1385_p2;
                    zext_ln215_reg_2163(9 downto 0) <= zext_ln215_fu_1098_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                output_V3_reg_1874 <= output_V(63 downto 6);
                tmp_3_reg_1879 <= input_V(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    p_cast_reg_1890(57 downto 0) <= p_cast_fu_494_p1(57 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0))) then
                refpop_local_0_V_reg_2118 <= grp_popcnt_fu_427_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter6_reg = ap_const_lv1_0)))) then
                reg_432 <= grp_popcntdata_fu_387_ap_return;
                reg_436 <= grp_popcntdata_fu_392_ap_return;
                reg_440 <= grp_popcntdata_fu_397_ap_return;
                reg_444 <= grp_popcntdata_fu_402_ap_return;
                reg_448 <= grp_popcntdata_fu_407_ap_return;
                reg_452 <= grp_popcntdata_fu_412_ap_return;
                reg_456 <= grp_popcntdata_fu_417_ap_return;
                reg_460 <= grp_popcntdata_fu_422_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                temp_input_V_reg_1934 <= gmem0_RDATA;
                trunc_ln29_1_reg_1925_pp0_iter1_reg <= trunc_ln29_1_reg_1925;
                trunc_ln30_reg_1929_pp0_iter1_reg <= trunc_ln30_reg_1929;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln27_fu_542_p2 = ap_const_lv1_0))) then
                trunc_ln29_1_reg_1925 <= data_part_num_0_i24_reg_365(4 downto 1);
                trunc_ln30_reg_1929 <= trunc_ln30_fu_564_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                trunc_ln29_1_reg_1925_pp0_iter2_reg <= trunc_ln29_1_reg_1925_pp0_iter1_reg;
                trunc_ln29_1_reg_1925_pp0_iter3_reg <= trunc_ln29_1_reg_1925_pp0_iter2_reg;
                trunc_ln364_reg_1939 <= trunc_ln364_fu_694_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                    zext_ln215_10_reg_1959(9 downto 0) <= zext_ln215_10_fu_842_p1(9 downto 0);
                    zext_ln215_13_reg_1964(9 downto 0) <= zext_ln215_13_fu_846_p1(9 downto 0);
                    zext_ln215_16_reg_1969(9 downto 0) <= zext_ln215_16_fu_850_p1(9 downto 0);
                    zext_ln215_19_reg_1974(9 downto 0) <= zext_ln215_19_fu_854_p1(9 downto 0);
                    zext_ln215_1_reg_1944(9 downto 0) <= zext_ln215_1_fu_830_p1(9 downto 0);
                    zext_ln215_22_reg_1979(9 downto 0) <= zext_ln215_22_fu_858_p1(9 downto 0);
                    zext_ln215_25_reg_1984(9 downto 0) <= zext_ln215_25_fu_862_p1(9 downto 0);
                    zext_ln215_28_reg_1989(9 downto 0) <= zext_ln215_28_fu_866_p1(9 downto 0);
                    zext_ln215_31_reg_1994(9 downto 0) <= zext_ln215_31_fu_870_p1(9 downto 0);
                    zext_ln215_34_reg_1999(9 downto 0) <= zext_ln215_34_fu_874_p1(9 downto 0);
                    zext_ln215_37_reg_2004(9 downto 0) <= zext_ln215_37_fu_878_p1(9 downto 0);
                    zext_ln215_40_reg_2009(9 downto 0) <= zext_ln215_40_fu_882_p1(9 downto 0);
                    zext_ln215_43_reg_2014(9 downto 0) <= zext_ln215_43_fu_886_p1(9 downto 0);
                    zext_ln215_46_reg_2019(9 downto 0) <= zext_ln215_46_fu_890_p1(9 downto 0);
                    zext_ln215_4_reg_1949(9 downto 0) <= zext_ln215_4_fu_834_p1(9 downto 0);
                    zext_ln215_7_reg_1954(9 downto 0) <= zext_ln215_7_fu_838_p1(9 downto 0);
            end if;
        end if;
    end process;
    p_cast_reg_1890(58) <= '0';
    zext_ln215_1_reg_1944(11 downto 10) <= "00";
    zext_ln215_4_reg_1949(11 downto 10) <= "00";
    zext_ln215_7_reg_1954(11 downto 10) <= "00";
    zext_ln215_10_reg_1959(11 downto 10) <= "00";
    zext_ln215_13_reg_1964(11 downto 10) <= "00";
    zext_ln215_16_reg_1969(11 downto 10) <= "00";
    zext_ln215_19_reg_1974(11 downto 10) <= "00";
    zext_ln215_22_reg_1979(11 downto 10) <= "00";
    zext_ln215_25_reg_1984(11 downto 10) <= "00";
    zext_ln215_28_reg_1989(11 downto 10) <= "00";
    zext_ln215_31_reg_1994(11 downto 10) <= "00";
    zext_ln215_34_reg_1999(11 downto 10) <= "00";
    zext_ln215_37_reg_2004(11 downto 10) <= "00";
    zext_ln215_40_reg_2009(11 downto 10) <= "00";
    zext_ln215_43_reg_2014(11 downto 10) <= "00";
    zext_ln215_46_reg_2019(11 downto 10) <= "00";
    shl_ln137_reg_2033(0) <= '0';
    ref_local_0_V_reg_2066(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_reg_2078(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_1_reg_2083(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_2_reg_2088(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_3_reg_2093(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_4_reg_2098(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_5_reg_2103(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_6_reg_2108(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_7_reg_2113(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_8_reg_2123(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_9_reg_2128(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_10_reg_2133(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_11_reg_2138(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_12_reg_2143(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_13_reg_2148(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_14_reg_2153(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    and_ln1355_15_reg_2158(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    zext_ln215_reg_2163(11 downto 10) <= "00";
    cmpr_local_15_V_fu_162(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_1_fu_166(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_2_fu_170(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_3_fu_174(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_4_fu_178(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_5_fu_182(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_6_fu_186(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_7_fu_190(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_8_fu_194(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_9_fu_198(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_10_fu_202(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_11_fu_206(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_12_fu_210(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_13_fu_214(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_14_fu_218(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmpr_local_15_V_15_fu_222(1023 downto 512) <= "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    cmprpop_local_15_V_fu_226(10) <= '0';
    cmprpop_local_15_V_1_fu_230(10) <= '0';
    cmprpop_local_15_V_2_fu_234(10) <= '0';
    cmprpop_local_15_V_3_fu_238(10) <= '0';
    cmprpop_local_15_V_4_fu_242(10) <= '0';
    cmprpop_local_15_V_5_fu_246(10) <= '0';
    cmprpop_local_15_V_6_fu_250(10) <= '0';
    cmprpop_local_15_V_7_fu_254(10) <= '0';
    cmprpop_local_15_V_8_fu_258(10) <= '0';
    cmprpop_local_15_V_9_fu_262(10) <= '0';
    cmprpop_local_15_V_10_fu_266(10) <= '0';
    cmprpop_local_15_V_11_fu_270(10) <= '0';
    cmprpop_local_15_V_12_fu_274(10) <= '0';
    cmprpop_local_15_V_13_fu_278(10) <= '0';
    cmprpop_local_15_V_14_fu_282(10) <= '0';
    cmprpop_local_15_V_15_fu_286(10) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_enable_reg_pp1_iter7, ap_CS_fsm_state37, gmem0_ARREADY, gmem1_AWREADY, gmem1_BVALID, ap_enable_reg_pp1_iter6, ap_CS_fsm_state3, icmp_ln92_fu_497_p2, icmp_ln27_fu_542_p2, ap_enable_reg_pp0_iter0, icmp_ln134_fu_894_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_block_pp1_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln92_fu_497_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((gmem0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln27_fu_542_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln27_fu_542_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln134_fu_894_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln134_fu_894_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) and (ap_const_boolean_0 = ap_block_pp1_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1353_10_fu_1451_p2 <= std_logic_vector(unsigned(zext_ln215_31_reg_1994) + unsigned(zext_ln215_reg_2163));
    add_ln1353_11_fu_1481_p2 <= std_logic_vector(unsigned(zext_ln215_34_reg_1999) + unsigned(zext_ln215_reg_2163));
    add_ln1353_12_fu_1511_p2 <= std_logic_vector(unsigned(zext_ln215_37_reg_2004) + unsigned(zext_ln215_reg_2163));
    add_ln1353_13_fu_1541_p2 <= std_logic_vector(unsigned(zext_ln215_40_reg_2009) + unsigned(zext_ln215_reg_2163));
    add_ln1353_14_fu_1571_p2 <= std_logic_vector(unsigned(zext_ln215_43_reg_2014) + unsigned(zext_ln215_reg_2163));
    add_ln1353_15_fu_1601_p2 <= std_logic_vector(unsigned(zext_ln215_46_reg_2019) + unsigned(zext_ln215_reg_2163));
    add_ln1353_1_fu_1120_p2 <= std_logic_vector(unsigned(zext_ln215_4_reg_1949) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_2_fu_1139_p2 <= std_logic_vector(unsigned(zext_ln215_7_reg_1954) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_3_fu_1170_p2 <= std_logic_vector(unsigned(zext_ln215_10_reg_1959) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_4_fu_1201_p2 <= std_logic_vector(unsigned(zext_ln215_13_reg_1964) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_5_fu_1232_p2 <= std_logic_vector(unsigned(zext_ln215_16_reg_1969) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_6_fu_1263_p2 <= std_logic_vector(unsigned(zext_ln215_19_reg_1974) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_7_fu_1294_p2 <= std_logic_vector(unsigned(zext_ln215_22_reg_1979) + unsigned(zext_ln215_fu_1098_p1));
    add_ln1353_8_fu_1391_p2 <= std_logic_vector(unsigned(zext_ln215_25_reg_1984) + unsigned(zext_ln215_reg_2163));
    add_ln1353_9_fu_1421_p2 <= std_logic_vector(unsigned(zext_ln215_28_reg_1989) + unsigned(zext_ln215_reg_2163));
    add_ln1353_fu_1101_p2 <= std_logic_vector(unsigned(zext_ln215_1_reg_1944) + unsigned(zext_ln215_fu_1098_p1));
    add_ln219_1_fu_916_p2 <= std_logic_vector(unsigned(p_cast_reg_1890) + unsigned(zext_ln219_2_fu_912_p1));
    add_ln219_2_fu_940_p2 <= std_logic_vector(unsigned(p_cast_reg_1890) + unsigned(zext_ln219_4_fu_936_p1));
    add_ln219_fu_527_p2 <= std_logic_vector(unsigned(p_cast_reg_1890) + unsigned(zext_ln219_fu_523_p1));
    and_ln1355_10_fu_1068_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_10_fu_202);
    and_ln1355_11_fu_1073_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_11_fu_206);
    and_ln1355_12_fu_1078_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_12_fu_210);
    and_ln1355_13_fu_1083_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_13_fu_214);
    and_ln1355_14_fu_1088_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_14_fu_218);
    and_ln1355_15_fu_1093_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_15_fu_222);
    and_ln1355_1_fu_992_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_1_fu_166);
    and_ln1355_2_fu_998_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_2_fu_170);
    and_ln1355_3_fu_1004_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_3_fu_174);
    and_ln1355_4_fu_1010_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_4_fu_178);
    and_ln1355_5_fu_1016_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_5_fu_182);
    and_ln1355_6_fu_1022_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_6_fu_186);
    and_ln1355_7_fu_1028_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_7_fu_190);
    and_ln1355_8_fu_1058_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_8_fu_194);
    and_ln1355_9_fu_1063_p2 <= (ref_local_0_V_reg_2066 and cmpr_local_15_V_9_fu_198);
    and_ln1355_fu_986_p2 <= (ref_local_0_V_fu_979_p3 and cmpr_local_15_V_fu_162);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(14);
    ap_CS_fsm_state37 <= ap_CS_fsm(18);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, gmem0_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp163_assign_proc : process(ap_enable_reg_pp0_iter1, gmem0_RVALID)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp163 <= ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, gmem0_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp273_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp273 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp307_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp307 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp308_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp308 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp309_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp309 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp310_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp310 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp311_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp311 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp312_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp312 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp313_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp313 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp314_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp314 <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, ap_enable_reg_pp1_iter1, gmem0_RVALID, ap_block_state19_io)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state19_io) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)));
    end process;

        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage1_01001_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_pp1_stage1_01001 <= ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage1_11001_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp290_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp290 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp291_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp291 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp292_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp292 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp293_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp293 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp294_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp294 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp295_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp295 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp296_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp296 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp297_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp297 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_11001_ignoreCallOp298_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_11001_ignoreCallOp298 <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage1_subdone_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter4_reg, ap_enable_reg_pp1_iter7, gmem0_RVALID, ap_block_state18_io, ap_block_state32_io)
    begin
                ap_block_pp1_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state32_io) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)) or ((gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state18_io) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state11_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter0_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage0_iter1_assign_proc : process(gmem0_RVALID)
    begin
                ap_block_state12_pp0_stage0_iter1 <= (gmem0_RVALID = ap_const_logic_0);
    end process;


    ap_block_state12_pp0_stage0_iter1_ignore_call6_assign_proc : process(gmem0_RVALID)
    begin
                ap_block_state12_pp0_stage0_iter1_ignore_call6 <= (gmem0_RVALID = ap_const_logic_0);
    end process;

        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter4_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_io_assign_proc : process(icmp_ln134_reg_2024, gmem0_ARREADY)
    begin
                ap_block_state18_io <= ((gmem0_ARREADY = ap_const_logic_0) and (icmp_ln134_reg_2024 = ap_const_lv1_0));
    end process;

        ap_block_state18_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage1_iter0_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_io_assign_proc : process(icmp_ln134_reg_2024, gmem0_ARREADY)
    begin
                ap_block_state19_io <= ((gmem0_ARREADY = ap_const_logic_0) and (icmp_ln134_reg_2024 = ap_const_lv1_0));
    end process;

        ap_block_state19_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter1_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage1_iter1_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter2_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage1_iter2_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter3_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage1_iter3_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state25_pp1_stage0_iter4_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call34_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call34 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call36_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call36 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call43_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call43 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call49_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call49 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call57_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call57 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call65_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call65 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call73_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call73 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call81_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call81 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage0_iter4_ignore_call89_assign_proc : process(icmp_ln134_reg_2024_pp1_iter3_reg, gmem0_RVALID)
    begin
                ap_block_state25_pp1_stage0_iter4_ignore_call89 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call34_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call34 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call36_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call36 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call43_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call43 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call49_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call49 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call57_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call57 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call65_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call65 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call73_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call73 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call81_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call81 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage1_iter4_ignore_call89_assign_proc : process(icmp_ln134_reg_2024_pp1_iter4_reg, gmem0_RVALID)
    begin
                ap_block_state26_pp1_stage1_iter4_ignore_call89 <= ((gmem0_RVALID = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state27_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage0_iter5_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage1_iter5_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage0_iter6_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage1_iter6_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter7_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_io_assign_proc : process(icmp_ln134_reg_2024_pp1_iter7_reg, gmem1_WREADY)
    begin
                ap_block_state32_io <= ((gmem1_WREADY = ap_const_logic_0) and (icmp_ln134_reg_2024_pp1_iter7_reg = ap_const_lv1_0));
    end process;

        ap_block_state32_pp1_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call81 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter7_ignore_call89 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_992_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_enable_reg_pp1_iter5)
    begin
                ap_condition_992 <= ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1));
    end process;


    ap_condition_994_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter6)
    begin
                ap_condition_994 <= ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state11_assign_proc : process(icmp_ln27_fu_542_p2)
    begin
        if ((icmp_ln27_fu_542_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state17_assign_proc : process(icmp_ln134_fu_894_p2)
    begin
        if ((icmp_ln134_fu_894_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state37, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_num_assign_phi_fu_380_p4_assign_proc : process(icmp_ln134_reg_2024, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1, data_num_assign_reg_376, data_num_reg_2028)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0))) then 
            ap_phi_mux_data_num_assign_phi_fu_380_p4 <= data_num_reg_2028;
        else 
            ap_phi_mux_data_num_assign_phi_fu_380_p4 <= data_num_assign_reg_376;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state37, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmpr_chunk_num_fu_503_p2 <= std_logic_vector(unsigned(cmpr_chunk_num_assign_reg_354) + unsigned(ap_const_lv3_1));
    cmpr_local_0_V_fu_581_p3 <= (ap_const_lv512_lc_1 & temp_input_V_reg_1934);
    cmprpop_local_0_V_2_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_popcnt_fu_427_ap_return),11));
    data_num_fu_900_p2 <= std_logic_vector(unsigned(ap_phi_mux_data_num_assign_phi_fu_380_p4) + unsigned(ap_const_lv7_1));
    data_part_num_fu_548_p2 <= std_logic_vector(unsigned(data_part_num_0_i24_reg_365) + unsigned(ap_const_lv6_1));
    empty_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_V3_reg_1874),64));

    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, icmp_ln134_reg_2024, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, gmem0_ARREADY, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001, zext_ln219_1_fu_532_p1, zext_ln219_3_fu_921_p1, zext_ln219_5_fu_945_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0))) then 
            gmem0_ARADDR <= zext_ln219_5_fu_945_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024 = ap_const_lv1_0))) then 
            gmem0_ARADDR <= zext_ln219_3_fu_921_p1;
        elsif (((gmem0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_ARADDR <= zext_ln219_1_fu_532_p1;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, icmp_ln134_reg_2024, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, gmem0_ARREADY, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024 = ap_const_lv1_0)))) then 
            gmem0_ARLEN <= ap_const_lv32_1;
        elsif (((gmem0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            gmem0_ARLEN <= ap_const_lv32_20;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, icmp_ln134_reg_2024, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, gmem0_ARREADY, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024 = ap_const_lv1_0)) or ((gmem0_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter4, icmp_ln134_reg_2024_pp1_iter3_reg, icmp_ln134_reg_2024_pp1_iter4_reg, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            gmem0_RREADY <= ap_const_logic_1;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1, icmp_ln134_reg_2024, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln134_reg_2024 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0, icmp_ln134_reg_2024_pp1_iter3_reg, icmp_ln134_reg_2024_pp1_iter4_reg)
    begin
        if ((((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(ap_CS_fsm_state2, gmem1_AWREADY)
    begin
        if (((gmem1_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem1_AWVALID <= ap_const_logic_1;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(ap_CS_fsm_state37, gmem1_BVALID)
    begin
        if (((gmem1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            gmem1_BREADY <= ap_const_logic_1;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    gmem1_WDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln66_14_reg_2180),512));

    gmem1_WVALID_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter7, icmp_ln134_reg_2024_pp1_iter7_reg, ap_block_pp1_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter7_reg = ap_const_lv1_0))) then 
            gmem1_WVALID <= ap_const_logic_1;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_enable_reg_pp1_iter7, icmp_ln134_reg_2024_pp1_iter7_reg)
    begin
        if (((ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln134_reg_2024_pp1_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage1))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_popcnt_fu_427_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001_ignoreCallOp163, ap_block_pp1_stage0_11001_ignoreCallOp273, ap_block_pp1_stage1_11001_ignoreCallOp290)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp273) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp290) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp163) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_popcnt_fu_427_ap_ce <= ap_const_logic_1;
        else 
            grp_popcnt_fu_427_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcnt_fu_427_x_V_assign_proc : process(ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, icmp_ln134_reg_2024_pp1_iter4_reg, trunc_ln364_reg_1939, gmem0_addr_2_read_reg_2060, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln134_reg_2024_pp1_iter4_reg = ap_const_lv1_0))) then 
            grp_popcnt_fu_427_x_V <= gmem0_addr_2_read_reg_2060;
        elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_popcnt_fu_427_x_V <= trunc_ln364_reg_1939;
        else 
            grp_popcnt_fu_427_x
        end if; 
    end process;


    grp_popcntdata_fu_387_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp291, ap_block_pp1_stage0_11001_ignoreCallOp307)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp307) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp291) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_387_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_387_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_387_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_reg_2078, and_ln1355_8_reg_2123, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_387_x_V <= and_ln1355_8_reg_2123;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_387_x_V <= and_ln1355_reg_2078;
            else 
                grp_popcntdata_fu_387_x
            end if;
        else 
            grp_popcntdata_fu_387_x
        end if; 
    end process;


    grp_popcntdata_fu_392_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp292, ap_block_pp1_stage0_11001_ignoreCallOp308)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp308) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp292) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_392_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_392_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_392_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_1_reg_2083, and_ln1355_9_reg_2128, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_392_x_V <= and_ln1355_9_reg_2128;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_392_x_V <= and_ln1355_1_reg_2083;
            else 
                grp_popcntdata_fu_392_x
            end if;
        else 
            grp_popcntdata_fu_392_x
        end if; 
    end process;


    grp_popcntdata_fu_397_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp293, ap_block_pp1_stage0_11001_ignoreCallOp309)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp309) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp293) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_397_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_397_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_397_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_2_reg_2088, and_ln1355_10_reg_2133, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_397_x_V <= and_ln1355_10_reg_2133;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_397_x_V <= and_ln1355_2_reg_2088;
            else 
                grp_popcntdata_fu_397_x
            end if;
        else 
            grp_popcntdata_fu_397_x
        end if; 
    end process;


    grp_popcntdata_fu_402_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp294, ap_block_pp1_stage0_11001_ignoreCallOp310)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp310) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp294) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_402_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_402_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_402_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_3_reg_2093, and_ln1355_11_reg_2138, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_402_x_V <= and_ln1355_11_reg_2138;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_402_x_V <= and_ln1355_3_reg_2093;
            else 
                grp_popcntdata_fu_402_x
            end if;
        else 
            grp_popcntdata_fu_402_x
        end if; 
    end process;


    grp_popcntdata_fu_407_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp295, ap_block_pp1_stage0_11001_ignoreCallOp311)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp311) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp295) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_407_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_407_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_407_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_4_reg_2098, and_ln1355_12_reg_2143, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_407_x_V <= and_ln1355_12_reg_2143;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_407_x_V <= and_ln1355_4_reg_2098;
            else 
                grp_popcntdata_fu_407_x
            end if;
        else 
            grp_popcntdata_fu_407_x
        end if; 
    end process;


    grp_popcntdata_fu_412_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp296, ap_block_pp1_stage0_11001_ignoreCallOp312)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp312) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp296) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_412_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_412_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_412_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_5_reg_2103, and_ln1355_13_reg_2148, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_412_x_V <= and_ln1355_13_reg_2148;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_412_x_V <= and_ln1355_5_reg_2103;
            else 
                grp_popcntdata_fu_412_x
            end if;
        else 
            grp_popcntdata_fu_412_x_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_popcntdata_fu_417_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp297, ap_block_pp1_stage0_11001_ignoreCallOp313)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp313) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp297) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_417_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_417_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_417_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_6_reg_2108, and_ln1355_14_reg_2153, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_417_x_V <= and_ln1355_14_reg_2153;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_417_x_V <= and_ln1355_6_reg_2108;
            else 
                grp_popcntdata_fu_417_x_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_popcntdata_fu_417_x_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_popcntdata_fu_422_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage1_11001_ignoreCallOp298, ap_block_pp1_stage0_11001_ignoreCallOp314)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp314) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001_ignoreCallOp298) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            grp_popcntdata_fu_422_ap_ce <= ap_const_logic_1;
        else 
            grp_popcntdata_fu_422_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_popcntdata_fu_422_x_V_assign_proc : process(icmp_ln134_reg_2024_pp1_iter5_reg, and_ln1355_7_reg_2113, and_ln1355_15_reg_2158, ap_condition_992, ap_condition_994)
    begin
        if ((icmp_ln134_reg_2024_pp1_iter5_reg = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_994)) then 
                grp_popcntdata_fu_422_x_V <= and_ln1355_15_reg_2158;
            elsif ((ap_const_boolean_1 = ap_condition_992)) then 
                grp_popcntdata_fu_422_x_V <= and_ln1355_7_reg_2113;
            else 
                grp_popcntdata_fu_422_x_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_popcntdata_fu_422_x
        end if; 
    end process;

    icmp_ln134_fu_894_p2 <= "1" when (ap_phi_mux_data_num_assign_phi_fu_380_p4 = ap_const_lv7_40) else "0";
    icmp_ln27_fu_542_p2 <= "1" when (data_part_num_0_i24_reg_365 = ap_const_lv6_20) else "0";
    icmp_ln54_10_fu_1529_p2 <= "1" when (signed(zext_ln215_39_fu_1519_p1) < signed(sub_ln1354_12_fu_1523_p2)) else "0";
    icmp_ln54_11_fu_1559_p2 <= "1" when (signed(zext_ln215_42_fu_1549_p1) < signed(sub_ln1354_13_fu_1553_p2)) else "0";
    icmp_ln54_12_fu_1589_p2 <= "1" when (signed(zext_ln215_45_fu_1579_p1) < signed(sub_ln1354_14_fu_1583_p2)) else "0";
    icmp_ln54_13_fu_1325_p2 <= "1" when (signed(zext_ln215_3_fu_1110_p1) < signed(sub_ln1354_fu_1114_p2)) else "0";
    icmp_ln54_14_fu_1337_p2 <= "1" when (signed(zext_ln215_6_fu_1129_p1) < signed(sub_ln1354_1_fu_1133_p2)) else "0";
    icmp_ln54_1_fu_1189_p2 <= "1" when (signed(zext_ln215_12_fu_1179_p1) < signed(sub_ln1354_3_fu_1183_p2)) else "0";
    icmp_ln54_2_fu_1220_p2 <= "1" when (signed(zext_ln215_15_fu_1210_p1) < signed(sub_ln1354_4_fu_1214_p2)) else "0";
    icmp_ln54_3_fu_1251_p2 <= "1" when (signed(zext_ln215_18_fu_1241_p1) < signed(sub_ln1354_5_fu_1245_p2)) else "0";
    icmp_ln54_4_fu_1282_p2 <= "1" when (signed(zext_ln215_21_fu_1272_p1) < signed(sub_ln1354_6_fu_1276_p2)) else "0";
    icmp_ln54_5_fu_1313_p2 <= "1" when (signed(zext_ln215_24_fu_1303_p1) < signed(sub_ln1354_7_fu_1307_p2)) else "0";
    icmp_ln54_6_fu_1409_p2 <= "1" when (signed(zext_ln215_27_fu_1399_p1) < signed(sub_ln1354_8_fu_1403_p2)) else "0";
    icmp_ln54_7_fu_1439_p2 <= "1" when (signed(zext_ln215_30_fu_1429_p1) < signed(sub_ln1354_9_fu_1433_p2)) else "0";
    icmp_ln54_8_fu_1469_p2 <= "1" when (signed(zext_ln215_33_fu_1459_p1) < signed(sub_ln1354_10_fu_1463_p2)) else "0";
    icmp_ln54_9_fu_1499_p2 <= "1" when (signed(zext_ln215_36_fu_1489_p1) < signed(sub_ln1354_11_fu_1493_p2)) else "0";
    icmp_ln54_fu_1158_p2 <= "1" when (signed(zext_ln215_9_fu_1148_p1) < signed(sub_ln1354_2_fu_1152_p2)) else "0";
    icmp_ln66_fu_1619_p2 <= "1" when (signed(zext_ln215_48_fu_1609_p1) < signed(sub_ln1354_15_fu_1613_p2)) else "0";
    icmp_ln92_fu_497_p2 <= "1" when (cmpr_chunk_num_assign_reg_354 = ap_const_lv3_4) else "0";
    lshr_ln647_fu_682_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv1024_lc_2),to_integer(unsigned('0' & zext_ln647_1_fu_678_p1(31-1 downto 0)))));
    num_hi_fu_575_p2 <= (shl_ln1_fu_568_p3 or ap_const_lv10_1FF);
    or_ln32_fu_931_p2 <= (shl_ln137_reg_2033 or ap_const_lv7_1);
    or_ln66_10_fu_1649_p2 <= (xor_ln54_11_fu_1565_p2 or xor_ln54_10_fu_1535_p2);
    or_ln66_11_fu_1655_p2 <= (xor_ln66_fu_1625_p2 or xor_ln54_12_fu_1595_p2);
    or_ln66_12_fu_1661_p2 <= (or_ln66_11_fu_1655_p2 or or_ln66_10_fu_1649_p2);
    or_ln66_13_fu_1667_p2 <= (or_ln66_9_fu_1643_p2 or or_ln66_12_fu_1661_p2);
    or_ln66_14_fu_1673_p2 <= (or_ln66_6_reg_2175 or or_ln66_13_fu_1667_p2);
    or_ln66_1_fu_1355_p2 <= (xor_ln54_fu_1164_p2 or xor_ln54_1_fu_1195_p2);
    or_ln66_2_fu_1361_p2 <= (or_ln66_fu_1349_p2 or or_ln66_1_fu_1355_p2);
    or_ln66_3_fu_1367_p2 <= (xor_ln54_3_fu_1257_p2 or xor_ln54_2_fu_1226_p2);
    or_ln66_4_fu_1373_p2 <= (xor_ln54_5_fu_1319_p2 or xor_ln54_4_fu_1288_p2);
    or_ln66_5_fu_1379_p2 <= (or_ln66_4_fu_1373_p2 or or_ln66_3_fu_1367_p2);
    or_ln66_6_fu_1385_p2 <= (or_ln66_5_fu_1379_p2 or or_ln66_2_fu_1361_p2);
    or_ln66_7_fu_1631_p2 <= (xor_ln54_7_fu_1445_p2 or xor_ln54_6_fu_1415_p2);
    or_ln66_8_fu_1637_p2 <= (xor_ln54_9_fu_1505_p2 or xor_ln54_8_fu_1475_p2);
    or_ln66_9_fu_1643_p2 <= (or_ln66_8_fu_1637_p2 or or_ln66_7_fu_1631_p2);
    or_ln66_fu_1349_p2 <= (xor_ln54_14_fu_1343_p2 or xor_ln54_13_fu_1331_p2);
    or_ln_fu_513_p4 <= ((ap_const_lv2_2 & trunc_ln93_fu_509_p1) & ap_const_lv4_0);
    p_Result_s_fu_688_p2 <= (lshr_ln647_fu_682_p2 and cmpr_local_0_V_fu_581_p3);
    p_cast_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1879),59));
    ref_local_0_V_fu_979_p3 <= (ap_const_lv512_lc_1 & gmem0_addr_2_read_reg_2060);
    shl_ln137_fu_906_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_data_num_assign_phi_fu_380_p4),to_integer(unsigned('0' & ap_const_lv7_1(7-1 downto 0)))));
    shl_ln1_fu_568_p3 <= (trunc_ln30_reg_1929_pp0_iter1_reg & ap_const_lv9_0);
    sub_ln1354_10_fu_1463_p2 <= std_logic_vector(unsigned(zext_ln215_32_fu_1455_p1) - unsigned(zext_ln215_33_fu_1459_p1));
    sub_ln1354_11_fu_1493_p2 <= std_logic_vector(unsigned(zext_ln215_35_fu_1485_p1) - unsigned(zext_ln215_36_fu_1489_p1));
    sub_ln1354_12_fu_1523_p2 <= std_logic_vector(unsigned(zext_ln215_38_fu_1515_p1) - unsigned(zext_ln215_39_fu_1519_p1));
    sub_ln1354_13_fu_1553_p2 <= std_logic_vector(unsigned(zext_ln215_41_fu_1545_p1) - unsigned(zext_ln215_42_fu_1549_p1));
    sub_ln1354_14_fu_1583_p2 <= std_logic_vector(unsigned(zext_ln215_44_fu_1575_p1) - unsigned(zext_ln215_45_fu_1579_p1));
    sub_ln1354_15_fu_1613_p2 <= std_logic_vector(unsigned(zext_ln215_47_fu_1605_p1) - unsigned(zext_ln215_48_fu_1609_p1));
    sub_ln1354_1_fu_1133_p2 <= std_logic_vector(unsigned(zext_ln215_5_fu_1125_p1) - unsigned(zext_ln215_6_fu_1129_p1));
    sub_ln1354_2_fu_1152_p2 <= std_logic_vector(unsigned(zext_ln215_8_fu_1144_p1) - unsigned(zext_ln215_9_fu_1148_p1));
    sub_ln1354_3_fu_1183_p2 <= std_logic_vector(unsigned(zext_ln215_11_fu_1175_p1) - unsigned(zext_ln215_12_fu_1179_p1));
    sub_ln1354_4_fu_1214_p2 <= std_logic_vector(unsigned(zext_ln215_14_fu_1206_p1) - unsigned(zext_ln215_15_fu_1210_p1));
    sub_ln1354_5_fu_1245_p2 <= std_logic_vector(unsigned(zext_ln215_17_fu_1237_p1) - unsigned(zext_ln215_18_fu_1241_p1));
    sub_ln1354_6_fu_1276_p2 <= std_logic_vector(unsigned(zext_ln215_20_fu_1268_p1) - unsigned(zext_ln215_21_fu_1272_p1));
    sub_ln1354_7_fu_1307_p2 <= std_logic_vector(unsigned(zext_ln215_23_fu_1299_p1) - unsigned(zext_ln215_24_fu_1303_p1));
    sub_ln1354_8_fu_1403_p2 <= std_logic_vector(unsigned(zext_ln215_26_fu_1395_p1) - unsigned(zext_ln215_27_fu_1399_p1));
    sub_ln1354_9_fu_1433_p2 <= std_logic_vector(unsigned(zext_ln215_29_fu_1425_p1) - unsigned(zext_ln215_30_fu_1429_p1));
    sub_ln1354_fu_1114_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_1106_p1) - unsigned(zext_ln215_3_fu_1110_p1));
    trunc_ln30_fu_564_p1 <= data_part_num_0_i24_reg_365(1 - 1 downto 0);
    trunc_ln364_fu_694_p1 <= p_Result_s_fu_688_p2(512 - 1 downto 0);
    trunc_ln93_fu_509_p1 <= cmpr_chunk_num_assign_reg_354(2 - 1 downto 0);
    xor_ln54_10_fu_1535_p2 <= (icmp_ln54_10_fu_1529_p2 xor ap_const_lv1_1);
    xor_ln54_11_fu_1565_p2 <= (icmp_ln54_11_fu_1559_p2 xor ap_const_lv1_1);
    xor_ln54_12_fu_1595_p2 <= (icmp_ln54_12_fu_1589_p2 xor ap_const_lv1_1);
    xor_ln54_13_fu_1331_p2 <= (icmp_ln54_13_fu_1325_p2 xor ap_const_lv1_1);
    xor_ln54_14_fu_1343_p2 <= (icmp_ln54_14_fu_1337_p2 xor ap_const_lv1_1);
    xor_ln54_1_fu_1195_p2 <= (icmp_ln54_1_fu_1189_p2 xor ap_const_lv1_1);
    xor_ln54_2_fu_1226_p2 <= (icmp_ln54_2_fu_1220_p2 xor ap_const_lv1_1);
    xor_ln54_3_fu_1257_p2 <= (icmp_ln54_3_fu_1251_p2 xor ap_const_lv1_1);
    xor_ln54_4_fu_1288_p2 <= (icmp_ln54_4_fu_1282_p2 xor ap_const_lv1_1);
    xor_ln54_5_fu_1319_p2 <= (icmp_ln54_5_fu_1313_p2 xor ap_const_lv1_1);
    xor_ln54_6_fu_1415_p2 <= (icmp_ln54_6_fu_1409_p2 xor ap_const_lv1_1);
    xor_ln54_7_fu_1445_p2 <= (icmp_ln54_7_fu_1439_p2 xor ap_const_lv1_1);
    xor_ln54_8_fu_1475_p2 <= (icmp_ln54_8_fu_1469_p2 xor ap_const_lv1_1);
    xor_ln54_9_fu_1505_p2 <= (icmp_ln54_9_fu_1499_p2 xor ap_const_lv1_1);
    xor_ln54_fu_1164_p2 <= (icmp_ln54_fu_1158_p2 xor ap_const_lv1_1);
    xor_ln647_fu_672_p2 <= (zext_ln647_fu_668_p1 xor ap_const_lv11_3FF);
    xor_ln66_fu_1625_p2 <= (icmp_ln66_fu_1619_p2 xor ap_const_lv1_1);
    zext_ln215_10_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_3_fu_238),12));
    zext_ln215_11_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_3_fu_1170_p2),13));
    zext_ln215_12_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_444),13));
    zext_ln215_13_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_4_fu_242),12));
    zext_ln215_14_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_4_fu_1201_p2),13));
    zext_ln215_15_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),13));
    zext_ln215_16_fu_850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_5_fu_246),12));
    zext_ln215_17_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_5_fu_1232_p2),13));
    zext_ln215_18_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_452),13));
    zext_ln215_19_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_6_fu_250),12));
    zext_ln215_1_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_fu_226),12));
    zext_ln215_20_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_6_fu_1263_p2),13));
    zext_ln215_21_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_456),13));
    zext_ln215_22_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_7_fu_254),12));
    zext_ln215_23_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_7_fu_1294_p2),13));
    zext_ln215_24_fu_1303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_460),13));
    zext_ln215_25_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_8_fu_258),12));
    zext_ln215_26_fu_1395_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_8_fu_1391_p2),13));
    zext_ln215_27_fu_1399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_432),13));
    zext_ln215_28_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_9_fu_262),12));
    zext_ln215_29_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_9_fu_1421_p2),13));
    zext_ln215_2_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_fu_1101_p2),13));
    zext_ln215_30_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_436),13));
    zext_ln215_31_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_10_fu_266),12));
    zext_ln215_32_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_10_fu_1451_p2),13));
    zext_ln215_33_fu_1459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_440),13));
    zext_ln215_34_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_11_fu_270),12));
    zext_ln215_35_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_11_fu_1481_p2),13));
    zext_ln215_36_fu_1489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_444),13));
    zext_ln215_37_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_12_fu_274),12));
    zext_ln215_38_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_12_fu_1511_p2),13));
    zext_ln215_39_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),13));
    zext_ln215_3_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_432),13));
    zext_ln215_40_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_13_fu_278),12));
    zext_ln215_41_fu_1545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_13_fu_1541_p2),13));
    zext_ln215_42_fu_1549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_452),13));
    zext_ln215_43_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_14_fu_282),12));
    zext_ln215_44_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_14_fu_1571_p2),13));
    zext_ln215_45_fu_1579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_456),13));
    zext_ln215_46_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_15_fu_286),12));
    zext_ln215_47_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_15_fu_1601_p2),13));
    zext_ln215_48_fu_1609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_460),13));
    zext_ln215_4_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_1_fu_230),12));
    zext_ln215_5_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_1_fu_1120_p2),13));
    zext_ln215_6_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_436),13));
    zext_ln215_7_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmprpop_local_15_V_2_fu_234),12));
    zext_ln215_8_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_2_fu_1139_p2),13));
    zext_ln215_9_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_440),13));
    zext_ln215_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refpop_local_0_V_reg_2118),12));
    zext_ln219_1_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln219_reg_1905),64));
    zext_ln219_2_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln137_fu_906_p2),59));
    zext_ln219_3_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln219_1_reg_2038),64));
    zext_ln219_4_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln32_fu_931_p2),59));
    zext_ln219_5_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln219_2_reg_2049),64));
    zext_ln219_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_513_p4),59));
    zext_ln647_1_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln647_fu_672_p2),1024));
    zext_ln647_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_hi_fu_575_p2),11));
end behav;
