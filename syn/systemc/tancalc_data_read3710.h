// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tancalc_data_read3710_HH_
#define _tancalc_data_read3710_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "tancalc_popcnt.h"
#include "tancalc_tancalc_mux_42_1_1_1.h"
#include "tancalc_tancalc_mux_42_1024_1_1.h"
#include "tancalc_tancalc_mux_42_11_1_1.h"

namespace ap_rtl {

struct tancalc_data_read3710 : public sc_module {
    // Port declarations 201
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_input_V_AWVALID;
    sc_in< sc_logic > m_axi_input_V_AWREADY;
    sc_out< sc_lv<64> > m_axi_input_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_input_V_AWID;
    sc_out< sc_lv<32> > m_axi_input_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_input_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_input_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_input_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_input_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_input_V_AWUSER;
    sc_out< sc_logic > m_axi_input_V_WVALID;
    sc_in< sc_logic > m_axi_input_V_WREADY;
    sc_out< sc_lv<512> > m_axi_input_V_WDATA;
    sc_out< sc_lv<64> > m_axi_input_V_WSTRB;
    sc_out< sc_logic > m_axi_input_V_WLAST;
    sc_out< sc_lv<1> > m_axi_input_V_WID;
    sc_out< sc_lv<1> > m_axi_input_V_WUSER;
    sc_out< sc_logic > m_axi_input_V_ARVALID;
    sc_in< sc_logic > m_axi_input_V_ARREADY;
    sc_out< sc_lv<64> > m_axi_input_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_input_V_ARID;
    sc_out< sc_lv<32> > m_axi_input_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_input_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_input_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_input_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_input_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_input_V_ARUSER;
    sc_in< sc_logic > m_axi_input_V_RVALID;
    sc_out< sc_logic > m_axi_input_V_RREADY;
    sc_in< sc_lv<512> > m_axi_input_V_RDATA;
    sc_in< sc_logic > m_axi_input_V_RLAST;
    sc_in< sc_lv<1> > m_axi_input_V_RID;
    sc_in< sc_lv<1> > m_axi_input_V_RUSER;
    sc_in< sc_lv<2> > m_axi_input_V_RRESP;
    sc_in< sc_logic > m_axi_input_V_BVALID;
    sc_out< sc_logic > m_axi_input_V_BREADY;
    sc_in< sc_lv<2> > m_axi_input_V_BRESP;
    sc_in< sc_lv<1> > m_axi_input_V_BID;
    sc_in< sc_lv<1> > m_axi_input_V_BUSER;
    sc_in< sc_lv<58> > input_V_offset;
    sc_in< sc_lv<7> > data_num_0_i;
    sc_in< sc_lv<1024> > p_read;
    sc_in< sc_lv<1024> > p_read1;
    sc_in< sc_lv<1024> > p_read2;
    sc_in< sc_lv<1024> > p_read3;
    sc_in< sc_lv<1024> > p_read4;
    sc_in< sc_lv<1024> > p_read5;
    sc_in< sc_lv<1024> > p_read6;
    sc_in< sc_lv<1024> > p_read7;
    sc_in< sc_lv<1024> > p_read8;
    sc_in< sc_lv<1024> > p_read9;
    sc_in< sc_lv<1024> > p_read10;
    sc_in< sc_lv<1024> > p_read11;
    sc_in< sc_lv<1024> > p_read12;
    sc_in< sc_lv<1024> > p_read13;
    sc_in< sc_lv<1024> > p_read14;
    sc_in< sc_lv<1024> > p_read15;
    sc_in< sc_lv<11> > p_read16;
    sc_in< sc_lv<11> > p_read17;
    sc_in< sc_lv<11> > p_read18;
    sc_in< sc_lv<11> > p_read19;
    sc_in< sc_lv<11> > p_read20;
    sc_in< sc_lv<11> > p_read21;
    sc_in< sc_lv<11> > p_read22;
    sc_in< sc_lv<11> > p_read23;
    sc_in< sc_lv<11> > p_read24;
    sc_in< sc_lv<11> > p_read25;
    sc_in< sc_lv<11> > p_read26;
    sc_in< sc_lv<11> > p_read27;
    sc_in< sc_lv<11> > p_read28;
    sc_in< sc_lv<11> > p_read29;
    sc_in< sc_lv<11> > p_read30;
    sc_in< sc_lv<10> > p_read31;
    sc_in< sc_lv<2> > cmpr_chunk_num_0_i;
    sc_out< sc_lv<6> > data_num_0_i_c_din;
    sc_in< sc_logic > data_num_0_i_c_full_n;
    sc_out< sc_logic > data_num_0_i_c_write;
    sc_out< sc_lv<1024> > cmpr_local_0_V_c_din;
    sc_in< sc_logic > cmpr_local_0_V_c_full_n;
    sc_out< sc_logic > cmpr_local_0_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_1_V_c_din;
    sc_in< sc_logic > cmpr_local_1_V_c_full_n;
    sc_out< sc_logic > cmpr_local_1_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_2_V_c_din;
    sc_in< sc_logic > cmpr_local_2_V_c_full_n;
    sc_out< sc_logic > cmpr_local_2_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_3_V_c_din;
    sc_in< sc_logic > cmpr_local_3_V_c_full_n;
    sc_out< sc_logic > cmpr_local_3_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_4_V_c_din;
    sc_in< sc_logic > cmpr_local_4_V_c_full_n;
    sc_out< sc_logic > cmpr_local_4_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_5_V_c_din;
    sc_in< sc_logic > cmpr_local_5_V_c_full_n;
    sc_out< sc_logic > cmpr_local_5_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_6_V_c_din;
    sc_in< sc_logic > cmpr_local_6_V_c_full_n;
    sc_out< sc_logic > cmpr_local_6_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_7_V_c_din;
    sc_in< sc_logic > cmpr_local_7_V_c_full_n;
    sc_out< sc_logic > cmpr_local_7_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_8_V_c_din;
    sc_in< sc_logic > cmpr_local_8_V_c_full_n;
    sc_out< sc_logic > cmpr_local_8_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_9_V_c_din;
    sc_in< sc_logic > cmpr_local_9_V_c_full_n;
    sc_out< sc_logic > cmpr_local_9_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_10_V_c_din;
    sc_in< sc_logic > cmpr_local_10_V_c_full_n;
    sc_out< sc_logic > cmpr_local_10_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_11_V_c_din;
    sc_in< sc_logic > cmpr_local_11_V_c_full_n;
    sc_out< sc_logic > cmpr_local_11_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_12_V_c_din;
    sc_in< sc_logic > cmpr_local_12_V_c_full_n;
    sc_out< sc_logic > cmpr_local_12_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_13_V_c_din;
    sc_in< sc_logic > cmpr_local_13_V_c_full_n;
    sc_out< sc_logic > cmpr_local_13_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_14_V_c_din;
    sc_in< sc_logic > cmpr_local_14_V_c_full_n;
    sc_out< sc_logic > cmpr_local_14_V_c_write;
    sc_out< sc_lv<1024> > cmpr_local_15_V_c_din;
    sc_in< sc_logic > cmpr_local_15_V_c_full_n;
    sc_out< sc_logic > cmpr_local_15_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_0_V_c_din;
    sc_in< sc_logic > cmprpop_local_0_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_0_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_1_V_c_din;
    sc_in< sc_logic > cmprpop_local_1_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_1_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_2_V_c_din;
    sc_in< sc_logic > cmprpop_local_2_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_2_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_3_V_c_din;
    sc_in< sc_logic > cmprpop_local_3_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_3_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_4_V_c_din;
    sc_in< sc_logic > cmprpop_local_4_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_4_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_5_V_c_din;
    sc_in< sc_logic > cmprpop_local_5_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_5_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_6_V_c_din;
    sc_in< sc_logic > cmprpop_local_6_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_6_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_7_V_c_din;
    sc_in< sc_logic > cmprpop_local_7_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_7_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_8_V_c_din;
    sc_in< sc_logic > cmprpop_local_8_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_8_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_9_V_c_din;
    sc_in< sc_logic > cmprpop_local_9_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_9_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_10_V_c_din;
    sc_in< sc_logic > cmprpop_local_10_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_10_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_11_V_c_din;
    sc_in< sc_logic > cmprpop_local_11_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_11_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_12_V_c_din;
    sc_in< sc_logic > cmprpop_local_12_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_12_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_13_V_c_din;
    sc_in< sc_logic > cmprpop_local_13_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_13_V_c_write;
    sc_out< sc_lv<11> > cmprpop_local_14_V_c_din;
    sc_in< sc_logic > cmprpop_local_14_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_14_V_c_write;
    sc_out< sc_lv<10> > cmprpop_local_15_V_c_din;
    sc_in< sc_logic > cmprpop_local_15_V_c_full_n;
    sc_out< sc_logic > cmprpop_local_15_V_c_write;
    sc_out< sc_lv<2> > cmpr_chunk_num_0_i_c_din;
    sc_in< sc_logic > cmpr_chunk_num_0_i_c_full_n;
    sc_out< sc_logic > cmpr_chunk_num_0_i_c_write;
    sc_in< sc_lv<58> > output_V_offset;
    sc_out< sc_lv<58> > output_V_offset_out_din;
    sc_in< sc_logic > output_V_offset_out_full_n;
    sc_out< sc_logic > output_V_offset_out_write;
    sc_out< sc_lv<1024> > ap_return_0;
    sc_out< sc_lv<1024> > ap_return_1;
    sc_out< sc_lv<1024> > ap_return_2;
    sc_out< sc_lv<1024> > ap_return_3;
    sc_out< sc_lv<11> > ap_return_4;
    sc_out< sc_lv<11> > ap_return_5;
    sc_out< sc_lv<11> > ap_return_6;
    sc_out< sc_lv<11> > ap_return_7;
    sc_signal< sc_lv<1> > ap_var_for_const0;


    // Module declarations
    tancalc_data_read3710(sc_module_name name);
    SC_HAS_PROCESS(tancalc_data_read3710);

    ~tancalc_data_read3710();

    sc_trace_file* mVcdFile;

    tancalc_popcnt* grp_popcnt_fu_959;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U120;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U121;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U122;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U123;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U124;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U125;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U126;
    tancalc_tancalc_mux_42_1_1_1<1,1,1,1,1,1,2,1>* tancalc_mux_42_1_1_1_U127;
    tancalc_tancalc_mux_42_1024_1_1<1,1,1024,1024,1024,1024,2,1024>* tancalc_mux_42_1024_1_1_U128;
    tancalc_tancalc_mux_42_1024_1_1<1,1,1024,1024,1024,1024,2,1024>* tancalc_mux_42_1024_1_1_U129;
    tancalc_tancalc_mux_42_1024_1_1<1,1,1024,1024,1024,1024,2,1024>* tancalc_mux_42_1024_1_1_U130;
    tancalc_tancalc_mux_42_1024_1_1<1,1,1024,1024,1024,1024,2,1024>* tancalc_mux_42_1024_1_1_U131;
    tancalc_tancalc_mux_42_11_1_1<1,1,11,11,11,11,2,11>* tancalc_mux_42_11_1_1_U132;
    tancalc_tancalc_mux_42_11_1_1<1,1,11,11,11,11,2,11>* tancalc_mux_42_11_1_1_U133;
    tancalc_tancalc_mux_42_11_1_1<1,1,11,11,11,11,2,11>* tancalc_mux_42_11_1_1_U134;
    tancalc_tancalc_mux_42_11_1_1<1,1,11,11,11,11,2,11>* tancalc_mux_42_11_1_1_U135;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > input_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > input_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355;
    sc_signal< sc_logic > data_num_0_i_c_blk_n;
    sc_signal< sc_logic > cmpr_local_0_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_1_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_2_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_3_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_4_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_5_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_6_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_7_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_8_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_9_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_10_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_11_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_12_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_13_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_14_V_c_blk_n;
    sc_signal< sc_logic > cmpr_local_15_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_0_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_1_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_2_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_3_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_4_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_5_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_6_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_7_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_8_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_9_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_10_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_11_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_12_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_13_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_14_V_c_blk_n;
    sc_signal< sc_logic > cmprpop_local_15_V_c_blk_n;
    sc_signal< sc_logic > cmpr_chunk_num_0_i_c_blk_n;
    sc_signal< sc_logic > output_V_offset_out_blk_n;
    sc_signal< sc_lv<4> > data_part_num_0_i_i_i_i_i_i_reg_763;
    sc_signal< sc_lv<4> > data_part_num_0_i_i_i_i_i_i_reg_763_pp0_iter1_reg;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter10;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1024> > ref_local_2_V3_016_i_i_i_reg_775;
    sc_signal< sc_lv<1> > write_flag9_0_i_i_i_reg_787;
    sc_signal< sc_lv<1> > write_flag6_0_i_i_i_reg_798;
    sc_signal< sc_lv<1024> > ref_local_3_V4_015_i_i_i_reg_809;
    sc_signal< sc_lv<1> > write_flag12_0_i_i_i_reg_821;
    sc_signal< sc_lv<1024> > ref_local_1_V2_014_i_i_i_reg_832;
    sc_signal< sc_lv<11> > refpop_local_0_V5_013_i_i_i_reg_844;
    sc_signal< sc_lv<1> > write_flag15_0_i_i_i_reg_856;
    sc_signal< sc_lv<1> > write_flag3_0_i_i_i_reg_867;
    sc_signal< sc_lv<11> > refpop_local_1_V6_012_i_i_i_reg_878;
    sc_signal< sc_lv<1> > write_flag18_0_i_i_i_reg_890;
    sc_signal< sc_lv<1024> > ref_local_0_V1_011_i_i_i_reg_901;
    sc_signal< sc_lv<11> > refpop_local_2_V7_010_i_i_i_reg_913;
    sc_signal< sc_lv<1> > write_flag21_0_i_i_i_reg_925;
    sc_signal< sc_lv<1> > write_flag_0_i_i_i_reg_936;
    sc_signal< sc_lv<11> > refpop_local_3_V8_09_i_i_i_reg_947;
    sc_signal< sc_lv<59> > add_ln219_fu_983_p2;
    sc_signal< sc_lv<59> > add_ln219_reg_1344;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln27_fu_999_p2;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln27_reg_1355_pp0_iter9_reg;
    sc_signal< sc_lv<4> > data_part_num_fu_1005_p2;
    sc_signal< sc_lv<4> > data_part_num_reg_1359;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter2_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter3_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter4_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter5_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter6_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter7_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter8_reg;
    sc_signal< sc_lv<2> > trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg;
    sc_signal< sc_lv<512> > temp_input_V_reg_1376;
    sc_signal< sc_lv<1> > write_flag_1_i_i_i_fu_1021_p6;
    sc_signal< sc_lv<1> > write_flag21_1_i_i_i_fu_1035_p6;
    sc_signal< sc_lv<1> > write_flag18_1_i_i_i_fu_1049_p6;
    sc_signal< sc_lv<1> > write_flag3_1_i_i_i_fu_1063_p6;
    sc_signal< sc_lv<1> > write_flag15_1_i_i_i_fu_1077_p6;
    sc_signal< sc_lv<1> > write_flag12_1_i_i_i_fu_1091_p6;
    sc_signal< sc_lv<1> > write_flag6_1_i_i_i_fu_1105_p6;
    sc_signal< sc_lv<1> > write_flag9_1_i_i_i_fu_1119_p6;
    sc_signal< sc_lv<512> > trunc_ln364_fu_1184_p1;
    sc_signal< sc_lv<512> > trunc_ln364_reg_1421;
    sc_signal< sc_lv<1024> > ref_local_0_V1_1_i_i_i_fu_1188_p6;
    sc_signal< sc_lv<1024> > ref_local_0_V1_1_i_i_i_reg_1426;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1024> > ref_local_1_V2_1_i_i_i_fu_1201_p6;
    sc_signal< sc_lv<1024> > ref_local_1_V2_1_i_i_i_reg_1431;
    sc_signal< sc_lv<1024> > ref_local_3_V4_1_i_i_i_fu_1214_p6;
    sc_signal< sc_lv<1024> > ref_local_3_V4_1_i_i_i_reg_1436;
    sc_signal< sc_lv<1024> > ref_local_2_V3_1_i_i_i_fu_1227_p6;
    sc_signal< sc_lv<1024> > ref_local_2_V3_1_i_i_i_reg_1441;
    sc_signal< sc_lv<11> > refpop_local_3_V8_1_i_i_i_fu_1244_p6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<11> > refpop_local_2_V7_1_i_i_i_fu_1257_p6;
    sc_signal< sc_lv<11> > refpop_local_1_V6_1_i_i_i_fu_1270_p6;
    sc_signal< sc_lv<11> > refpop_local_0_V5_1_i_i_i_fu_1283_p6;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter1_state10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_lv<10> > grp_popcnt_fu_959_ap_return;
    sc_signal< sc_logic > grp_popcnt_fu_959_ap_ce;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0_ignore_call15;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1_ignore_call15;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2_ignore_call15;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter3_ignore_call15;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter4_ignore_call15;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter5_ignore_call15;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter6_ignore_call15;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter7_ignore_call15;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter8_ignore_call15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter9_ignore_call15;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter10_ignore_call15;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp305;
    sc_signal< sc_lv<4> > ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4;
    sc_signal< sc_lv<1024> > ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4;
    sc_signal< sc_lv<1024> > ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4;
    sc_signal< sc_lv<1024> > ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4;
    sc_signal< sc_lv<1024> > ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4;
    sc_signal< sc_lv<64> > zext_ln219_2_fu_989_p1;
    sc_signal< sc_lv<7> > shl_ln138_fu_969_p2;
    sc_signal< sc_lv<59> > zext_ln219_fu_975_p1;
    sc_signal< sc_lv<59> > zext_ln219_1_fu_979_p1;
    sc_signal< sc_lv<2> > write_flag_1_i_i_i_fu_1021_p5;
    sc_signal< sc_lv<2> > write_flag21_1_i_i_i_fu_1035_p5;
    sc_signal< sc_lv<2> > write_flag18_1_i_i_i_fu_1049_p5;
    sc_signal< sc_lv<2> > write_flag3_1_i_i_i_fu_1063_p5;
    sc_signal< sc_lv<2> > write_flag15_1_i_i_i_fu_1077_p5;
    sc_signal< sc_lv<2> > write_flag12_1_i_i_i_fu_1091_p5;
    sc_signal< sc_lv<2> > write_flag6_1_i_i_i_fu_1105_p5;
    sc_signal< sc_lv<2> > write_flag9_1_i_i_i_fu_1119_p5;
    sc_signal< sc_lv<1> > trunc_ln30_fu_1133_p1;
    sc_signal< sc_lv<10> > shl_ln_i_i_i_fu_1137_p3;
    sc_signal< sc_lv<10> > num_hi_fu_1145_p2;
    sc_signal< sc_lv<11> > zext_ln647_fu_1158_p1;
    sc_signal< sc_lv<11> > xor_ln647_fu_1162_p2;
    sc_signal< sc_lv<1024> > zext_ln647_1_fu_1168_p1;
    sc_signal< sc_lv<1024> > p_Result_s_fu_1151_p3;
    sc_signal< sc_lv<1024> > lshr_ln647_fu_1172_p2;
    sc_signal< sc_lv<1024> > p_Result_1_fu_1178_p2;
    sc_signal< sc_lv<11> > zext_ln35_fu_1240_p1;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_state20;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<1024> ap_const_lv1024_lc_2;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln219_fu_983_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp305();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state10_pp0_stage0_iter1_ignore_call15();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state11_pp0_stage0_iter2_ignore_call15();
    void thread_ap_block_state12_pp0_stage0_iter3();
    void thread_ap_block_state12_pp0_stage0_iter3_ignore_call15();
    void thread_ap_block_state13_pp0_stage0_iter4();
    void thread_ap_block_state13_pp0_stage0_iter4_ignore_call15();
    void thread_ap_block_state14_pp0_stage0_iter5();
    void thread_ap_block_state14_pp0_stage0_iter5_ignore_call15();
    void thread_ap_block_state15_pp0_stage0_iter6();
    void thread_ap_block_state15_pp0_stage0_iter6_ignore_call15();
    void thread_ap_block_state16_pp0_stage0_iter7();
    void thread_ap_block_state16_pp0_stage0_iter7_ignore_call15();
    void thread_ap_block_state17_pp0_stage0_iter8();
    void thread_ap_block_state17_pp0_stage0_iter8_ignore_call15();
    void thread_ap_block_state18_pp0_stage0_iter9();
    void thread_ap_block_state18_pp0_stage0_iter9_ignore_call15();
    void thread_ap_block_state19_pp0_stage0_iter10();
    void thread_ap_block_state19_pp0_stage0_iter10_ignore_call15();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_block_state9_pp0_stage0_iter0_ignore_call15();
    void thread_ap_condition_pp0_exit_iter1_state10();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4();
    void thread_ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4();
    void thread_ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4();
    void thread_ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4();
    void thread_ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_cmpr_chunk_num_0_i_c_blk_n();
    void thread_cmpr_chunk_num_0_i_c_din();
    void thread_cmpr_chunk_num_0_i_c_write();
    void thread_cmpr_local_0_V_c_blk_n();
    void thread_cmpr_local_0_V_c_din();
    void thread_cmpr_local_0_V_c_write();
    void thread_cmpr_local_10_V_c_blk_n();
    void thread_cmpr_local_10_V_c_din();
    void thread_cmpr_local_10_V_c_write();
    void thread_cmpr_local_11_V_c_blk_n();
    void thread_cmpr_local_11_V_c_din();
    void thread_cmpr_local_11_V_c_write();
    void thread_cmpr_local_12_V_c_blk_n();
    void thread_cmpr_local_12_V_c_din();
    void thread_cmpr_local_12_V_c_write();
    void thread_cmpr_local_13_V_c_blk_n();
    void thread_cmpr_local_13_V_c_din();
    void thread_cmpr_local_13_V_c_write();
    void thread_cmpr_local_14_V_c_blk_n();
    void thread_cmpr_local_14_V_c_din();
    void thread_cmpr_local_14_V_c_write();
    void thread_cmpr_local_15_V_c_blk_n();
    void thread_cmpr_local_15_V_c_din();
    void thread_cmpr_local_15_V_c_write();
    void thread_cmpr_local_1_V_c_blk_n();
    void thread_cmpr_local_1_V_c_din();
    void thread_cmpr_local_1_V_c_write();
    void thread_cmpr_local_2_V_c_blk_n();
    void thread_cmpr_local_2_V_c_din();
    void thread_cmpr_local_2_V_c_write();
    void thread_cmpr_local_3_V_c_blk_n();
    void thread_cmpr_local_3_V_c_din();
    void thread_cmpr_local_3_V_c_write();
    void thread_cmpr_local_4_V_c_blk_n();
    void thread_cmpr_local_4_V_c_din();
    void thread_cmpr_local_4_V_c_write();
    void thread_cmpr_local_5_V_c_blk_n();
    void thread_cmpr_local_5_V_c_din();
    void thread_cmpr_local_5_V_c_write();
    void thread_cmpr_local_6_V_c_blk_n();
    void thread_cmpr_local_6_V_c_din();
    void thread_cmpr_local_6_V_c_write();
    void thread_cmpr_local_7_V_c_blk_n();
    void thread_cmpr_local_7_V_c_din();
    void thread_cmpr_local_7_V_c_write();
    void thread_cmpr_local_8_V_c_blk_n();
    void thread_cmpr_local_8_V_c_din();
    void thread_cmpr_local_8_V_c_write();
    void thread_cmpr_local_9_V_c_blk_n();
    void thread_cmpr_local_9_V_c_din();
    void thread_cmpr_local_9_V_c_write();
    void thread_cmprpop_local_0_V_c_blk_n();
    void thread_cmprpop_local_0_V_c_din();
    void thread_cmprpop_local_0_V_c_write();
    void thread_cmprpop_local_10_V_c_blk_n();
    void thread_cmprpop_local_10_V_c_din();
    void thread_cmprpop_local_10_V_c_write();
    void thread_cmprpop_local_11_V_c_blk_n();
    void thread_cmprpop_local_11_V_c_din();
    void thread_cmprpop_local_11_V_c_write();
    void thread_cmprpop_local_12_V_c_blk_n();
    void thread_cmprpop_local_12_V_c_din();
    void thread_cmprpop_local_12_V_c_write();
    void thread_cmprpop_local_13_V_c_blk_n();
    void thread_cmprpop_local_13_V_c_din();
    void thread_cmprpop_local_13_V_c_write();
    void thread_cmprpop_local_14_V_c_blk_n();
    void thread_cmprpop_local_14_V_c_din();
    void thread_cmprpop_local_14_V_c_write();
    void thread_cmprpop_local_15_V_c_blk_n();
    void thread_cmprpop_local_15_V_c_din();
    void thread_cmprpop_local_15_V_c_write();
    void thread_cmprpop_local_1_V_c_blk_n();
    void thread_cmprpop_local_1_V_c_din();
    void thread_cmprpop_local_1_V_c_write();
    void thread_cmprpop_local_2_V_c_blk_n();
    void thread_cmprpop_local_2_V_c_din();
    void thread_cmprpop_local_2_V_c_write();
    void thread_cmprpop_local_3_V_c_blk_n();
    void thread_cmprpop_local_3_V_c_din();
    void thread_cmprpop_local_3_V_c_write();
    void thread_cmprpop_local_4_V_c_blk_n();
    void thread_cmprpop_local_4_V_c_din();
    void thread_cmprpop_local_4_V_c_write();
    void thread_cmprpop_local_5_V_c_blk_n();
    void thread_cmprpop_local_5_V_c_din();
    void thread_cmprpop_local_5_V_c_write();
    void thread_cmprpop_local_6_V_c_blk_n();
    void thread_cmprpop_local_6_V_c_din();
    void thread_cmprpop_local_6_V_c_write();
    void thread_cmprpop_local_7_V_c_blk_n();
    void thread_cmprpop_local_7_V_c_din();
    void thread_cmprpop_local_7_V_c_write();
    void thread_cmprpop_local_8_V_c_blk_n();
    void thread_cmprpop_local_8_V_c_din();
    void thread_cmprpop_local_8_V_c_write();
    void thread_cmprpop_local_9_V_c_blk_n();
    void thread_cmprpop_local_9_V_c_din();
    void thread_cmprpop_local_9_V_c_write();
    void thread_data_num_0_i_c_blk_n();
    void thread_data_num_0_i_c_din();
    void thread_data_num_0_i_c_write();
    void thread_data_part_num_fu_1005_p2();
    void thread_grp_popcnt_fu_959_ap_ce();
    void thread_icmp_ln27_fu_999_p2();
    void thread_input_V_blk_n_AR();
    void thread_input_V_blk_n_R();
    void thread_lshr_ln647_fu_1172_p2();
    void thread_m_axi_input_V_ARADDR();
    void thread_m_axi_input_V_ARBURST();
    void thread_m_axi_input_V_ARCACHE();
    void thread_m_axi_input_V_ARID();
    void thread_m_axi_input_V_ARLEN();
    void thread_m_axi_input_V_ARLOCK();
    void thread_m_axi_input_V_ARPROT();
    void thread_m_axi_input_V_ARQOS();
    void thread_m_axi_input_V_ARREGION();
    void thread_m_axi_input_V_ARSIZE();
    void thread_m_axi_input_V_ARUSER();
    void thread_m_axi_input_V_ARVALID();
    void thread_m_axi_input_V_AWADDR();
    void thread_m_axi_input_V_AWBURST();
    void thread_m_axi_input_V_AWCACHE();
    void thread_m_axi_input_V_AWID();
    void thread_m_axi_input_V_AWLEN();
    void thread_m_axi_input_V_AWLOCK();
    void thread_m_axi_input_V_AWPROT();
    void thread_m_axi_input_V_AWQOS();
    void thread_m_axi_input_V_AWREGION();
    void thread_m_axi_input_V_AWSIZE();
    void thread_m_axi_input_V_AWUSER();
    void thread_m_axi_input_V_AWVALID();
    void thread_m_axi_input_V_BREADY();
    void thread_m_axi_input_V_RREADY();
    void thread_m_axi_input_V_WDATA();
    void thread_m_axi_input_V_WID();
    void thread_m_axi_input_V_WLAST();
    void thread_m_axi_input_V_WSTRB();
    void thread_m_axi_input_V_WUSER();
    void thread_m_axi_input_V_WVALID();
    void thread_num_hi_fu_1145_p2();
    void thread_output_V_offset_out_blk_n();
    void thread_output_V_offset_out_din();
    void thread_output_V_offset_out_write();
    void thread_p_Result_1_fu_1178_p2();
    void thread_p_Result_s_fu_1151_p3();
    void thread_shl_ln138_fu_969_p2();
    void thread_shl_ln_i_i_i_fu_1137_p3();
    void thread_trunc_ln30_fu_1133_p1();
    void thread_trunc_ln364_fu_1184_p1();
    void thread_write_flag12_1_i_i_i_fu_1091_p5();
    void thread_write_flag15_1_i_i_i_fu_1077_p5();
    void thread_write_flag18_1_i_i_i_fu_1049_p5();
    void thread_write_flag21_1_i_i_i_fu_1035_p5();
    void thread_write_flag3_1_i_i_i_fu_1063_p5();
    void thread_write_flag6_1_i_i_i_fu_1105_p5();
    void thread_write_flag9_1_i_i_i_fu_1119_p5();
    void thread_write_flag_1_i_i_i_fu_1021_p5();
    void thread_xor_ln647_fu_1162_p2();
    void thread_zext_ln219_1_fu_979_p1();
    void thread_zext_ln219_2_fu_989_p1();
    void thread_zext_ln219_fu_975_p1();
    void thread_zext_ln35_fu_1240_p1();
    void thread_zext_ln647_1_fu_1168_p1();
    void thread_zext_ln647_fu_1158_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
