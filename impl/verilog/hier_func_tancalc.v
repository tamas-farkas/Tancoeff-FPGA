// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hier_func_tancalc (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_tancalc_input_V_AWVALID,
        m_axi_tancalc_input_V_AWREADY,
        m_axi_tancalc_input_V_AWADDR,
        m_axi_tancalc_input_V_AWID,
        m_axi_tancalc_input_V_AWLEN,
        m_axi_tancalc_input_V_AWSIZE,
        m_axi_tancalc_input_V_AWBURST,
        m_axi_tancalc_input_V_AWLOCK,
        m_axi_tancalc_input_V_AWCACHE,
        m_axi_tancalc_input_V_AWPROT,
        m_axi_tancalc_input_V_AWQOS,
        m_axi_tancalc_input_V_AWREGION,
        m_axi_tancalc_input_V_AWUSER,
        m_axi_tancalc_input_V_WVALID,
        m_axi_tancalc_input_V_WREADY,
        m_axi_tancalc_input_V_WDATA,
        m_axi_tancalc_input_V_WSTRB,
        m_axi_tancalc_input_V_WLAST,
        m_axi_tancalc_input_V_WID,
        m_axi_tancalc_input_V_WUSER,
        m_axi_tancalc_input_V_ARVALID,
        m_axi_tancalc_input_V_ARREADY,
        m_axi_tancalc_input_V_ARADDR,
        m_axi_tancalc_input_V_ARID,
        m_axi_tancalc_input_V_ARLEN,
        m_axi_tancalc_input_V_ARSIZE,
        m_axi_tancalc_input_V_ARBURST,
        m_axi_tancalc_input_V_ARLOCK,
        m_axi_tancalc_input_V_ARCACHE,
        m_axi_tancalc_input_V_ARPROT,
        m_axi_tancalc_input_V_ARQOS,
        m_axi_tancalc_input_V_ARREGION,
        m_axi_tancalc_input_V_ARUSER,
        m_axi_tancalc_input_V_RVALID,
        m_axi_tancalc_input_V_RREADY,
        m_axi_tancalc_input_V_RDATA,
        m_axi_tancalc_input_V_RLAST,
        m_axi_tancalc_input_V_RID,
        m_axi_tancalc_input_V_RUSER,
        m_axi_tancalc_input_V_RRESP,
        m_axi_tancalc_input_V_BVALID,
        m_axi_tancalc_input_V_BREADY,
        m_axi_tancalc_input_V_BRESP,
        m_axi_tancalc_input_V_BID,
        m_axi_tancalc_input_V_BUSER,
        tancalc_input_V_offset,
        tancalc_output_line_1_V_V_din,
        tancalc_output_line_1_V_V_full_n,
        tancalc_output_line_1_V_V_write,
        tancalc_output_line_2_V_V_din,
        tancalc_output_line_2_V_V_full_n,
        tancalc_output_line_2_V_V_write,
        tancalc_output_line_3_V_V_din,
        tancalc_output_line_3_V_V_full_n,
        tancalc_output_line_3_V_V_write,
        tancalc_output_line_4_V_V_din,
        tancalc_output_line_4_V_V_full_n,
        tancalc_output_line_4_V_V_write,
        tancalc_output_line_5_V_V_din,
        tancalc_output_line_5_V_V_full_n,
        tancalc_output_line_5_V_V_write,
        tancalc_output_line_6_V_V_din,
        tancalc_output_line_6_V_V_full_n,
        tancalc_output_line_6_V_V_write,
        tancalc_output_line_7_V_V_din,
        tancalc_output_line_7_V_V_full_n,
        tancalc_output_line_7_V_V_write,
        tancalc_output_line_8_V_V_din,
        tancalc_output_line_8_V_V_full_n,
        tancalc_output_line_8_V_V_write,
        tancalc_output_line_9_V_V_din,
        tancalc_output_line_9_V_V_full_n,
        tancalc_output_line_9_V_V_write,
        tancalc_output_line_10_V_V_din,
        tancalc_output_line_10_V_V_full_n,
        tancalc_output_line_10_V_V_write,
        tancalc_output_line_11_V_V_din,
        tancalc_output_line_11_V_V_full_n,
        tancalc_output_line_11_V_V_write,
        tancalc_output_line_12_V_V_din,
        tancalc_output_line_12_V_V_full_n,
        tancalc_output_line_12_V_V_write,
        tancalc_output_line_13_V_V_din,
        tancalc_output_line_13_V_V_full_n,
        tancalc_output_line_13_V_V_write,
        tancalc_output_line_14_V_V_din,
        tancalc_output_line_14_V_V_full_n,
        tancalc_output_line_14_V_V_write,
        tancalc_output_line_15_V_V_din,
        tancalc_output_line_15_V_V_full_n,
        tancalc_output_line_15_V_V_write
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_pp0_stage0 = 14'd512;
parameter    ap_ST_fsm_state14 = 14'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 14'd4096;
parameter    ap_ST_fsm_state33 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_tancalc_input_V_AWVALID;
input   m_axi_tancalc_input_V_AWREADY;
output  [63:0] m_axi_tancalc_input_V_AWADDR;
output  [0:0] m_axi_tancalc_input_V_AWID;
output  [31:0] m_axi_tancalc_input_V_AWLEN;
output  [2:0] m_axi_tancalc_input_V_AWSIZE;
output  [1:0] m_axi_tancalc_input_V_AWBURST;
output  [1:0] m_axi_tancalc_input_V_AWLOCK;
output  [3:0] m_axi_tancalc_input_V_AWCACHE;
output  [2:0] m_axi_tancalc_input_V_AWPROT;
output  [3:0] m_axi_tancalc_input_V_AWQOS;
output  [3:0] m_axi_tancalc_input_V_AWREGION;
output  [0:0] m_axi_tancalc_input_V_AWUSER;
output   m_axi_tancalc_input_V_WVALID;
input   m_axi_tancalc_input_V_WREADY;
output  [15:0] m_axi_tancalc_input_V_WDATA;
output  [1:0] m_axi_tancalc_input_V_WSTRB;
output   m_axi_tancalc_input_V_WLAST;
output  [0:0] m_axi_tancalc_input_V_WID;
output  [0:0] m_axi_tancalc_input_V_WUSER;
output   m_axi_tancalc_input_V_ARVALID;
input   m_axi_tancalc_input_V_ARREADY;
output  [63:0] m_axi_tancalc_input_V_ARADDR;
output  [0:0] m_axi_tancalc_input_V_ARID;
output  [31:0] m_axi_tancalc_input_V_ARLEN;
output  [2:0] m_axi_tancalc_input_V_ARSIZE;
output  [1:0] m_axi_tancalc_input_V_ARBURST;
output  [1:0] m_axi_tancalc_input_V_ARLOCK;
output  [3:0] m_axi_tancalc_input_V_ARCACHE;
output  [2:0] m_axi_tancalc_input_V_ARPROT;
output  [3:0] m_axi_tancalc_input_V_ARQOS;
output  [3:0] m_axi_tancalc_input_V_ARREGION;
output  [0:0] m_axi_tancalc_input_V_ARUSER;
input   m_axi_tancalc_input_V_RVALID;
output   m_axi_tancalc_input_V_RREADY;
input  [15:0] m_axi_tancalc_input_V_RDATA;
input   m_axi_tancalc_input_V_RLAST;
input  [0:0] m_axi_tancalc_input_V_RID;
input  [0:0] m_axi_tancalc_input_V_RUSER;
input  [1:0] m_axi_tancalc_input_V_RRESP;
input   m_axi_tancalc_input_V_BVALID;
output   m_axi_tancalc_input_V_BREADY;
input  [1:0] m_axi_tancalc_input_V_BRESP;
input  [0:0] m_axi_tancalc_input_V_BID;
input  [0:0] m_axi_tancalc_input_V_BUSER;
input  [63:0] tancalc_input_V_offset;
output  [9:0] tancalc_output_line_1_V_V_din;
input   tancalc_output_line_1_V_V_full_n;
output   tancalc_output_line_1_V_V_write;
output  [9:0] tancalc_output_line_2_V_V_din;
input   tancalc_output_line_2_V_V_full_n;
output   tancalc_output_line_2_V_V_write;
output  [9:0] tancalc_output_line_3_V_V_din;
input   tancalc_output_line_3_V_V_full_n;
output   tancalc_output_line_3_V_V_write;
output  [9:0] tancalc_output_line_4_V_V_din;
input   tancalc_output_line_4_V_V_full_n;
output   tancalc_output_line_4_V_V_write;
output  [9:0] tancalc_output_line_5_V_V_din;
input   tancalc_output_line_5_V_V_full_n;
output   tancalc_output_line_5_V_V_write;
output  [9:0] tancalc_output_line_6_V_V_din;
input   tancalc_output_line_6_V_V_full_n;
output   tancalc_output_line_6_V_V_write;
output  [9:0] tancalc_output_line_7_V_V_din;
input   tancalc_output_line_7_V_V_full_n;
output   tancalc_output_line_7_V_V_write;
output  [9:0] tancalc_output_line_8_V_V_din;
input   tancalc_output_line_8_V_V_full_n;
output   tancalc_output_line_8_V_V_write;
output  [9:0] tancalc_output_line_9_V_V_din;
input   tancalc_output_line_9_V_V_full_n;
output   tancalc_output_line_9_V_V_write;
output  [9:0] tancalc_output_line_10_V_V_din;
input   tancalc_output_line_10_V_V_full_n;
output   tancalc_output_line_10_V_V_write;
output  [9:0] tancalc_output_line_11_V_V_din;
input   tancalc_output_line_11_V_V_full_n;
output   tancalc_output_line_11_V_V_write;
output  [9:0] tancalc_output_line_12_V_V_din;
input   tancalc_output_line_12_V_V_full_n;
output   tancalc_output_line_12_V_V_write;
output  [9:0] tancalc_output_line_13_V_V_din;
input   tancalc_output_line_13_V_V_full_n;
output   tancalc_output_line_13_V_V_write;
output  [9:0] tancalc_output_line_14_V_V_din;
input   tancalc_output_line_14_V_V_full_n;
output   tancalc_output_line_14_V_V_write;
output  [9:0] tancalc_output_line_15_V_V_din;
input   tancalc_output_line_15_V_V_full_n;
output   tancalc_output_line_15_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_tancalc_input_V_ARVALID;
reg[63:0] m_axi_tancalc_input_V_ARADDR;
reg[31:0] m_axi_tancalc_input_V_ARLEN;
reg m_axi_tancalc_input_V_RREADY;
reg tancalc_output_line_1_V_V_write;
reg tancalc_output_line_2_V_V_write;
reg tancalc_output_line_3_V_V_write;
reg tancalc_output_line_4_V_V_write;
reg tancalc_output_line_5_V_V_write;
reg tancalc_output_line_6_V_V_write;
reg tancalc_output_line_7_V_V_write;
reg tancalc_output_line_8_V_V_write;
reg tancalc_output_line_9_V_V_write;
reg tancalc_output_line_10_V_V_write;
reg tancalc_output_line_11_V_V_write;
reg tancalc_output_line_12_V_V_write;
reg tancalc_output_line_13_V_V_write;
reg tancalc_output_line_14_V_V_write;
reg tancalc_output_line_15_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    tancalc_input_V_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    tancalc_input_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln88_reg_2389;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg    tancalc_output_line_1_V_V_blk_n;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] icmp_ln891_reg_2694;
reg    tancalc_output_line_2_V_V_blk_n;
reg   [0:0] icmp_ln891_1_reg_2699;
reg    tancalc_output_line_3_V_V_blk_n;
reg   [0:0] icmp_ln891_2_reg_2704;
reg    tancalc_output_line_4_V_V_blk_n;
reg   [0:0] icmp_ln891_3_reg_2709;
reg    tancalc_output_line_5_V_V_blk_n;
reg   [0:0] icmp_ln891_4_reg_2714;
reg    tancalc_output_line_6_V_V_blk_n;
reg   [0:0] icmp_ln891_5_reg_2719;
reg    tancalc_output_line_7_V_V_blk_n;
reg   [0:0] icmp_ln891_6_reg_2724;
reg    tancalc_output_line_8_V_V_blk_n;
reg   [0:0] icmp_ln891_7_reg_2729;
reg    tancalc_output_line_9_V_V_blk_n;
reg   [0:0] icmp_ln891_8_reg_2734;
reg    tancalc_output_line_10_V_V_blk_n;
reg   [0:0] icmp_ln891_9_reg_2739;
reg    tancalc_output_line_11_V_V_blk_n;
reg   [0:0] icmp_ln891_10_reg_2744;
reg    tancalc_output_line_12_V_V_blk_n;
reg   [0:0] icmp_ln891_11_reg_2749;
reg    tancalc_output_line_13_V_V_blk_n;
reg   [0:0] icmp_ln891_12_reg_2754;
reg    tancalc_output_line_14_V_V_blk_n;
reg   [0:0] icmp_ln891_13_reg_2759;
reg    tancalc_output_line_15_V_V_blk_n;
reg   [0:0] icmp_ln891_14_reg_2764;
reg   [5:0] data_part_num_0_i23_reg_484;
reg   [6:0] data_num_0_reg_495;
wire   [4:0] grp_popcnt_fu_546_ap_return;
reg   [4:0] reg_641;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] trunc_ln26_reg_2297;
reg   [0:0] trunc_ln26_reg_2297_pp0_iter1_reg;
wire    ap_block_state16_pp1_stage1_iter0;
reg    ap_block_state16_io;
wire    ap_block_state18_pp1_stage1_iter1;
wire    ap_block_state20_pp1_stage1_iter2;
wire    ap_block_state22_pp1_stage1_iter3;
reg    ap_block_state24_pp1_stage1_iter4;
wire    ap_block_state26_pp1_stage1_iter5;
wire    ap_block_state28_pp1_stage1_iter6;
wire    ap_block_state30_pp1_stage1_iter7;
reg    ap_block_state32_pp1_stage1_iter8;
reg    ap_block_pp1_stage1_11001;
wire   [63:0] zext_ln71_fu_655_p1;
reg   [63:0] zext_ln71_reg_2267;
reg    ap_block_state1;
wire   [2:0] cmpr_chunk_num_fu_665_p2;
reg   [2:0] cmpr_chunk_num_reg_2277;
wire    ap_CS_fsm_state2;
reg   [63:0] tancalc_input_V_addr_reg_2282;
wire   [0:0] icmp_ln85_fu_659_p2;
wire   [0:0] icmp_ln26_fu_700_p2;
wire   [5:0] data_part_num_fu_706_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] trunc_ln26_fu_712_p1;
reg   [0:0] trunc_ln26_reg_2297_pp0_iter2_reg;
reg   [3:0] trunc_ln28_1_reg_2301;
reg   [3:0] trunc_ln28_1_reg_2301_pp0_iter1_reg;
reg   [3:0] trunc_ln28_1_reg_2301_pp0_iter2_reg;
reg   [15:0] temp_input_V_reg_2307;
wire   [11:0] zext_ln215_fu_1154_p1;
reg   [11:0] zext_ln215_reg_2314;
wire    ap_CS_fsm_state14;
wire   [11:0] zext_ln215_2_fu_1158_p1;
reg   [11:0] zext_ln215_2_reg_2319;
wire   [11:0] zext_ln215_5_fu_1162_p1;
reg   [11:0] zext_ln215_5_reg_2324;
wire   [11:0] zext_ln215_6_fu_1166_p1;
reg   [11:0] zext_ln215_6_reg_2329;
wire   [11:0] zext_ln215_9_fu_1170_p1;
reg   [11:0] zext_ln215_9_reg_2334;
wire   [11:0] zext_ln215_10_fu_1174_p1;
reg   [11:0] zext_ln215_10_reg_2339;
wire   [11:0] zext_ln215_13_fu_1178_p1;
reg   [11:0] zext_ln215_13_reg_2344;
wire   [11:0] zext_ln215_14_fu_1182_p1;
reg   [11:0] zext_ln215_14_reg_2349;
wire   [11:0] zext_ln215_17_fu_1186_p1;
reg   [11:0] zext_ln215_17_reg_2354;
wire   [11:0] zext_ln215_18_fu_1190_p1;
reg   [11:0] zext_ln215_18_reg_2359;
wire   [11:0] zext_ln215_21_fu_1194_p1;
reg   [11:0] zext_ln215_21_reg_2364;
wire   [11:0] zext_ln215_22_fu_1198_p1;
reg   [11:0] zext_ln215_22_reg_2369;
wire   [11:0] zext_ln215_25_fu_1202_p1;
reg   [11:0] zext_ln215_25_reg_2374;
wire   [11:0] zext_ln215_26_fu_1206_p1;
reg   [11:0] zext_ln215_26_reg_2379;
wire   [11:0] zext_ln215_29_fu_1210_p1;
reg   [11:0] zext_ln215_29_reg_2384;
wire   [0:0] icmp_ln88_fu_1214_p2;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state17_pp1_stage0_iter1;
wire    ap_block_state19_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
reg    ap_block_state23_pp1_stage0_iter4;
wire    ap_block_state25_pp1_stage0_iter5;
wire    ap_block_state27_pp1_stage0_iter6;
wire    ap_block_state29_pp1_stage0_iter7;
reg    ap_block_state31_pp1_stage0_iter8;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] data_num_fu_1220_p2;
reg   [6:0] data_num_reg_2393;
wire   [6:0] shl_ln90_fu_1226_p2;
reg   [6:0] shl_ln90_reg_2398;
reg   [63:0] tancalc_input_V_addr_1_reg_2403;
reg   [63:0] tancalc_input_V_addr_2_reg_2409;
reg   [15:0] tancalc_input_V_addr_1_read_reg_2415;
reg   [15:0] tancalc_input_V_addr_2_read_reg_2421;
wire   [31:0] ref_local_0_V_fu_1267_p3;
reg   [31:0] ref_local_0_V_reg_2427;
wire   [5:0] refpop_local_0_V_1_fu_1281_p2;
reg   [5:0] refpop_local_0_V_1_reg_2438;
reg   [5:0] refpop_local_0_V_1_reg_2438_pp1_iter6_reg;
reg   [5:0] refpop_local_0_V_1_reg_2438_pp1_iter7_reg;
wire   [31:0] and_ln1355_fu_1287_p2;
reg   [31:0] and_ln1355_reg_2443;
wire   [31:0] and_ln1355_1_fu_1293_p2;
reg   [31:0] and_ln1355_1_reg_2448;
wire   [31:0] and_ln1355_2_fu_1299_p2;
reg   [31:0] and_ln1355_2_reg_2453;
wire   [31:0] and_ln1355_3_fu_1305_p2;
reg   [31:0] and_ln1355_3_reg_2458;
wire   [31:0] and_ln1355_4_fu_1311_p2;
reg   [31:0] and_ln1355_4_reg_2463;
wire   [31:0] and_ln1355_5_fu_1317_p2;
reg   [31:0] and_ln1355_5_reg_2468;
wire   [31:0] and_ln1355_6_fu_1323_p2;
reg   [31:0] and_ln1355_6_reg_2473;
wire   [31:0] and_ln1355_7_fu_1329_p2;
reg   [31:0] and_ln1355_7_reg_2478;
wire   [5:0] grp_popcntdata_fu_506_ap_return;
reg   [5:0] temp_V_0_1_reg_2483;
reg    ap_enable_reg_pp1_iter5;
reg   [5:0] temp_V_0_1_reg_2483_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_511_ap_return;
reg   [5:0] temp_V_0_2_reg_2489;
reg   [5:0] temp_V_0_2_reg_2489_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_516_ap_return;
reg   [5:0] temp_V_0_3_reg_2495;
reg   [5:0] temp_V_0_3_reg_2495_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_521_ap_return;
reg   [5:0] temp_V_0_4_reg_2501;
reg   [5:0] temp_V_0_4_reg_2501_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_526_ap_return;
reg   [5:0] temp_V_0_5_reg_2507;
reg   [5:0] temp_V_0_5_reg_2507_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_531_ap_return;
reg   [5:0] temp_V_0_6_reg_2513;
reg   [5:0] temp_V_0_6_reg_2513_pp1_iter6_reg;
wire   [5:0] grp_popcntdata_fu_536_ap_return;
reg   [5:0] temp_V_0_7_reg_2519;
reg   [5:0] temp_V_0_7_reg_2519_pp1_iter6_reg;
wire   [5:0] temp_V_0_8_popcntdata_fu_541_ap_return;
reg   [5:0] temp_V_0_8_reg_2525;
reg   [5:0] temp_V_0_8_reg_2525_pp1_iter6_reg;
wire   [31:0] and_ln1355_8_fu_1335_p2;
reg   [31:0] and_ln1355_8_reg_2531;
wire   [31:0] and_ln1355_9_fu_1340_p2;
reg   [31:0] and_ln1355_9_reg_2536;
wire   [31:0] and_ln1355_10_fu_1345_p2;
reg   [31:0] and_ln1355_10_reg_2541;
wire   [31:0] and_ln1355_11_fu_1350_p2;
reg   [31:0] and_ln1355_11_reg_2546;
wire   [31:0] and_ln1355_12_fu_1355_p2;
reg   [31:0] and_ln1355_12_reg_2551;
wire   [31:0] and_ln1355_13_fu_1360_p2;
reg   [31:0] and_ln1355_13_reg_2556;
wire   [31:0] and_ln1355_14_fu_1365_p2;
reg   [31:0] and_ln1355_14_reg_2561;
reg   [5:0] temp_V_0_9_reg_2606;
reg    ap_enable_reg_pp1_iter6;
reg   [5:0] temp_V_0_9_reg_2606_pp1_iter7_reg;
reg   [5:0] temp_V_0_s_reg_2612;
reg   [5:0] temp_V_0_s_reg_2612_pp1_iter7_reg;
reg   [5:0] temp_V_0_10_reg_2618;
reg   [5:0] temp_V_0_10_reg_2618_pp1_iter7_reg;
reg   [5:0] temp_V_0_11_reg_2624;
reg   [5:0] temp_V_0_11_reg_2624_pp1_iter7_reg;
reg   [5:0] temp_V_0_12_reg_2630;
reg   [5:0] temp_V_0_12_reg_2630_pp1_iter7_reg;
reg   [5:0] temp_V_0_13_reg_2636;
reg   [5:0] temp_V_0_13_reg_2636_pp1_iter7_reg;
reg   [5:0] temp_V_0_14_reg_2642;
reg   [5:0] temp_V_0_14_reg_2642_pp1_iter7_reg;
wire   [11:0] zext_ln215_1_fu_1415_p1;
reg   [11:0] zext_ln215_1_reg_2683;
wire   [0:0] icmp_ln891_fu_1440_p2;
wire   [0:0] icmp_ln891_1_fu_1467_p2;
wire   [0:0] icmp_ln891_2_fu_1494_p2;
wire   [0:0] icmp_ln891_3_fu_1521_p2;
wire   [0:0] icmp_ln891_4_fu_1548_p2;
wire   [0:0] icmp_ln891_5_fu_1575_p2;
wire   [0:0] icmp_ln891_6_fu_1602_p2;
wire   [0:0] icmp_ln891_7_fu_1629_p2;
wire   [0:0] icmp_ln891_8_fu_1721_p2;
wire   [0:0] icmp_ln891_9_fu_1747_p2;
wire   [0:0] icmp_ln891_10_fu_1773_p2;
wire   [0:0] icmp_ln891_11_fu_1799_p2;
wire   [0:0] icmp_ln891_12_fu_1825_p2;
wire   [0:0] icmp_ln891_13_fu_1851_p2;
wire   [0:0] icmp_ln891_14_fu_1877_p2;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter3;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter7;
wire    grp_popcntdata_fu_506_ap_ready;
reg   [31:0] grp_popcntdata_fu_506_x_V;
wire    grp_popcntdata_fu_511_ap_ready;
reg   [31:0] grp_popcntdata_fu_511_x_V;
wire    grp_popcntdata_fu_516_ap_ready;
reg   [31:0] grp_popcntdata_fu_516_x_V;
wire    grp_popcntdata_fu_521_ap_ready;
reg   [31:0] grp_popcntdata_fu_521_x_V;
wire    grp_popcntdata_fu_526_ap_ready;
reg   [31:0] grp_popcntdata_fu_526_x_V;
wire    grp_popcntdata_fu_531_ap_ready;
reg   [31:0] grp_popcntdata_fu_531_x_V;
wire    grp_popcntdata_fu_536_ap_ready;
reg   [31:0] grp_popcntdata_fu_536_x_V;
wire    temp_V_0_8_popcntdata_fu_541_ap_ready;
wire    grp_popcnt_fu_546_ap_ready;
reg   [15:0] grp_popcnt_fu_546_x_V;
reg   [2:0] cmpr_chunk_num_0_reg_473;
wire    ap_CS_fsm_state33;
reg   [6:0] ap_phi_mux_data_num_0_phi_fu_499_p4;
wire   [63:0] add_ln219_fu_689_p2;
wire   [63:0] add_ln219_1_fu_1236_p2;
wire   [63:0] add_ln219_2_fu_1256_p2;
reg   [31:0] cmpr_local_15_V_fu_198;
wire   [31:0] cmpr_local_0_V_fu_726_p1;
wire   [31:0] cmpr_local_0_V_2_fu_853_p3;
reg   [31:0] cmpr_local_15_V_1_fu_202;
reg   [31:0] cmpr_local_15_V_2_fu_206;
reg   [31:0] cmpr_local_15_V_3_fu_210;
reg   [31:0] cmpr_local_15_V_4_fu_214;
reg   [31:0] cmpr_local_15_V_5_fu_218;
reg   [31:0] cmpr_local_15_V_6_fu_222;
reg   [31:0] cmpr_local_15_V_7_fu_226;
reg   [31:0] cmpr_local_15_V_8_fu_230;
reg   [31:0] cmpr_local_15_V_9_fu_234;
reg   [31:0] cmpr_local_15_V_10_fu_238;
reg   [31:0] cmpr_local_15_V_11_fu_242;
reg   [31:0] cmpr_local_15_V_12_fu_246;
reg   [31:0] cmpr_local_15_V_13_fu_250;
reg   [31:0] cmpr_local_15_V_14_fu_254;
reg   [31:0] cmpr_local_15_V_15_fu_258;
reg   [10:0] cmprpop_local_15_V_fu_262;
wire   [10:0] cmprpop_local_0_V_fu_940_p1;
wire   [10:0] cmprpop_local_0_V_1_fu_1068_p2;
reg   [10:0] cmprpop_local_15_V_1_fu_266;
reg   [10:0] cmprpop_local_15_V_2_fu_270;
reg   [10:0] cmprpop_local_15_V_3_fu_274;
reg   [10:0] cmprpop_local_15_V_4_fu_278;
reg   [10:0] cmprpop_local_15_V_5_fu_282;
reg   [10:0] cmprpop_local_15_V_6_fu_286;
reg   [10:0] cmprpop_local_15_V_7_fu_290;
reg   [10:0] cmprpop_local_15_V_8_fu_294;
reg   [10:0] cmprpop_local_15_V_9_fu_298;
reg   [10:0] cmprpop_local_15_V_10_fu_302;
reg   [10:0] cmprpop_local_15_V_11_fu_306;
reg   [10:0] cmprpop_local_15_V_12_fu_310;
reg   [10:0] cmprpop_local_15_V_13_fu_314;
reg   [10:0] cmprpop_local_15_V_14_fu_318;
reg   [10:0] cmprpop_local_15_V_15_fu_322;
reg    ap_block_pp1_stage0_01001;
reg    ap_block_pp1_stage1_01001;
wire   [62:0] tancalc_input_V_offset1_fu_645_p4;
wire   [1:0] trunc_ln86_fu_671_p1;
wire   [7:0] or_ln_fu_675_p4;
wire   [63:0] zext_ln219_fu_685_p1;
wire   [31:0] p_Val2_s_fu_812_p18;
wire   [15:0] data_local_temp_V_fu_849_p1;
wire   [10:0] tmp_4_fu_1027_p18;
wire   [10:0] zext_ln700_2_fu_1064_p1;
wire   [63:0] zext_ln90_fu_1232_p1;
wire   [6:0] or_ln219_fu_1247_p2;
wire   [63:0] zext_ln219_1_fu_1252_p1;
wire   [5:0] zext_ln700_fu_1273_p1;
wire   [5:0] zext_ln700_1_fu_1277_p1;
wire   [11:0] add_ln1353_fu_1418_p2;
wire   [12:0] zext_ln215_3_fu_1423_p1;
wire   [12:0] zext_ln215_4_fu_1427_p1;
wire   [12:0] sub_ln1354_fu_1430_p2;
wire   [20:0] grp_fu_1938_p2;
wire  signed [20:0] sext_ln891_fu_1436_p1;
wire   [11:0] add_ln1353_1_fu_1445_p2;
wire   [12:0] zext_ln215_7_fu_1450_p1;
wire   [12:0] zext_ln215_8_fu_1454_p1;
wire   [12:0] sub_ln1354_1_fu_1457_p2;
wire   [20:0] grp_fu_1945_p2;
wire  signed [20:0] sext_ln891_1_fu_1463_p1;
wire   [11:0] add_ln1353_2_fu_1472_p2;
wire   [12:0] zext_ln215_11_fu_1477_p1;
wire   [12:0] zext_ln215_12_fu_1481_p1;
wire   [12:0] sub_ln1354_2_fu_1484_p2;
wire   [20:0] grp_fu_1952_p2;
wire  signed [20:0] sext_ln891_2_fu_1490_p1;
wire   [11:0] add_ln1353_3_fu_1499_p2;
wire   [12:0] zext_ln215_15_fu_1504_p1;
wire   [12:0] zext_ln215_16_fu_1508_p1;
wire   [12:0] sub_ln1354_3_fu_1511_p2;
wire   [20:0] grp_fu_1959_p2;
wire  signed [20:0] sext_ln891_3_fu_1517_p1;
wire   [11:0] add_ln1353_4_fu_1526_p2;
wire   [12:0] zext_ln215_19_fu_1531_p1;
wire   [12:0] zext_ln215_20_fu_1535_p1;
wire   [12:0] sub_ln1354_4_fu_1538_p2;
wire   [20:0] grp_fu_1966_p2;
wire  signed [20:0] sext_ln891_4_fu_1544_p1;
wire   [11:0] add_ln1353_5_fu_1553_p2;
wire   [12:0] zext_ln215_23_fu_1558_p1;
wire   [12:0] zext_ln215_24_fu_1562_p1;
wire   [12:0] sub_ln1354_5_fu_1565_p2;
wire   [20:0] grp_fu_1973_p2;
wire  signed [20:0] sext_ln891_5_fu_1571_p1;
wire   [11:0] add_ln1353_6_fu_1580_p2;
wire   [12:0] zext_ln215_27_fu_1585_p1;
wire   [12:0] zext_ln215_28_fu_1589_p1;
wire   [12:0] sub_ln1354_6_fu_1592_p2;
wire   [20:0] grp_fu_1980_p2;
wire  signed [20:0] sext_ln891_6_fu_1598_p1;
wire   [11:0] add_ln1353_7_fu_1607_p2;
wire   [12:0] zext_ln215_30_fu_1612_p1;
wire   [12:0] zext_ln215_31_fu_1616_p1;
wire   [12:0] sub_ln1354_7_fu_1619_p2;
wire   [20:0] grp_fu_1987_p2;
wire  signed [20:0] sext_ln891_7_fu_1625_p1;
wire   [0:0] result_local_1_V_fu_1634_p2;
wire   [11:0] add_ln1353_8_fu_1700_p2;
wire   [12:0] zext_ln215_32_fu_1704_p1;
wire   [12:0] zext_ln215_33_fu_1708_p1;
wire   [12:0] sub_ln1354_8_fu_1711_p2;
wire   [20:0] grp_fu_1994_p2;
wire  signed [20:0] sext_ln891_8_fu_1717_p1;
wire   [11:0] add_ln1353_9_fu_1726_p2;
wire   [12:0] zext_ln215_34_fu_1730_p1;
wire   [12:0] zext_ln215_35_fu_1734_p1;
wire   [12:0] sub_ln1354_9_fu_1737_p2;
wire   [20:0] grp_fu_2001_p2;
wire  signed [20:0] sext_ln891_9_fu_1743_p1;
wire   [11:0] add_ln1353_10_fu_1752_p2;
wire   [12:0] zext_ln215_36_fu_1756_p1;
wire   [12:0] zext_ln215_37_fu_1760_p1;
wire   [12:0] sub_ln1354_10_fu_1763_p2;
wire   [20:0] grp_fu_2008_p2;
wire  signed [20:0] sext_ln891_10_fu_1769_p1;
wire   [11:0] add_ln1353_11_fu_1778_p2;
wire   [12:0] zext_ln215_38_fu_1782_p1;
wire   [12:0] zext_ln215_39_fu_1786_p1;
wire   [12:0] sub_ln1354_11_fu_1789_p2;
wire   [20:0] grp_fu_2015_p2;
wire  signed [20:0] sext_ln891_11_fu_1795_p1;
wire   [11:0] add_ln1353_12_fu_1804_p2;
wire   [12:0] zext_ln215_40_fu_1808_p1;
wire   [12:0] zext_ln215_41_fu_1812_p1;
wire   [12:0] sub_ln1354_12_fu_1815_p2;
wire   [20:0] grp_fu_2022_p2;
wire  signed [20:0] sext_ln891_12_fu_1821_p1;
wire   [11:0] add_ln1353_13_fu_1830_p2;
wire   [12:0] zext_ln215_42_fu_1834_p1;
wire   [12:0] zext_ln215_43_fu_1838_p1;
wire   [12:0] sub_ln1354_13_fu_1841_p2;
wire   [20:0] grp_fu_2029_p2;
wire  signed [20:0] sext_ln891_13_fu_1847_p1;
wire   [11:0] add_ln1353_14_fu_1856_p2;
wire   [12:0] zext_ln215_44_fu_1860_p1;
wire   [12:0] zext_ln215_45_fu_1864_p1;
wire   [12:0] sub_ln1354_14_fu_1867_p2;
wire   [20:0] grp_fu_2036_p2;
wire  signed [20:0] sext_ln891_14_fu_1873_p1;
wire   [14:0] grp_fu_1938_p0;
wire   [5:0] grp_fu_1938_p1;
wire   [14:0] grp_fu_1945_p0;
wire   [5:0] grp_fu_1945_p1;
wire   [14:0] grp_fu_1952_p0;
wire   [5:0] grp_fu_1952_p1;
wire   [14:0] grp_fu_1959_p0;
wire   [5:0] grp_fu_1959_p1;
wire   [14:0] grp_fu_1966_p0;
wire   [5:0] grp_fu_1966_p1;
wire   [14:0] grp_fu_1973_p0;
wire   [5:0] grp_fu_1973_p1;
wire   [14:0] grp_fu_1980_p0;
wire   [5:0] grp_fu_1980_p1;
wire   [14:0] grp_fu_1987_p0;
wire   [5:0] grp_fu_1987_p1;
wire   [14:0] grp_fu_1994_p0;
wire   [5:0] grp_fu_1994_p1;
wire   [14:0] grp_fu_2001_p0;
wire   [5:0] grp_fu_2001_p1;
wire   [14:0] grp_fu_2008_p0;
wire   [5:0] grp_fu_2008_p1;
wire   [14:0] grp_fu_2015_p0;
wire   [5:0] grp_fu_2015_p1;
wire   [14:0] grp_fu_2022_p0;
wire   [5:0] grp_fu_2022_p1;
wire   [14:0] grp_fu_2029_p0;
wire   [5:0] grp_fu_2029_p1;
wire   [14:0] grp_fu_2036_p0;
wire   [5:0] grp_fu_2036_p1;
reg    grp_fu_1938_ce;
reg    grp_fu_1945_ce;
reg    grp_fu_1952_ce;
reg    grp_fu_1959_ce;
reg    grp_fu_1966_ce;
reg    grp_fu_1973_ce;
reg    grp_fu_1980_ce;
reg    grp_fu_1987_ce;
reg    grp_fu_1994_ce;
reg    grp_fu_2001_ce;
reg    grp_fu_2008_ce;
reg    grp_fu_2015_ce;
reg    grp_fu_2022_ce;
reg    grp_fu_2029_ce;
reg    grp_fu_2036_ce;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [20:0] grp_fu_1938_p10;
wire   [20:0] grp_fu_1945_p10;
wire   [20:0] grp_fu_1952_p10;
wire   [20:0] grp_fu_1959_p10;
wire   [20:0] grp_fu_1966_p10;
wire   [20:0] grp_fu_1973_p10;
wire   [20:0] grp_fu_1980_p10;
wire   [20:0] grp_fu_1987_p10;
wire   [20:0] grp_fu_1994_p10;
wire   [20:0] grp_fu_2001_p10;
wire   [20:0] grp_fu_2008_p10;
wire   [20:0] grp_fu_2015_p10;
wire   [20:0] grp_fu_2022_p10;
wire   [20:0] grp_fu_2029_p10;
wire   [20:0] grp_fu_2036_p10;
reg    ap_condition_2004;
reg    ap_condition_2007;
reg    ap_condition_2010;
reg    ap_condition_2013;
reg    ap_condition_2016;
reg    ap_condition_2019;
reg    ap_condition_2022;
reg    ap_condition_2025;
reg    ap_condition_2028;
reg    ap_condition_2031;
reg    ap_condition_2034;
reg    ap_condition_2037;
reg    ap_condition_2040;
reg    ap_condition_2043;
reg    ap_condition_2046;
reg    ap_condition_2049;
reg    ap_condition_2052;
reg    ap_condition_2055;
reg    ap_condition_2058;
reg    ap_condition_2061;
reg    ap_condition_2064;
reg    ap_condition_2067;
reg    ap_condition_2070;
reg    ap_condition_2073;
reg    ap_condition_2076;
reg    ap_condition_2079;
reg    ap_condition_2082;
reg    ap_condition_2085;
reg    ap_condition_2088;
reg    ap_condition_2091;
reg    ap_condition_2094;
reg    ap_condition_2097;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
end

hier_func_popcntdata grp_popcntdata_fu_506(
    .ap_ready(grp_popcntdata_fu_506_ap_ready),
    .x_V(grp_popcntdata_fu_506_x_V),
    .ap_return(grp_popcntdata_fu_506_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_511(
    .ap_ready(grp_popcntdata_fu_511_ap_ready),
    .x_V(grp_popcntdata_fu_511_x_V),
    .ap_return(grp_popcntdata_fu_511_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_516(
    .ap_ready(grp_popcntdata_fu_516_ap_ready),
    .x_V(grp_popcntdata_fu_516_x_V),
    .ap_return(grp_popcntdata_fu_516_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_521(
    .ap_ready(grp_popcntdata_fu_521_ap_ready),
    .x_V(grp_popcntdata_fu_521_x_V),
    .ap_return(grp_popcntdata_fu_521_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_526(
    .ap_ready(grp_popcntdata_fu_526_ap_ready),
    .x_V(grp_popcntdata_fu_526_x_V),
    .ap_return(grp_popcntdata_fu_526_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_531(
    .ap_ready(grp_popcntdata_fu_531_ap_ready),
    .x_V(grp_popcntdata_fu_531_x_V),
    .ap_return(grp_popcntdata_fu_531_ap_return)
);

hier_func_popcntdata grp_popcntdata_fu_536(
    .ap_ready(grp_popcntdata_fu_536_ap_ready),
    .x_V(grp_popcntdata_fu_536_x_V),
    .ap_return(grp_popcntdata_fu_536_ap_return)
);

hier_func_popcntdata temp_V_0_8_popcntdata_fu_541(
    .ap_ready(temp_V_0_8_popcntdata_fu_541_ap_ready),
    .x_V(and_ln1355_7_reg_2478),
    .ap_return(temp_V_0_8_popcntdata_fu_541_ap_return)
);

hier_func_popcnt grp_popcnt_fu_546(
    .ap_ready(grp_popcnt_fu_546_ap_ready),
    .x_V(grp_popcnt_fu_546_x_V),
    .ap_return(grp_popcnt_fu_546_ap_return)
);

hier_func_hier_func_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
hier_func_mux_164_32_1_1_U3(
    .din0(cmpr_local_15_V_fu_198),
    .din1(cmpr_local_15_V_1_fu_202),
    .din2(cmpr_local_15_V_2_fu_206),
    .din3(cmpr_local_15_V_3_fu_210),
    .din4(cmpr_local_15_V_4_fu_214),
    .din5(cmpr_local_15_V_5_fu_218),
    .din6(cmpr_local_15_V_6_fu_222),
    .din7(cmpr_local_15_V_7_fu_226),
    .din8(cmpr_local_15_V_8_fu_230),
    .din9(cmpr_local_15_V_9_fu_234),
    .din10(cmpr_local_15_V_10_fu_238),
    .din11(cmpr_local_15_V_11_fu_242),
    .din12(cmpr_local_15_V_12_fu_246),
    .din13(cmpr_local_15_V_13_fu_250),
    .din14(cmpr_local_15_V_14_fu_254),
    .din15(cmpr_local_15_V_15_fu_258),
    .din16(trunc_ln28_1_reg_2301_pp0_iter1_reg),
    .dout(p_Val2_s_fu_812_p18)
);

hier_func_hier_func_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
hier_func_mux_164_11_1_1_U4(
    .din0(cmprpop_local_15_V_fu_262),
    .din1(cmprpop_local_15_V_1_fu_266),
    .din2(cmprpop_local_15_V_2_fu_270),
    .din3(cmprpop_local_15_V_3_fu_274),
    .din4(cmprpop_local_15_V_4_fu_278),
    .din5(cmprpop_local_15_V_5_fu_282),
    .din6(cmprpop_local_15_V_6_fu_286),
    .din7(cmprpop_local_15_V_7_fu_290),
    .din8(cmprpop_local_15_V_8_fu_294),
    .din9(cmprpop_local_15_V_9_fu_298),
    .din10(cmprpop_local_15_V_10_fu_302),
    .din11(cmprpop_local_15_V_11_fu_306),
    .din12(cmprpop_local_15_V_12_fu_310),
    .din13(cmprpop_local_15_V_13_fu_314),
    .din14(cmprpop_local_15_V_14_fu_318),
    .din15(cmprpop_local_15_V_15_fu_322),
    .din16(trunc_ln28_1_reg_2301_pp0_iter2_reg),
    .dout(tmp_4_fu_1027_p18)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1938_p0),
    .din1(grp_fu_1938_p1),
    .ce(grp_fu_1938_ce),
    .dout(grp_fu_1938_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1945_p0),
    .din1(grp_fu_1945_p1),
    .ce(grp_fu_1945_ce),
    .dout(grp_fu_1945_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1952_p0),
    .din1(grp_fu_1952_p1),
    .ce(grp_fu_1952_ce),
    .dout(grp_fu_1952_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1959_p0),
    .din1(grp_fu_1959_p1),
    .ce(grp_fu_1959_ce),
    .dout(grp_fu_1959_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1966_p0),
    .din1(grp_fu_1966_p1),
    .ce(grp_fu_1966_ce),
    .dout(grp_fu_1966_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1973_p0),
    .din1(grp_fu_1973_p1),
    .ce(grp_fu_1973_ce),
    .dout(grp_fu_1973_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1980_p0),
    .din1(grp_fu_1980_p1),
    .ce(grp_fu_1980_ce),
    .dout(grp_fu_1980_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1987_p0),
    .din1(grp_fu_1987_p1),
    .ce(grp_fu_1987_ce),
    .dout(grp_fu_1987_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1994_p0),
    .din1(grp_fu_1994_p1),
    .ce(grp_fu_1994_ce),
    .dout(grp_fu_1994_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2001_p0),
    .din1(grp_fu_2001_p1),
    .ce(grp_fu_2001_ce),
    .dout(grp_fu_2001_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2008_p0),
    .din1(grp_fu_2008_p1),
    .ce(grp_fu_2008_ce),
    .dout(grp_fu_2008_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2015_p0),
    .din1(grp_fu_2015_p1),
    .ce(grp_fu_2015_ce),
    .dout(grp_fu_2015_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2022_p0),
    .din1(grp_fu_2022_p1),
    .ce(grp_fu_2022_ce),
    .dout(grp_fu_2022_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2029_p0),
    .din1(grp_fu_2029_p1),
    .ce(grp_fu_2029_ce),
    .dout(grp_fu_2029_p2)
);

hier_func_hier_func_mul_mul_15ns_6ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 21 ))
hier_func_mul_mul_15ns_6ns_21_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2036_p0),
    .din1(grp_fu_2036_p1),
    .ce(grp_fu_2036_ce),
    .dout(grp_fu_2036_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln85_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        cmpr_chunk_num_0_reg_473 <= cmpr_chunk_num_reg_2277;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_chunk_num_0_reg_473 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2004)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_10_fu_238 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_10_fu_238 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2007)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_11_fu_242 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_11_fu_242 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2010)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_12_fu_246 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_12_fu_246 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2013)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_13_fu_250 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_13_fu_250 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2016)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_14_fu_254 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_14_fu_254 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2019)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_15_fu_258 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_15_fu_258 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2022)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_1_fu_202 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_1_fu_202 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2025)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_2_fu_206 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_2_fu_206 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2028)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_3_fu_210 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_3_fu_210 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2031)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_4_fu_214 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_4_fu_214 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2034)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_5_fu_218 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_5_fu_218 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2037)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_6_fu_222 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_6_fu_222 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2040)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_7_fu_226 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_7_fu_226 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2043)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_8_fu_230 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_8_fu_230 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2046)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_9_fu_234 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_9_fu_234 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2049)) begin
        if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1)) begin
            cmpr_local_15_V_fu_198 <= cmpr_local_0_V_2_fu_853_p3;
        end else if ((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) begin
            cmpr_local_15_V_fu_198 <= cmpr_local_0_V_fu_726_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2052)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_10_fu_302 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_10_fu_302 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2055)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_11_fu_306 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_11_fu_306 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2058)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_12_fu_310 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_12_fu_310 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2061)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_13_fu_314 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_13_fu_314 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2064)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_14_fu_318 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_14_fu_318 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2067)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_15_fu_322 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_15_fu_322 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2070)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_1_fu_266 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_1_fu_266 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2073)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_2_fu_270 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_2_fu_270 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2076)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_3_fu_274 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_3_fu_274 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2079)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_4_fu_278 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_4_fu_278 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2082)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_5_fu_282 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_5_fu_282 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2085)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_6_fu_286 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_6_fu_286 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2088)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_7_fu_290 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_7_fu_290 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2091)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_8_fu_294 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_8_fu_294 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2094)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_9_fu_298 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_9_fu_298 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2097)) begin
        if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd1)) begin
            cmprpop_local_15_V_fu_262 <= cmprpop_local_0_V_1_fu_1068_p2;
        end else if ((trunc_ln26_reg_2297_pp0_iter2_reg == 1'd0)) begin
            cmprpop_local_15_V_fu_262 <= cmprpop_local_0_V_fu_940_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        data_num_0_reg_495 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln88_reg_2389 == 1'd0))) begin
        data_num_0_reg_495 <= data_num_reg_2393;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln26_fu_700_p2 == 1'd0))) begin
        data_part_num_0_i23_reg_484 <= data_part_num_fu_706_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_part_num_0_i23_reg_484 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        and_ln1355_10_reg_2541 <= and_ln1355_10_fu_1345_p2;
        and_ln1355_11_reg_2546 <= and_ln1355_11_fu_1350_p2;
        and_ln1355_12_reg_2551 <= and_ln1355_12_fu_1355_p2;
        and_ln1355_13_reg_2556 <= and_ln1355_13_fu_1360_p2;
        and_ln1355_14_reg_2561 <= and_ln1355_14_fu_1365_p2;
        and_ln1355_8_reg_2531 <= and_ln1355_8_fu_1335_p2;
        and_ln1355_9_reg_2536 <= and_ln1355_9_fu_1340_p2;
        icmp_ln891_1_reg_2699 <= icmp_ln891_1_fu_1467_p2;
        icmp_ln891_2_reg_2704 <= icmp_ln891_2_fu_1494_p2;
        icmp_ln891_3_reg_2709 <= icmp_ln891_3_fu_1521_p2;
        icmp_ln891_4_reg_2714 <= icmp_ln891_4_fu_1548_p2;
        icmp_ln891_5_reg_2719 <= icmp_ln891_5_fu_1575_p2;
        icmp_ln891_6_reg_2724 <= icmp_ln891_6_fu_1602_p2;
        icmp_ln891_7_reg_2729 <= icmp_ln891_7_fu_1629_p2;
        icmp_ln891_reg_2694 <= icmp_ln891_fu_1440_p2;
        tancalc_input_V_addr_2_read_reg_2421 <= m_axi_tancalc_input_V_RDATA;
        temp_V_0_1_reg_2483_pp1_iter6_reg <= temp_V_0_1_reg_2483;
        temp_V_0_2_reg_2489_pp1_iter6_reg <= temp_V_0_2_reg_2489;
        temp_V_0_3_reg_2495_pp1_iter6_reg <= temp_V_0_3_reg_2495;
        temp_V_0_4_reg_2501_pp1_iter6_reg <= temp_V_0_4_reg_2501;
        temp_V_0_5_reg_2507_pp1_iter6_reg <= temp_V_0_5_reg_2507;
        temp_V_0_6_reg_2513_pp1_iter6_reg <= temp_V_0_6_reg_2513;
        temp_V_0_7_reg_2519_pp1_iter6_reg <= temp_V_0_7_reg_2519;
        temp_V_0_8_reg_2525 <= temp_V_0_8_popcntdata_fu_541_ap_return;
        temp_V_0_8_reg_2525_pp1_iter6_reg <= temp_V_0_8_reg_2525;
        zext_ln215_1_reg_2683[5 : 0] <= zext_ln215_1_fu_1415_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln1355_1_reg_2448 <= and_ln1355_1_fu_1293_p2;
        and_ln1355_2_reg_2453 <= and_ln1355_2_fu_1299_p2;
        and_ln1355_3_reg_2458 <= and_ln1355_3_fu_1305_p2;
        and_ln1355_4_reg_2463 <= and_ln1355_4_fu_1311_p2;
        and_ln1355_5_reg_2468 <= and_ln1355_5_fu_1317_p2;
        and_ln1355_6_reg_2473 <= and_ln1355_6_fu_1323_p2;
        and_ln1355_7_reg_2478 <= and_ln1355_7_fu_1329_p2;
        and_ln1355_reg_2443 <= and_ln1355_fu_1287_p2;
        icmp_ln88_reg_2389 <= icmp_ln88_fu_1214_p2;
        icmp_ln891_10_reg_2744 <= icmp_ln891_10_fu_1773_p2;
        icmp_ln891_11_reg_2749 <= icmp_ln891_11_fu_1799_p2;
        icmp_ln891_12_reg_2754 <= icmp_ln891_12_fu_1825_p2;
        icmp_ln891_13_reg_2759 <= icmp_ln891_13_fu_1851_p2;
        icmp_ln891_14_reg_2764 <= icmp_ln891_14_fu_1877_p2;
        icmp_ln891_8_reg_2734 <= icmp_ln891_8_fu_1721_p2;
        icmp_ln891_9_reg_2739 <= icmp_ln891_9_fu_1747_p2;
        ref_local_0_V_reg_2427 <= ref_local_0_V_fu_1267_p3;
        refpop_local_0_V_1_reg_2438 <= refpop_local_0_V_1_fu_1281_p2;
        refpop_local_0_V_1_reg_2438_pp1_iter6_reg <= refpop_local_0_V_1_reg_2438;
        refpop_local_0_V_1_reg_2438_pp1_iter7_reg <= refpop_local_0_V_1_reg_2438_pp1_iter6_reg;
        tancalc_input_V_addr_1_read_reg_2415 <= m_axi_tancalc_input_V_RDATA;
        temp_V_0_10_reg_2618_pp1_iter7_reg <= temp_V_0_10_reg_2618;
        temp_V_0_11_reg_2624_pp1_iter7_reg <= temp_V_0_11_reg_2624;
        temp_V_0_12_reg_2630_pp1_iter7_reg <= temp_V_0_12_reg_2630;
        temp_V_0_13_reg_2636_pp1_iter7_reg <= temp_V_0_13_reg_2636;
        temp_V_0_14_reg_2642_pp1_iter7_reg <= temp_V_0_14_reg_2642;
        temp_V_0_9_reg_2606_pp1_iter7_reg <= temp_V_0_9_reg_2606;
        temp_V_0_s_reg_2612_pp1_iter7_reg <= temp_V_0_s_reg_2612;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cmpr_chunk_num_reg_2277 <= cmpr_chunk_num_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        data_num_reg_2393 <= data_num_fu_1220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        reg_641 <= grp_popcnt_fu_546_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln88_fu_1214_p2 == 1'd0))) begin
        shl_ln90_reg_2398[6 : 1] <= shl_ln90_fu_1226_p2[6 : 1];
        tancalc_input_V_addr_1_reg_2403 <= add_ln219_1_fu_1236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln88_reg_2389 == 1'd0))) begin
        tancalc_input_V_addr_2_reg_2409 <= add_ln219_2_fu_1256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln85_fu_659_p2 == 1'd0))) begin
        tancalc_input_V_addr_reg_2282 <= add_ln219_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        temp_V_0_10_reg_2618 <= grp_popcntdata_fu_516_ap_return;
        temp_V_0_11_reg_2624 <= grp_popcntdata_fu_521_ap_return;
        temp_V_0_12_reg_2630 <= grp_popcntdata_fu_526_ap_return;
        temp_V_0_13_reg_2636 <= grp_popcntdata_fu_531_ap_return;
        temp_V_0_14_reg_2642 <= grp_popcntdata_fu_536_ap_return;
        temp_V_0_9_reg_2606 <= grp_popcntdata_fu_506_ap_return;
        temp_V_0_s_reg_2612 <= grp_popcntdata_fu_511_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        temp_V_0_1_reg_2483 <= grp_popcntdata_fu_506_ap_return;
        temp_V_0_2_reg_2489 <= grp_popcntdata_fu_511_ap_return;
        temp_V_0_3_reg_2495 <= grp_popcntdata_fu_516_ap_return;
        temp_V_0_4_reg_2501 <= grp_popcntdata_fu_521_ap_return;
        temp_V_0_5_reg_2507 <= grp_popcntdata_fu_526_ap_return;
        temp_V_0_6_reg_2513 <= grp_popcntdata_fu_531_ap_return;
        temp_V_0_7_reg_2519 <= grp_popcntdata_fu_536_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_input_V_reg_2307 <= m_axi_tancalc_input_V_RDATA;
        trunc_ln26_reg_2297_pp0_iter1_reg <= trunc_ln26_reg_2297;
        trunc_ln28_1_reg_2301_pp0_iter1_reg <= trunc_ln28_1_reg_2301;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln26_fu_700_p2 == 1'd0))) begin
        trunc_ln26_reg_2297 <= trunc_ln26_fu_712_p1;
        trunc_ln28_1_reg_2301 <= {{data_part_num_0_i23_reg_484[4:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        trunc_ln26_reg_2297_pp0_iter2_reg <= trunc_ln26_reg_2297_pp0_iter1_reg;
        trunc_ln28_1_reg_2301_pp0_iter2_reg <= trunc_ln28_1_reg_2301_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        zext_ln215_10_reg_2339[10 : 0] <= zext_ln215_10_fu_1174_p1[10 : 0];
        zext_ln215_13_reg_2344[10 : 0] <= zext_ln215_13_fu_1178_p1[10 : 0];
        zext_ln215_14_reg_2349[10 : 0] <= zext_ln215_14_fu_1182_p1[10 : 0];
        zext_ln215_17_reg_2354[10 : 0] <= zext_ln215_17_fu_1186_p1[10 : 0];
        zext_ln215_18_reg_2359[10 : 0] <= zext_ln215_18_fu_1190_p1[10 : 0];
        zext_ln215_21_reg_2364[10 : 0] <= zext_ln215_21_fu_1194_p1[10 : 0];
        zext_ln215_22_reg_2369[10 : 0] <= zext_ln215_22_fu_1198_p1[10 : 0];
        zext_ln215_25_reg_2374[10 : 0] <= zext_ln215_25_fu_1202_p1[10 : 0];
        zext_ln215_26_reg_2379[10 : 0] <= zext_ln215_26_fu_1206_p1[10 : 0];
        zext_ln215_29_reg_2384[10 : 0] <= zext_ln215_29_fu_1210_p1[10 : 0];
        zext_ln215_2_reg_2319[10 : 0] <= zext_ln215_2_fu_1158_p1[10 : 0];
        zext_ln215_5_reg_2324[10 : 0] <= zext_ln215_5_fu_1162_p1[10 : 0];
        zext_ln215_6_reg_2329[10 : 0] <= zext_ln215_6_fu_1166_p1[10 : 0];
        zext_ln215_9_reg_2334[10 : 0] <= zext_ln215_9_fu_1170_p1[10 : 0];
        zext_ln215_reg_2314[10 : 0] <= zext_ln215_fu_1154_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        zext_ln71_reg_2267[62 : 0] <= zext_ln71_fu_655_p1[62 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln26_fu_700_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln88_fu_1214_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln88_reg_2389 == 1'd0))) begin
        ap_phi_mux_data_num_0_phi_fu_499_p4 = data_num_reg_2393;
    end else begin
        ap_phi_mux_data_num_0_phi_fu_499_p4 = data_num_0_reg_495;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1938_ce = 1'b1;
    end else begin
        grp_fu_1938_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1945_ce = 1'b1;
    end else begin
        grp_fu_1945_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1952_ce = 1'b1;
    end else begin
        grp_fu_1952_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1959_ce = 1'b1;
    end else begin
        grp_fu_1959_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1966_ce = 1'b1;
    end else begin
        grp_fu_1966_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1973_ce = 1'b1;
    end else begin
        grp_fu_1973_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1980_ce = 1'b1;
    end else begin
        grp_fu_1980_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1987_ce = 1'b1;
    end else begin
        grp_fu_1987_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_1994_ce = 1'b1;
    end else begin
        grp_fu_1994_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2001_ce = 1'b1;
    end else begin
        grp_fu_2001_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2008_ce = 1'b1;
    end else begin
        grp_fu_2008_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2015_ce = 1'b1;
    end else begin
        grp_fu_2015_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2022_ce = 1'b1;
    end else begin
        grp_fu_2022_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2029_ce = 1'b1;
    end else begin
        grp_fu_2029_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_fu_2036_ce = 1'b1;
    end else begin
        grp_fu_2036_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcnt_fu_546_x_V = tancalc_input_V_addr_2_read_reg_2421;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcnt_fu_546_x_V = tancalc_input_V_addr_1_read_reg_2415;
    end else if ((((trunc_ln26_reg_2297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln26_reg_2297_pp0_iter1_reg == 1'd0)))) begin
        grp_popcnt_fu_546_x_V = temp_input_V_reg_2307;
    end else begin
        grp_popcnt_fu_546_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_506_x_V = and_ln1355_8_reg_2531;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_506_x_V = and_ln1355_reg_2443;
    end else begin
        grp_popcntdata_fu_506_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_511_x_V = and_ln1355_9_reg_2536;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_511_x_V = and_ln1355_1_reg_2448;
    end else begin
        grp_popcntdata_fu_511_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_516_x_V = and_ln1355_10_reg_2541;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_516_x_V = and_ln1355_2_reg_2453;
    end else begin
        grp_popcntdata_fu_516_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_521_x_V = and_ln1355_11_reg_2546;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_521_x_V = and_ln1355_3_reg_2458;
    end else begin
        grp_popcntdata_fu_521_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_526_x_V = and_ln1355_12_reg_2551;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_526_x_V = and_ln1355_4_reg_2463;
    end else begin
        grp_popcntdata_fu_526_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_531_x_V = and_ln1355_13_reg_2556;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_531_x_V = and_ln1355_5_reg_2468;
    end else begin
        grp_popcntdata_fu_531_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_536_x_V = and_ln1355_14_reg_2561;
    end else if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_popcntdata_fu_536_x_V = and_ln1355_6_reg_2473;
    end else begin
        grp_popcntdata_fu_536_x_V = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln85_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        m_axi_tancalc_input_V_ARADDR = tancalc_input_V_addr_2_reg_2409;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln88_reg_2389 == 1'd0))) begin
        m_axi_tancalc_input_V_ARADDR = tancalc_input_V_addr_1_reg_2403;
    end else if (((m_axi_tancalc_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_tancalc_input_V_ARADDR = tancalc_input_V_addr_reg_2282;
    end else begin
        m_axi_tancalc_input_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln88_reg_2389 == 1'd0)))) begin
        m_axi_tancalc_input_V_ARLEN = 32'd1;
    end else if (((m_axi_tancalc_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        m_axi_tancalc_input_V_ARLEN = 32'd32;
    end else begin
        m_axi_tancalc_input_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln88_reg_2389 == 1'd0)) | ((m_axi_tancalc_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        m_axi_tancalc_input_V_ARVALID = 1'b1;
    end else begin
        m_axi_tancalc_input_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        m_axi_tancalc_input_V_RREADY = 1'b1;
    end else begin
        m_axi_tancalc_input_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln88_reg_2389 == 1'd0)))) begin
        tancalc_input_V_blk_n_AR = m_axi_tancalc_input_V_ARREADY;
    end else begin
        tancalc_input_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        tancalc_input_V_blk_n_R = m_axi_tancalc_input_V_RVALID;
    end else begin
        tancalc_input_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_9_reg_2739 == 1'd0))) begin
        tancalc_output_line_10_V_V_blk_n = tancalc_output_line_10_V_V_full_n;
    end else begin
        tancalc_output_line_10_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_9_reg_2739 == 1'd0))) begin
        tancalc_output_line_10_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_10_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_10_reg_2744 == 1'd0))) begin
        tancalc_output_line_11_V_V_blk_n = tancalc_output_line_11_V_V_full_n;
    end else begin
        tancalc_output_line_11_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_10_reg_2744 == 1'd0))) begin
        tancalc_output_line_11_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_11_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_11_reg_2749 == 1'd0))) begin
        tancalc_output_line_12_V_V_blk_n = tancalc_output_line_12_V_V_full_n;
    end else begin
        tancalc_output_line_12_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_11_reg_2749 == 1'd0))) begin
        tancalc_output_line_12_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_12_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_12_reg_2754 == 1'd0))) begin
        tancalc_output_line_13_V_V_blk_n = tancalc_output_line_13_V_V_full_n;
    end else begin
        tancalc_output_line_13_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_12_reg_2754 == 1'd0))) begin
        tancalc_output_line_13_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_13_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_13_reg_2759 == 1'd0))) begin
        tancalc_output_line_14_V_V_blk_n = tancalc_output_line_14_V_V_full_n;
    end else begin
        tancalc_output_line_14_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_13_reg_2759 == 1'd0))) begin
        tancalc_output_line_14_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_14_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_14_reg_2764 == 1'd0))) begin
        tancalc_output_line_15_V_V_blk_n = tancalc_output_line_15_V_V_full_n;
    end else begin
        tancalc_output_line_15_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_14_reg_2764 == 1'd0))) begin
        tancalc_output_line_15_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_15_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_reg_2694 == 1'd0))) begin
        tancalc_output_line_1_V_V_blk_n = tancalc_output_line_1_V_V_full_n;
    end else begin
        tancalc_output_line_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_reg_2694 == 1'd0))) begin
        tancalc_output_line_1_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_1_reg_2699 == 1'd0))) begin
        tancalc_output_line_2_V_V_blk_n = tancalc_output_line_2_V_V_full_n;
    end else begin
        tancalc_output_line_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_1_reg_2699 == 1'd0))) begin
        tancalc_output_line_2_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_2_reg_2704 == 1'd0))) begin
        tancalc_output_line_3_V_V_blk_n = tancalc_output_line_3_V_V_full_n;
    end else begin
        tancalc_output_line_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_2_reg_2704 == 1'd0))) begin
        tancalc_output_line_3_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_3_reg_2709 == 1'd0))) begin
        tancalc_output_line_4_V_V_blk_n = tancalc_output_line_4_V_V_full_n;
    end else begin
        tancalc_output_line_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_3_reg_2709 == 1'd0))) begin
        tancalc_output_line_4_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_4_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_4_reg_2714 == 1'd0))) begin
        tancalc_output_line_5_V_V_blk_n = tancalc_output_line_5_V_V_full_n;
    end else begin
        tancalc_output_line_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_4_reg_2714 == 1'd0))) begin
        tancalc_output_line_5_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_5_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_5_reg_2719 == 1'd0))) begin
        tancalc_output_line_6_V_V_blk_n = tancalc_output_line_6_V_V_full_n;
    end else begin
        tancalc_output_line_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_5_reg_2719 == 1'd0))) begin
        tancalc_output_line_6_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_6_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_6_reg_2724 == 1'd0))) begin
        tancalc_output_line_7_V_V_blk_n = tancalc_output_line_7_V_V_full_n;
    end else begin
        tancalc_output_line_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_6_reg_2724 == 1'd0))) begin
        tancalc_output_line_7_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_7_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_7_reg_2729 == 1'd0))) begin
        tancalc_output_line_8_V_V_blk_n = tancalc_output_line_8_V_V_full_n;
    end else begin
        tancalc_output_line_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln891_7_reg_2729 == 1'd0))) begin
        tancalc_output_line_8_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_8_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln891_8_reg_2734 == 1'd0))) begin
        tancalc_output_line_9_V_V_blk_n = tancalc_output_line_9_V_V_full_n;
    end else begin
        tancalc_output_line_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln891_8_reg_2734 == 1'd0))) begin
        tancalc_output_line_9_V_V_write = 1'b1;
    end else begin
        tancalc_output_line_9_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln85_fu_659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((m_axi_tancalc_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln26_fu_700_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln26_fu_700_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln88_fu_1214_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln88_fu_1214_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_10_fu_1752_p2 = (zext_ln215_21_reg_2364 + zext_ln215_1_reg_2683);

assign add_ln1353_11_fu_1778_p2 = (zext_ln215_22_reg_2369 + zext_ln215_1_reg_2683);

assign add_ln1353_12_fu_1804_p2 = (zext_ln215_25_reg_2374 + zext_ln215_1_reg_2683);

assign add_ln1353_13_fu_1830_p2 = (zext_ln215_26_reg_2379 + zext_ln215_1_reg_2683);

assign add_ln1353_14_fu_1856_p2 = (zext_ln215_29_reg_2384 + zext_ln215_1_reg_2683);

assign add_ln1353_1_fu_1445_p2 = (zext_ln215_2_reg_2319 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_2_fu_1472_p2 = (zext_ln215_5_reg_2324 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_3_fu_1499_p2 = (zext_ln215_6_reg_2329 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_4_fu_1526_p2 = (zext_ln215_9_reg_2334 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_5_fu_1553_p2 = (zext_ln215_10_reg_2339 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_6_fu_1580_p2 = (zext_ln215_13_reg_2344 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_7_fu_1607_p2 = (zext_ln215_14_reg_2349 + zext_ln215_1_fu_1415_p1);

assign add_ln1353_8_fu_1700_p2 = (zext_ln215_17_reg_2354 + zext_ln215_1_reg_2683);

assign add_ln1353_9_fu_1726_p2 = (zext_ln215_18_reg_2359 + zext_ln215_1_reg_2683);

assign add_ln1353_fu_1418_p2 = (zext_ln215_reg_2314 + zext_ln215_1_fu_1415_p1);

assign add_ln219_1_fu_1236_p2 = (zext_ln90_fu_1232_p1 + zext_ln71_reg_2267);

assign add_ln219_2_fu_1256_p2 = (zext_ln219_1_fu_1252_p1 + zext_ln71_reg_2267);

assign add_ln219_fu_689_p2 = (zext_ln219_fu_685_p1 + zext_ln71_reg_2267);

assign and_ln1355_10_fu_1345_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_11_fu_242);

assign and_ln1355_11_fu_1350_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_12_fu_246);

assign and_ln1355_12_fu_1355_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_13_fu_250);

assign and_ln1355_13_fu_1360_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_14_fu_254);

assign and_ln1355_14_fu_1365_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_15_fu_258);

assign and_ln1355_1_fu_1293_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_2_fu_206);

assign and_ln1355_2_fu_1299_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_3_fu_210);

assign and_ln1355_3_fu_1305_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_4_fu_214);

assign and_ln1355_4_fu_1311_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_5_fu_218);

assign and_ln1355_5_fu_1317_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_6_fu_222);

assign and_ln1355_6_fu_1323_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_7_fu_226);

assign and_ln1355_7_fu_1329_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_8_fu_230);

assign and_ln1355_8_fu_1335_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_9_fu_234);

assign and_ln1355_9_fu_1340_p2 = (ref_local_0_V_reg_2427 & cmpr_local_15_V_10_fu_238);

assign and_ln1355_fu_1287_p2 = (ref_local_0_V_fu_1267_p3 & cmpr_local_15_V_1_fu_202);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_8_V_V_full_n == 1'b0) & (icmp_ln891_7_reg_2729 == 1'd0)) | ((tancalc_output_line_7_V_V_full_n == 1'b0) & (icmp_ln891_6_reg_2724 == 1'd0)) | ((tancalc_output_line_6_V_V_full_n == 1'b0) & (icmp_ln891_5_reg_2719 == 1'd0)) | ((tancalc_output_line_5_V_V_full_n == 1'b0) & (icmp_ln891_4_reg_2714 == 1'd0)) | ((tancalc_output_line_4_V_V_full_n == 1'b0) & (icmp_ln891_3_reg_2709 == 1'd0)) | ((tancalc_output_line_3_V_V_full_n == 1'b0) & (icmp_ln891_2_reg_2704 == 1'd0)) | ((tancalc_output_line_2_V_V_full_n == 1'b0) & (icmp_ln891_1_reg_2699 == 1'd0)) | ((tancalc_output_line_1_V_V_full_n == 1'b0) & (icmp_ln891_reg_2694 == 1'd0)))) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_8_V_V_full_n == 1'b0) & (icmp_ln891_7_reg_2729 == 1'd0)) | ((tancalc_output_line_7_V_V_full_n == 1'b0) & (icmp_ln891_6_reg_2724 == 1'd0)) | ((tancalc_output_line_6_V_V_full_n == 1'b0) & (icmp_ln891_5_reg_2719 == 1'd0)) | ((tancalc_output_line_5_V_V_full_n == 1'b0) & (icmp_ln891_4_reg_2714 == 1'd0)) | ((tancalc_output_line_4_V_V_full_n == 1'b0) & (icmp_ln891_3_reg_2709 == 1'd0)) | ((tancalc_output_line_3_V_V_full_n == 1'b0) & (icmp_ln891_2_reg_2704 == 1'd0)) | ((tancalc_output_line_2_V_V_full_n == 1'b0) & (icmp_ln891_1_reg_2699 == 1'd0)) | ((tancalc_output_line_1_V_V_full_n == 1'b0) & (icmp_ln891_reg_2694 == 1'd0)))) | ((m_axi_tancalc_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_8_V_V_full_n == 1'b0) & (icmp_ln891_7_reg_2729 == 1'd0)) | ((tancalc_output_line_7_V_V_full_n == 1'b0) & (icmp_ln891_6_reg_2724 == 1'd0)) | ((tancalc_output_line_6_V_V_full_n == 1'b0) & (icmp_ln891_5_reg_2719 == 1'd0)) | ((tancalc_output_line_5_V_V_full_n == 1'b0) & (icmp_ln891_4_reg_2714 == 1'd0)) | ((tancalc_output_line_4_V_V_full_n == 1'b0) & (icmp_ln891_3_reg_2709 == 1'd0)) | ((tancalc_output_line_3_V_V_full_n == 1'b0) & (icmp_ln891_2_reg_2704 == 1'd0)) | ((tancalc_output_line_2_V_V_full_n == 1'b0) & (icmp_ln891_1_reg_2699 == 1'd0)) | ((tancalc_output_line_1_V_V_full_n == 1'b0) & (icmp_ln891_reg_2694 == 1'd0)))) | ((m_axi_tancalc_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_15_V_V_full_n == 1'b0) & (icmp_ln891_14_reg_2764 == 1'd0)) | ((tancalc_output_line_14_V_V_full_n == 1'b0) & (icmp_ln891_13_reg_2759 == 1'd0)) | ((tancalc_output_line_13_V_V_full_n == 1'b0) & (icmp_ln891_12_reg_2754 == 1'd0)) | ((tancalc_output_line_12_V_V_full_n == 1'b0) & (icmp_ln891_11_reg_2749 == 1'd0)) | ((tancalc_output_line_11_V_V_full_n == 1'b0) & (icmp_ln891_10_reg_2744 == 1'd0)) | ((tancalc_output_line_10_V_V_full_n == 1'b0) & (icmp_ln891_9_reg_2739 == 1'd0)) | ((tancalc_output_line_9_V_V_full_n == 1'b0) & (icmp_ln891_8_reg_2734 == 1'd0)))) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_15_V_V_full_n == 1'b0) & (icmp_ln891_14_reg_2764 == 1'd0)) | ((tancalc_output_line_14_V_V_full_n == 1'b0) & (icmp_ln891_13_reg_2759 == 1'd0)) | ((tancalc_output_line_13_V_V_full_n == 1'b0) & (icmp_ln891_12_reg_2754 == 1'd0)) | ((tancalc_output_line_12_V_V_full_n == 1'b0) & (icmp_ln891_11_reg_2749 == 1'd0)) | ((tancalc_output_line_11_V_V_full_n == 1'b0) & (icmp_ln891_10_reg_2744 == 1'd0)) | ((tancalc_output_line_10_V_V_full_n == 1'b0) & (icmp_ln891_9_reg_2739 == 1'd0)) | ((tancalc_output_line_9_V_V_full_n == 1'b0) & (icmp_ln891_8_reg_2734 == 1'd0)))) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((ap_enable_reg_pp1_iter8 == 1'b1) & (((tancalc_output_line_15_V_V_full_n == 1'b0) & (icmp_ln891_14_reg_2764 == 1'd0)) | ((tancalc_output_line_14_V_V_full_n == 1'b0) & (icmp_ln891_13_reg_2759 == 1'd0)) | ((tancalc_output_line_13_V_V_full_n == 1'b0) & (icmp_ln891_12_reg_2754 == 1'd0)) | ((tancalc_output_line_12_V_V_full_n == 1'b0) & (icmp_ln891_11_reg_2749 == 1'd0)) | ((tancalc_output_line_11_V_V_full_n == 1'b0) & (icmp_ln891_10_reg_2744 == 1'd0)) | ((tancalc_output_line_10_V_V_full_n == 1'b0) & (icmp_ln891_9_reg_2739 == 1'd0)) | ((tancalc_output_line_9_V_V_full_n == 1'b0) & (icmp_ln891_8_reg_2734 == 1'd0)))) | ((m_axi_tancalc_input_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (m_axi_tancalc_input_V_RVALID == 1'b0);
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = ((m_axi_tancalc_input_V_ARREADY == 1'b0) & (icmp_ln88_reg_2389 == 1'd0));
end

assign ap_block_state16_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp1_stage0_iter4 = (m_axi_tancalc_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp1_stage1_iter4 = (m_axi_tancalc_input_V_RVALID == 1'b0);
end

assign ap_block_state25_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_pp1_stage0_iter8 = (((tancalc_output_line_8_V_V_full_n == 1'b0) & (icmp_ln891_7_reg_2729 == 1'd0)) | ((tancalc_output_line_7_V_V_full_n == 1'b0) & (icmp_ln891_6_reg_2724 == 1'd0)) | ((tancalc_output_line_6_V_V_full_n == 1'b0) & (icmp_ln891_5_reg_2719 == 1'd0)) | ((tancalc_output_line_5_V_V_full_n == 1'b0) & (icmp_ln891_4_reg_2714 == 1'd0)) | ((tancalc_output_line_4_V_V_full_n == 1'b0) & (icmp_ln891_3_reg_2709 == 1'd0)) | ((tancalc_output_line_3_V_V_full_n == 1'b0) & (icmp_ln891_2_reg_2704 == 1'd0)) | ((tancalc_output_line_2_V_V_full_n == 1'b0) & (icmp_ln891_1_reg_2699 == 1'd0)) | ((tancalc_output_line_1_V_V_full_n == 1'b0) & (icmp_ln891_reg_2694 == 1'd0)));
end

always @ (*) begin
    ap_block_state32_pp1_stage1_iter8 = (((tancalc_output_line_15_V_V_full_n == 1'b0) & (icmp_ln891_14_reg_2764 == 1'd0)) | ((tancalc_output_line_14_V_V_full_n == 1'b0) & (icmp_ln891_13_reg_2759 == 1'd0)) | ((tancalc_output_line_13_V_V_full_n == 1'b0) & (icmp_ln891_12_reg_2754 == 1'd0)) | ((tancalc_output_line_12_V_V_full_n == 1'b0) & (icmp_ln891_11_reg_2749 == 1'd0)) | ((tancalc_output_line_11_V_V_full_n == 1'b0) & (icmp_ln891_10_reg_2744 == 1'd0)) | ((tancalc_output_line_10_V_V_full_n == 1'b0) & (icmp_ln891_9_reg_2739 == 1'd0)) | ((tancalc_output_line_9_V_V_full_n == 1'b0) & (icmp_ln891_8_reg_2734 == 1'd0)));
end

always @ (*) begin
    ap_condition_2004 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2007 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2010 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2013 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2016 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2019 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2022 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2025 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2028 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2031 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2034 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2037 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2040 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2043 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2046 = ((trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_2049 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln28_1_reg_2301_pp0_iter1_reg == 4'd0));
end

always @ (*) begin
    ap_condition_2052 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2055 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2058 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2061 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2064 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2067 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2070 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2073 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2076 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2079 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2082 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2085 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2088 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2091 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2094 = ((trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_2097 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (trunc_ln28_1_reg_2301_pp0_iter2_reg == 4'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign cmpr_chunk_num_fu_665_p2 = (cmpr_chunk_num_0_reg_473 + 3'd1);

assign cmpr_local_0_V_2_fu_853_p3 = {{temp_input_V_reg_2307}, {data_local_temp_V_fu_849_p1}};

assign cmpr_local_0_V_fu_726_p1 = temp_input_V_reg_2307;

assign cmprpop_local_0_V_1_fu_1068_p2 = (tmp_4_fu_1027_p18 + zext_ln700_2_fu_1064_p1);

assign cmprpop_local_0_V_fu_940_p1 = reg_641;

assign data_local_temp_V_fu_849_p1 = p_Val2_s_fu_812_p18[15:0];

assign data_num_fu_1220_p2 = (ap_phi_mux_data_num_0_phi_fu_499_p4 + 7'd1);

assign data_part_num_fu_706_p2 = (data_part_num_0_i23_reg_484 + 6'd1);

assign grp_fu_1938_p0 = 21'd10000;

assign grp_fu_1938_p1 = grp_fu_1938_p10;

assign grp_fu_1938_p10 = temp_V_0_1_reg_2483;

assign grp_fu_1945_p0 = 21'd10000;

assign grp_fu_1945_p1 = grp_fu_1945_p10;

assign grp_fu_1945_p10 = temp_V_0_2_reg_2489;

assign grp_fu_1952_p0 = 21'd10000;

assign grp_fu_1952_p1 = grp_fu_1952_p10;

assign grp_fu_1952_p10 = temp_V_0_3_reg_2495;

assign grp_fu_1959_p0 = 21'd10000;

assign grp_fu_1959_p1 = grp_fu_1959_p10;

assign grp_fu_1959_p10 = temp_V_0_4_reg_2501;

assign grp_fu_1966_p0 = 21'd10000;

assign grp_fu_1966_p1 = grp_fu_1966_p10;

assign grp_fu_1966_p10 = temp_V_0_5_reg_2507;

assign grp_fu_1973_p0 = 21'd10000;

assign grp_fu_1973_p1 = grp_fu_1973_p10;

assign grp_fu_1973_p10 = temp_V_0_6_reg_2513;

assign grp_fu_1980_p0 = 21'd10000;

assign grp_fu_1980_p1 = grp_fu_1980_p10;

assign grp_fu_1980_p10 = temp_V_0_7_reg_2519;

assign grp_fu_1987_p0 = 21'd10000;

assign grp_fu_1987_p1 = grp_fu_1987_p10;

assign grp_fu_1987_p10 = temp_V_0_8_reg_2525;

assign grp_fu_1994_p0 = 21'd10000;

assign grp_fu_1994_p1 = grp_fu_1994_p10;

assign grp_fu_1994_p10 = temp_V_0_9_reg_2606;

assign grp_fu_2001_p0 = 21'd10000;

assign grp_fu_2001_p1 = grp_fu_2001_p10;

assign grp_fu_2001_p10 = temp_V_0_s_reg_2612;

assign grp_fu_2008_p0 = 21'd10000;

assign grp_fu_2008_p1 = grp_fu_2008_p10;

assign grp_fu_2008_p10 = temp_V_0_10_reg_2618;

assign grp_fu_2015_p0 = 21'd10000;

assign grp_fu_2015_p1 = grp_fu_2015_p10;

assign grp_fu_2015_p10 = temp_V_0_11_reg_2624;

assign grp_fu_2022_p0 = 21'd10000;

assign grp_fu_2022_p1 = grp_fu_2022_p10;

assign grp_fu_2022_p10 = temp_V_0_12_reg_2630;

assign grp_fu_2029_p0 = 21'd10000;

assign grp_fu_2029_p1 = grp_fu_2029_p10;

assign grp_fu_2029_p10 = temp_V_0_13_reg_2636;

assign grp_fu_2036_p0 = 21'd10000;

assign grp_fu_2036_p1 = grp_fu_2036_p10;

assign grp_fu_2036_p10 = temp_V_0_14_reg_2642;

assign icmp_ln26_fu_700_p2 = ((data_part_num_0_i23_reg_484 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_659_p2 = ((cmpr_chunk_num_0_reg_473 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1214_p2 = ((ap_phi_mux_data_num_0_phi_fu_499_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln891_10_fu_1773_p2 = (($signed(grp_fu_2008_p2) < $signed(sext_ln891_10_fu_1769_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_11_fu_1799_p2 = (($signed(grp_fu_2015_p2) < $signed(sext_ln891_11_fu_1795_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_12_fu_1825_p2 = (($signed(grp_fu_2022_p2) < $signed(sext_ln891_12_fu_1821_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_13_fu_1851_p2 = (($signed(grp_fu_2029_p2) < $signed(sext_ln891_13_fu_1847_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_14_fu_1877_p2 = (($signed(grp_fu_2036_p2) < $signed(sext_ln891_14_fu_1873_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_1_fu_1467_p2 = (($signed(grp_fu_1945_p2) < $signed(sext_ln891_1_fu_1463_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_2_fu_1494_p2 = (($signed(grp_fu_1952_p2) < $signed(sext_ln891_2_fu_1490_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_3_fu_1521_p2 = (($signed(grp_fu_1959_p2) < $signed(sext_ln891_3_fu_1517_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_4_fu_1548_p2 = (($signed(grp_fu_1966_p2) < $signed(sext_ln891_4_fu_1544_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_5_fu_1575_p2 = (($signed(grp_fu_1973_p2) < $signed(sext_ln891_5_fu_1571_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_6_fu_1602_p2 = (($signed(grp_fu_1980_p2) < $signed(sext_ln891_6_fu_1598_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_7_fu_1629_p2 = (($signed(grp_fu_1987_p2) < $signed(sext_ln891_7_fu_1625_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_8_fu_1721_p2 = (($signed(grp_fu_1994_p2) < $signed(sext_ln891_8_fu_1717_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_9_fu_1747_p2 = (($signed(grp_fu_2001_p2) < $signed(sext_ln891_9_fu_1743_p1)) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_1440_p2 = (($signed(grp_fu_1938_p2) < $signed(sext_ln891_fu_1436_p1)) ? 1'b1 : 1'b0);

assign m_axi_tancalc_input_V_ARBURST = 2'd0;

assign m_axi_tancalc_input_V_ARCACHE = 4'd0;

assign m_axi_tancalc_input_V_ARID = 1'd0;

assign m_axi_tancalc_input_V_ARLOCK = 2'd0;

assign m_axi_tancalc_input_V_ARPROT = 3'd0;

assign m_axi_tancalc_input_V_ARQOS = 4'd0;

assign m_axi_tancalc_input_V_ARREGION = 4'd0;

assign m_axi_tancalc_input_V_ARSIZE = 3'd0;

assign m_axi_tancalc_input_V_ARUSER = 1'd0;

assign m_axi_tancalc_input_V_AWADDR = 64'd0;

assign m_axi_tancalc_input_V_AWBURST = 2'd0;

assign m_axi_tancalc_input_V_AWCACHE = 4'd0;

assign m_axi_tancalc_input_V_AWID = 1'd0;

assign m_axi_tancalc_input_V_AWLEN = 32'd0;

assign m_axi_tancalc_input_V_AWLOCK = 2'd0;

assign m_axi_tancalc_input_V_AWPROT = 3'd0;

assign m_axi_tancalc_input_V_AWQOS = 4'd0;

assign m_axi_tancalc_input_V_AWREGION = 4'd0;

assign m_axi_tancalc_input_V_AWSIZE = 3'd0;

assign m_axi_tancalc_input_V_AWUSER = 1'd0;

assign m_axi_tancalc_input_V_AWVALID = 1'b0;

assign m_axi_tancalc_input_V_BREADY = 1'b0;

assign m_axi_tancalc_input_V_WDATA = 16'd0;

assign m_axi_tancalc_input_V_WID = 1'd0;

assign m_axi_tancalc_input_V_WLAST = 1'b0;

assign m_axi_tancalc_input_V_WSTRB = 2'd0;

assign m_axi_tancalc_input_V_WUSER = 1'd0;

assign m_axi_tancalc_input_V_WVALID = 1'b0;

assign or_ln219_fu_1247_p2 = (shl_ln90_reg_2398 | 7'd1);

assign or_ln_fu_675_p4 = {{{{1'd1}, {trunc_ln86_fu_671_p1}}}, {5'd0}};

assign ref_local_0_V_fu_1267_p3 = {{tancalc_input_V_addr_2_read_reg_2421}, {tancalc_input_V_addr_1_read_reg_2415}};

assign refpop_local_0_V_1_fu_1281_p2 = (zext_ln700_fu_1273_p1 + zext_ln700_1_fu_1277_p1);

assign result_local_1_V_fu_1634_p2 = (icmp_ln891_reg_2694 ^ 1'd1);

assign sext_ln891_10_fu_1769_p1 = $signed(sub_ln1354_10_fu_1763_p2);

assign sext_ln891_11_fu_1795_p1 = $signed(sub_ln1354_11_fu_1789_p2);

assign sext_ln891_12_fu_1821_p1 = $signed(sub_ln1354_12_fu_1815_p2);

assign sext_ln891_13_fu_1847_p1 = $signed(sub_ln1354_13_fu_1841_p2);

assign sext_ln891_14_fu_1873_p1 = $signed(sub_ln1354_14_fu_1867_p2);

assign sext_ln891_1_fu_1463_p1 = $signed(sub_ln1354_1_fu_1457_p2);

assign sext_ln891_2_fu_1490_p1 = $signed(sub_ln1354_2_fu_1484_p2);

assign sext_ln891_3_fu_1517_p1 = $signed(sub_ln1354_3_fu_1511_p2);

assign sext_ln891_4_fu_1544_p1 = $signed(sub_ln1354_4_fu_1538_p2);

assign sext_ln891_5_fu_1571_p1 = $signed(sub_ln1354_5_fu_1565_p2);

assign sext_ln891_6_fu_1598_p1 = $signed(sub_ln1354_6_fu_1592_p2);

assign sext_ln891_7_fu_1625_p1 = $signed(sub_ln1354_7_fu_1619_p2);

assign sext_ln891_8_fu_1717_p1 = $signed(sub_ln1354_8_fu_1711_p2);

assign sext_ln891_9_fu_1743_p1 = $signed(sub_ln1354_9_fu_1737_p2);

assign sext_ln891_fu_1436_p1 = $signed(sub_ln1354_fu_1430_p2);

assign shl_ln90_fu_1226_p2 = ap_phi_mux_data_num_0_phi_fu_499_p4 << 7'd1;

assign start_out = real_start;

assign sub_ln1354_10_fu_1763_p2 = (zext_ln215_36_fu_1756_p1 - zext_ln215_37_fu_1760_p1);

assign sub_ln1354_11_fu_1789_p2 = (zext_ln215_38_fu_1782_p1 - zext_ln215_39_fu_1786_p1);

assign sub_ln1354_12_fu_1815_p2 = (zext_ln215_40_fu_1808_p1 - zext_ln215_41_fu_1812_p1);

assign sub_ln1354_13_fu_1841_p2 = (zext_ln215_42_fu_1834_p1 - zext_ln215_43_fu_1838_p1);

assign sub_ln1354_14_fu_1867_p2 = (zext_ln215_44_fu_1860_p1 - zext_ln215_45_fu_1864_p1);

assign sub_ln1354_1_fu_1457_p2 = (zext_ln215_7_fu_1450_p1 - zext_ln215_8_fu_1454_p1);

assign sub_ln1354_2_fu_1484_p2 = (zext_ln215_11_fu_1477_p1 - zext_ln215_12_fu_1481_p1);

assign sub_ln1354_3_fu_1511_p2 = (zext_ln215_15_fu_1504_p1 - zext_ln215_16_fu_1508_p1);

assign sub_ln1354_4_fu_1538_p2 = (zext_ln215_19_fu_1531_p1 - zext_ln215_20_fu_1535_p1);

assign sub_ln1354_5_fu_1565_p2 = (zext_ln215_23_fu_1558_p1 - zext_ln215_24_fu_1562_p1);

assign sub_ln1354_6_fu_1592_p2 = (zext_ln215_27_fu_1585_p1 - zext_ln215_28_fu_1589_p1);

assign sub_ln1354_7_fu_1619_p2 = (zext_ln215_30_fu_1612_p1 - zext_ln215_31_fu_1616_p1);

assign sub_ln1354_8_fu_1711_p2 = (zext_ln215_32_fu_1704_p1 - zext_ln215_33_fu_1708_p1);

assign sub_ln1354_9_fu_1737_p2 = (zext_ln215_34_fu_1730_p1 - zext_ln215_35_fu_1734_p1);

assign sub_ln1354_fu_1430_p2 = (zext_ln215_3_fu_1423_p1 - zext_ln215_4_fu_1427_p1);

assign tancalc_input_V_offset1_fu_645_p4 = {{tancalc_input_V_offset[63:1]}};

assign tancalc_output_line_10_V_V_din = ((icmp_ln891_9_reg_2739[0:0] === 1'b1) ? 10'd0 : 10'd10);

assign tancalc_output_line_11_V_V_din = ((icmp_ln891_10_reg_2744[0:0] === 1'b1) ? 10'd0 : 10'd11);

assign tancalc_output_line_12_V_V_din = ((icmp_ln891_11_reg_2749[0:0] === 1'b1) ? 10'd0 : 10'd12);

assign tancalc_output_line_13_V_V_din = ((icmp_ln891_12_reg_2754[0:0] === 1'b1) ? 10'd0 : 10'd13);

assign tancalc_output_line_14_V_V_din = ((icmp_ln891_13_reg_2759[0:0] === 1'b1) ? 10'd0 : 10'd14);

assign tancalc_output_line_15_V_V_din = ((icmp_ln891_14_reg_2764[0:0] === 1'b1) ? 10'd0 : 10'd15);

assign tancalc_output_line_1_V_V_din = result_local_1_V_fu_1634_p2;

assign tancalc_output_line_2_V_V_din = ((icmp_ln891_1_reg_2699[0:0] === 1'b1) ? 10'd0 : 10'd2);

assign tancalc_output_line_3_V_V_din = ((icmp_ln891_2_reg_2704[0:0] === 1'b1) ? 10'd0 : 10'd3);

assign tancalc_output_line_4_V_V_din = ((icmp_ln891_3_reg_2709[0:0] === 1'b1) ? 10'd0 : 10'd4);

assign tancalc_output_line_5_V_V_din = ((icmp_ln891_4_reg_2714[0:0] === 1'b1) ? 10'd0 : 10'd5);

assign tancalc_output_line_6_V_V_din = ((icmp_ln891_5_reg_2719[0:0] === 1'b1) ? 10'd0 : 10'd6);

assign tancalc_output_line_7_V_V_din = ((icmp_ln891_6_reg_2724[0:0] === 1'b1) ? 10'd0 : 10'd7);

assign tancalc_output_line_8_V_V_din = ((icmp_ln891_7_reg_2729[0:0] === 1'b1) ? 10'd0 : 10'd8);

assign tancalc_output_line_9_V_V_din = ((icmp_ln891_8_reg_2734[0:0] === 1'b1) ? 10'd0 : 10'd9);

assign trunc_ln26_fu_712_p1 = data_part_num_0_i23_reg_484[0:0];

assign trunc_ln86_fu_671_p1 = cmpr_chunk_num_0_reg_473[1:0];

assign zext_ln215_10_fu_1174_p1 = cmprpop_local_15_V_6_fu_286;

assign zext_ln215_11_fu_1477_p1 = add_ln1353_2_fu_1472_p2;

assign zext_ln215_12_fu_1481_p1 = temp_V_0_3_reg_2495_pp1_iter6_reg;

assign zext_ln215_13_fu_1178_p1 = cmprpop_local_15_V_7_fu_290;

assign zext_ln215_14_fu_1182_p1 = cmprpop_local_15_V_8_fu_294;

assign zext_ln215_15_fu_1504_p1 = add_ln1353_3_fu_1499_p2;

assign zext_ln215_16_fu_1508_p1 = temp_V_0_4_reg_2501_pp1_iter6_reg;

assign zext_ln215_17_fu_1186_p1 = cmprpop_local_15_V_9_fu_298;

assign zext_ln215_18_fu_1190_p1 = cmprpop_local_15_V_10_fu_302;

assign zext_ln215_19_fu_1531_p1 = add_ln1353_4_fu_1526_p2;

assign zext_ln215_1_fu_1415_p1 = refpop_local_0_V_1_reg_2438_pp1_iter7_reg;

assign zext_ln215_20_fu_1535_p1 = temp_V_0_5_reg_2507_pp1_iter6_reg;

assign zext_ln215_21_fu_1194_p1 = cmprpop_local_15_V_11_fu_306;

assign zext_ln215_22_fu_1198_p1 = cmprpop_local_15_V_12_fu_310;

assign zext_ln215_23_fu_1558_p1 = add_ln1353_5_fu_1553_p2;

assign zext_ln215_24_fu_1562_p1 = temp_V_0_6_reg_2513_pp1_iter6_reg;

assign zext_ln215_25_fu_1202_p1 = cmprpop_local_15_V_13_fu_314;

assign zext_ln215_26_fu_1206_p1 = cmprpop_local_15_V_14_fu_318;

assign zext_ln215_27_fu_1585_p1 = add_ln1353_6_fu_1580_p2;

assign zext_ln215_28_fu_1589_p1 = temp_V_0_7_reg_2519_pp1_iter6_reg;

assign zext_ln215_29_fu_1210_p1 = cmprpop_local_15_V_15_fu_322;

assign zext_ln215_2_fu_1158_p1 = cmprpop_local_15_V_2_fu_270;

assign zext_ln215_30_fu_1612_p1 = add_ln1353_7_fu_1607_p2;

assign zext_ln215_31_fu_1616_p1 = temp_V_0_8_reg_2525_pp1_iter6_reg;

assign zext_ln215_32_fu_1704_p1 = add_ln1353_8_fu_1700_p2;

assign zext_ln215_33_fu_1708_p1 = temp_V_0_9_reg_2606_pp1_iter7_reg;

assign zext_ln215_34_fu_1730_p1 = add_ln1353_9_fu_1726_p2;

assign zext_ln215_35_fu_1734_p1 = temp_V_0_s_reg_2612_pp1_iter7_reg;

assign zext_ln215_36_fu_1756_p1 = add_ln1353_10_fu_1752_p2;

assign zext_ln215_37_fu_1760_p1 = temp_V_0_10_reg_2618_pp1_iter7_reg;

assign zext_ln215_38_fu_1782_p1 = add_ln1353_11_fu_1778_p2;

assign zext_ln215_39_fu_1786_p1 = temp_V_0_11_reg_2624_pp1_iter7_reg;

assign zext_ln215_3_fu_1423_p1 = add_ln1353_fu_1418_p2;

assign zext_ln215_40_fu_1808_p1 = add_ln1353_12_fu_1804_p2;

assign zext_ln215_41_fu_1812_p1 = temp_V_0_12_reg_2630_pp1_iter7_reg;

assign zext_ln215_42_fu_1834_p1 = add_ln1353_13_fu_1830_p2;

assign zext_ln215_43_fu_1838_p1 = temp_V_0_13_reg_2636_pp1_iter7_reg;

assign zext_ln215_44_fu_1860_p1 = add_ln1353_14_fu_1856_p2;

assign zext_ln215_45_fu_1864_p1 = temp_V_0_14_reg_2642_pp1_iter7_reg;

assign zext_ln215_4_fu_1427_p1 = temp_V_0_1_reg_2483_pp1_iter6_reg;

assign zext_ln215_5_fu_1162_p1 = cmprpop_local_15_V_3_fu_274;

assign zext_ln215_6_fu_1166_p1 = cmprpop_local_15_V_4_fu_278;

assign zext_ln215_7_fu_1450_p1 = add_ln1353_1_fu_1445_p2;

assign zext_ln215_8_fu_1454_p1 = temp_V_0_2_reg_2489_pp1_iter6_reg;

assign zext_ln215_9_fu_1170_p1 = cmprpop_local_15_V_5_fu_282;

assign zext_ln215_fu_1154_p1 = cmprpop_local_15_V_1_fu_266;

assign zext_ln219_1_fu_1252_p1 = or_ln219_fu_1247_p2;

assign zext_ln219_fu_685_p1 = or_ln_fu_675_p4;

assign zext_ln700_1_fu_1277_p1 = grp_popcnt_fu_546_ap_return;

assign zext_ln700_2_fu_1064_p1 = reg_641;

assign zext_ln700_fu_1273_p1 = reg_641;

assign zext_ln71_fu_655_p1 = tancalc_input_V_offset1_fu_645_p4;

assign zext_ln90_fu_1232_p1 = shl_ln90_fu_1226_p2;

always @ (posedge ap_clk) begin
    zext_ln71_reg_2267[63] <= 1'b0;
    zext_ln215_reg_2314[11] <= 1'b0;
    zext_ln215_2_reg_2319[11] <= 1'b0;
    zext_ln215_5_reg_2324[11] <= 1'b0;
    zext_ln215_6_reg_2329[11] <= 1'b0;
    zext_ln215_9_reg_2334[11] <= 1'b0;
    zext_ln215_10_reg_2339[11] <= 1'b0;
    zext_ln215_13_reg_2344[11] <= 1'b0;
    zext_ln215_14_reg_2349[11] <= 1'b0;
    zext_ln215_17_reg_2354[11] <= 1'b0;
    zext_ln215_18_reg_2359[11] <= 1'b0;
    zext_ln215_21_reg_2364[11] <= 1'b0;
    zext_ln215_22_reg_2369[11] <= 1'b0;
    zext_ln215_25_reg_2374[11] <= 1'b0;
    zext_ln215_26_reg_2379[11] <= 1'b0;
    zext_ln215_29_reg_2384[11] <= 1'b0;
    shl_ln90_reg_2398[0] <= 1'b0;
    zext_ln215_1_reg_2683[11:6] <= 6'b000000;
end

endmodule //hier_func_tancalc
