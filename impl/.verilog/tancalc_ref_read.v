// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tancalc_ref_read (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        ref_local_address0,
        ref_local_ce0,
        ref_local_we0,
        ref_local_d0,
        refpop_local_address0,
        refpop_local_ce0,
        refpop_local_we0,
        refpop_local_d0,
        chunk_num
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state7 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [6:0] ref_local_address0;
output   ref_local_ce0;
output   ref_local_we0;
output  [31:0] ref_local_d0;
output  [6:0] refpop_local_address0;
output   refpop_local_ce0;
output   refpop_local_we0;
output  [5:0] refpop_local_d0;
input  [15:0] chunk_num;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg ref_local_ce0;
reg ref_local_we0;
reg[6:0] refpop_local_address0;
reg refpop_local_ce0;
reg refpop_local_we0;
reg[5:0] refpop_local_d0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] ref_num_0_reg_168;
wire   [7:0] i_fu_186_p2;
wire    ap_CS_fsm_state2;
wire   [16:0] zext_ln16_fu_197_p1;
reg   [16:0] zext_ln16_reg_929;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln16_fu_200_p2;
reg   [0:0] icmp_ln16_reg_934;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln16_reg_934_pp1_iter1_reg;
wire   [7:0] ref_num_fu_206_p2;
reg   [7:0] ref_num_reg_938;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln17_2_fu_230_p1;
reg   [63:0] zext_ln17_2_reg_948;
wire   [4:0] add_ln7_14_fu_751_p2;
reg   [4:0] add_ln7_14_reg_953;
wire   [4:0] add_ln7_29_fu_897_p2;
reg   [4:0] add_ln7_29_reg_958;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] i_0_reg_157;
wire   [0:0] icmp_ln13_fu_180_p2;
reg   [7:0] ap_phi_mux_ref_num_0_phi_fu_172_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln14_fu_192_p1;
wire   [63:0] zext_ln17_1_fu_221_p1;
wire   [5:0] add_ln7_30_fu_909_p2;
wire   [16:0] zext_ln17_fu_212_p1;
wire   [16:0] add_ln17_fu_216_p2;
wire   [0:0] trunc_ln17_fu_226_p1;
wire   [0:0] tmp_fu_239_p3;
wire   [0:0] tmp_1_fu_251_p3;
wire   [0:0] tmp_2_fu_263_p3;
wire   [0:0] tmp_3_fu_275_p3;
wire   [0:0] tmp_4_fu_287_p3;
wire   [0:0] tmp_5_fu_299_p3;
wire   [0:0] tmp_6_fu_311_p3;
wire   [0:0] tmp_7_fu_323_p3;
wire   [0:0] tmp_8_fu_335_p3;
wire   [0:0] tmp_9_fu_347_p3;
wire   [0:0] tmp_10_fu_359_p3;
wire   [0:0] tmp_11_fu_371_p3;
wire   [0:0] tmp_12_fu_383_p3;
wire   [0:0] tmp_13_fu_395_p3;
wire   [0:0] tmp_14_fu_407_p3;
wire   [0:0] tmp_15_fu_419_p3;
wire   [0:0] tmp_16_fu_431_p3;
wire   [0:0] tmp_17_fu_443_p3;
wire   [0:0] tmp_18_fu_455_p3;
wire   [0:0] tmp_19_fu_467_p3;
wire   [0:0] tmp_20_fu_479_p3;
wire   [0:0] tmp_21_fu_491_p3;
wire   [0:0] tmp_22_fu_503_p3;
wire   [0:0] tmp_23_fu_515_p3;
wire   [0:0] tmp_24_fu_527_p3;
wire   [0:0] tmp_25_fu_539_p3;
wire   [0:0] tmp_26_fu_551_p3;
wire   [0:0] tmp_27_fu_563_p3;
wire   [0:0] tmp_28_fu_575_p3;
wire   [0:0] tmp_29_fu_587_p3;
wire   [0:0] tmp_30_fu_599_p3;
wire   [1:0] zext_ln7_fu_235_p1;
wire   [1:0] zext_ln7_1_fu_247_p1;
wire   [1:0] add_ln7_fu_611_p2;
wire   [1:0] zext_ln7_3_fu_271_p1;
wire   [1:0] zext_ln7_2_fu_259_p1;
wire   [1:0] add_ln7_1_fu_621_p2;
wire   [2:0] zext_ln7_31_fu_617_p1;
wire   [2:0] zext_ln7_32_fu_627_p1;
wire   [2:0] add_ln7_2_fu_631_p2;
wire   [1:0] zext_ln7_5_fu_295_p1;
wire   [1:0] zext_ln7_4_fu_283_p1;
wire   [1:0] add_ln7_3_fu_641_p2;
wire   [1:0] zext_ln7_7_fu_319_p1;
wire   [1:0] zext_ln7_6_fu_307_p1;
wire   [1:0] add_ln7_4_fu_651_p2;
wire   [2:0] zext_ln7_34_fu_647_p1;
wire   [2:0] zext_ln7_35_fu_657_p1;
wire   [2:0] add_ln7_5_fu_661_p2;
wire   [3:0] zext_ln7_33_fu_637_p1;
wire   [3:0] zext_ln7_36_fu_667_p1;
wire   [3:0] add_ln7_6_fu_671_p2;
wire   [1:0] zext_ln7_9_fu_343_p1;
wire   [1:0] zext_ln7_8_fu_331_p1;
wire   [1:0] add_ln7_7_fu_681_p2;
wire   [1:0] zext_ln7_11_fu_367_p1;
wire   [1:0] zext_ln7_10_fu_355_p1;
wire   [1:0] add_ln7_8_fu_691_p2;
wire   [2:0] zext_ln7_38_fu_687_p1;
wire   [2:0] zext_ln7_39_fu_697_p1;
wire   [2:0] add_ln7_9_fu_701_p2;
wire   [1:0] zext_ln7_13_fu_391_p1;
wire   [1:0] zext_ln7_12_fu_379_p1;
wire   [1:0] add_ln7_10_fu_711_p2;
wire   [1:0] zext_ln7_15_fu_415_p1;
wire   [1:0] zext_ln7_14_fu_403_p1;
wire   [1:0] add_ln7_11_fu_721_p2;
wire   [2:0] zext_ln7_41_fu_717_p1;
wire   [2:0] zext_ln7_42_fu_727_p1;
wire   [2:0] add_ln7_12_fu_731_p2;
wire   [3:0] zext_ln7_40_fu_707_p1;
wire   [3:0] zext_ln7_43_fu_737_p1;
wire   [3:0] add_ln7_13_fu_741_p2;
wire   [4:0] zext_ln7_37_fu_677_p1;
wire   [4:0] zext_ln7_44_fu_747_p1;
wire   [1:0] zext_ln7_17_fu_439_p1;
wire   [1:0] zext_ln7_16_fu_427_p1;
wire   [1:0] add_ln7_15_fu_757_p2;
wire   [1:0] zext_ln7_19_fu_463_p1;
wire   [1:0] zext_ln7_18_fu_451_p1;
wire   [1:0] add_ln7_16_fu_767_p2;
wire   [2:0] zext_ln7_46_fu_763_p1;
wire   [2:0] zext_ln7_47_fu_773_p1;
wire   [2:0] add_ln7_17_fu_777_p2;
wire   [1:0] zext_ln7_21_fu_487_p1;
wire   [1:0] zext_ln7_20_fu_475_p1;
wire   [1:0] add_ln7_18_fu_787_p2;
wire   [1:0] zext_ln7_23_fu_511_p1;
wire   [1:0] zext_ln7_22_fu_499_p1;
wire   [1:0] add_ln7_19_fu_797_p2;
wire   [2:0] zext_ln7_49_fu_793_p1;
wire   [2:0] zext_ln7_50_fu_803_p1;
wire   [2:0] add_ln7_20_fu_807_p2;
wire   [3:0] zext_ln7_48_fu_783_p1;
wire   [3:0] zext_ln7_51_fu_813_p1;
wire   [3:0] add_ln7_21_fu_817_p2;
wire   [1:0] zext_ln7_25_fu_535_p1;
wire   [1:0] zext_ln7_24_fu_523_p1;
wire   [1:0] add_ln7_22_fu_827_p2;
wire   [1:0] zext_ln7_27_fu_559_p1;
wire   [1:0] zext_ln7_26_fu_547_p1;
wire   [1:0] add_ln7_23_fu_837_p2;
wire   [2:0] zext_ln7_53_fu_833_p1;
wire   [2:0] zext_ln7_54_fu_843_p1;
wire   [2:0] add_ln7_24_fu_847_p2;
wire   [1:0] zext_ln7_29_fu_583_p1;
wire   [1:0] zext_ln7_28_fu_571_p1;
wire   [1:0] add_ln7_25_fu_857_p2;
wire   [1:0] zext_ln7_61_fu_607_p1;
wire   [1:0] zext_ln7_30_fu_595_p1;
wire   [1:0] add_ln7_26_fu_867_p2;
wire   [2:0] zext_ln7_56_fu_863_p1;
wire   [2:0] zext_ln7_57_fu_873_p1;
wire   [2:0] add_ln7_27_fu_877_p2;
wire   [3:0] zext_ln7_55_fu_853_p1;
wire   [3:0] zext_ln7_58_fu_883_p1;
wire   [3:0] add_ln7_28_fu_887_p2;
wire   [4:0] zext_ln7_52_fu_823_p1;
wire   [4:0] zext_ln7_59_fu_893_p1;
wire   [5:0] zext_ln7_45_fu_903_p1;
wire   [5:0] zext_ln7_60_fu_906_p1;
wire    ap_CS_fsm_state7;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_157 <= i_fu_186_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_157 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ref_num_0_reg_168 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln16_reg_934 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ref_num_0_reg_168 <= ref_num_reg_938;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln16_reg_934 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln7_14_reg_953 <= add_ln7_14_fu_751_p2;
        add_ln7_29_reg_958 <= add_ln7_29_fu_897_p2;
        zext_ln17_2_reg_948[7 : 0] <= zext_ln17_2_fu_230_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln16_reg_934 <= icmp_ln16_fu_200_p2;
        icmp_ln16_reg_934_pp1_iter1_reg <= icmp_ln16_reg_934;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ref_num_reg_938 <= ref_num_fu_206_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln16_reg_929[15 : 0] <= zext_ln16_fu_197_p1[15 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln16_fu_200_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_reg_934 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_ref_num_0_phi_fu_172_p4 = ref_num_reg_938;
    end else begin
        ap_phi_mux_ref_num_0_phi_fu_172_p4 = ref_num_0_reg_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ref_local_ce0 = 1'b1;
    end else begin
        ref_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln16_reg_934 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ref_local_we0 = 1'b1;
    end else begin
        ref_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        refpop_local_address0 = zext_ln17_2_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        refpop_local_address0 = zext_ln14_fu_192_p1;
    end else begin
        refpop_local_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        refpop_local_ce0 = 1'b1;
    end else begin
        refpop_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        refpop_local_d0 = add_ln7_30_fu_909_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        refpop_local_d0 = 6'd0;
    end else begin
        refpop_local_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln16_reg_934_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln13_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        refpop_local_we0 = 1'b1;
    end else begin
        refpop_local_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln13_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln16_fu_200_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln16_fu_200_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_216_p2 = (zext_ln17_fu_212_p1 + zext_ln16_reg_929);

assign add_ln7_10_fu_711_p2 = (zext_ln7_13_fu_391_p1 + zext_ln7_12_fu_379_p1);

assign add_ln7_11_fu_721_p2 = (zext_ln7_15_fu_415_p1 + zext_ln7_14_fu_403_p1);

assign add_ln7_12_fu_731_p2 = (zext_ln7_41_fu_717_p1 + zext_ln7_42_fu_727_p1);

assign add_ln7_13_fu_741_p2 = (zext_ln7_40_fu_707_p1 + zext_ln7_43_fu_737_p1);

assign add_ln7_14_fu_751_p2 = (zext_ln7_37_fu_677_p1 + zext_ln7_44_fu_747_p1);

assign add_ln7_15_fu_757_p2 = (zext_ln7_17_fu_439_p1 + zext_ln7_16_fu_427_p1);

assign add_ln7_16_fu_767_p2 = (zext_ln7_19_fu_463_p1 + zext_ln7_18_fu_451_p1);

assign add_ln7_17_fu_777_p2 = (zext_ln7_46_fu_763_p1 + zext_ln7_47_fu_773_p1);

assign add_ln7_18_fu_787_p2 = (zext_ln7_21_fu_487_p1 + zext_ln7_20_fu_475_p1);

assign add_ln7_19_fu_797_p2 = (zext_ln7_23_fu_511_p1 + zext_ln7_22_fu_499_p1);

assign add_ln7_1_fu_621_p2 = (zext_ln7_3_fu_271_p1 + zext_ln7_2_fu_259_p1);

assign add_ln7_20_fu_807_p2 = (zext_ln7_49_fu_793_p1 + zext_ln7_50_fu_803_p1);

assign add_ln7_21_fu_817_p2 = (zext_ln7_48_fu_783_p1 + zext_ln7_51_fu_813_p1);

assign add_ln7_22_fu_827_p2 = (zext_ln7_25_fu_535_p1 + zext_ln7_24_fu_523_p1);

assign add_ln7_23_fu_837_p2 = (zext_ln7_27_fu_559_p1 + zext_ln7_26_fu_547_p1);

assign add_ln7_24_fu_847_p2 = (zext_ln7_53_fu_833_p1 + zext_ln7_54_fu_843_p1);

assign add_ln7_25_fu_857_p2 = (zext_ln7_29_fu_583_p1 + zext_ln7_28_fu_571_p1);

assign add_ln7_26_fu_867_p2 = (zext_ln7_61_fu_607_p1 + zext_ln7_30_fu_595_p1);

assign add_ln7_27_fu_877_p2 = (zext_ln7_56_fu_863_p1 + zext_ln7_57_fu_873_p1);

assign add_ln7_28_fu_887_p2 = (zext_ln7_55_fu_853_p1 + zext_ln7_58_fu_883_p1);

assign add_ln7_29_fu_897_p2 = (zext_ln7_52_fu_823_p1 + zext_ln7_59_fu_893_p1);

assign add_ln7_2_fu_631_p2 = (zext_ln7_31_fu_617_p1 + zext_ln7_32_fu_627_p1);

assign add_ln7_30_fu_909_p2 = (zext_ln7_45_fu_903_p1 + zext_ln7_60_fu_906_p1);

assign add_ln7_3_fu_641_p2 = (zext_ln7_5_fu_295_p1 + zext_ln7_4_fu_283_p1);

assign add_ln7_4_fu_651_p2 = (zext_ln7_7_fu_319_p1 + zext_ln7_6_fu_307_p1);

assign add_ln7_5_fu_661_p2 = (zext_ln7_34_fu_647_p1 + zext_ln7_35_fu_657_p1);

assign add_ln7_6_fu_671_p2 = (zext_ln7_33_fu_637_p1 + zext_ln7_36_fu_667_p1);

assign add_ln7_7_fu_681_p2 = (zext_ln7_9_fu_343_p1 + zext_ln7_8_fu_331_p1);

assign add_ln7_8_fu_691_p2 = (zext_ln7_11_fu_367_p1 + zext_ln7_10_fu_355_p1);

assign add_ln7_9_fu_701_p2 = (zext_ln7_38_fu_687_p1 + zext_ln7_39_fu_697_p1);

assign add_ln7_fu_611_p2 = (zext_ln7_fu_235_p1 + zext_ln7_1_fu_247_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i_fu_186_p2 = (i_0_reg_157 + 8'd1);

assign icmp_ln13_fu_180_p2 = ((i_0_reg_157 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_200_p2 = ((ap_phi_mux_ref_num_0_phi_fu_172_p4 == 8'd128) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln17_1_fu_221_p1;

assign ref_local_address0 = zext_ln17_2_fu_230_p1;

assign ref_local_d0 = input_r_q0;

assign ref_num_fu_206_p2 = (ap_phi_mux_ref_num_0_phi_fu_172_p4 + 8'd1);

assign tmp_10_fu_359_p3 = input_r_q0[32'd11];

assign tmp_11_fu_371_p3 = input_r_q0[32'd12];

assign tmp_12_fu_383_p3 = input_r_q0[32'd13];

assign tmp_13_fu_395_p3 = input_r_q0[32'd14];

assign tmp_14_fu_407_p3 = input_r_q0[32'd15];

assign tmp_15_fu_419_p3 = input_r_q0[32'd16];

assign tmp_16_fu_431_p3 = input_r_q0[32'd17];

assign tmp_17_fu_443_p3 = input_r_q0[32'd18];

assign tmp_18_fu_455_p3 = input_r_q0[32'd19];

assign tmp_19_fu_467_p3 = input_r_q0[32'd20];

assign tmp_1_fu_251_p3 = input_r_q0[32'd2];

assign tmp_20_fu_479_p3 = input_r_q0[32'd21];

assign tmp_21_fu_491_p3 = input_r_q0[32'd22];

assign tmp_22_fu_503_p3 = input_r_q0[32'd23];

assign tmp_23_fu_515_p3 = input_r_q0[32'd24];

assign tmp_24_fu_527_p3 = input_r_q0[32'd25];

assign tmp_25_fu_539_p3 = input_r_q0[32'd26];

assign tmp_26_fu_551_p3 = input_r_q0[32'd27];

assign tmp_27_fu_563_p3 = input_r_q0[32'd28];

assign tmp_28_fu_575_p3 = input_r_q0[32'd29];

assign tmp_29_fu_587_p3 = input_r_q0[32'd30];

assign tmp_2_fu_263_p3 = input_r_q0[32'd3];

assign tmp_30_fu_599_p3 = input_r_q0[32'd31];

assign tmp_3_fu_275_p3 = input_r_q0[32'd4];

assign tmp_4_fu_287_p3 = input_r_q0[32'd5];

assign tmp_5_fu_299_p3 = input_r_q0[32'd6];

assign tmp_6_fu_311_p3 = input_r_q0[32'd7];

assign tmp_7_fu_323_p3 = input_r_q0[32'd8];

assign tmp_8_fu_335_p3 = input_r_q0[32'd9];

assign tmp_9_fu_347_p3 = input_r_q0[32'd10];

assign tmp_fu_239_p3 = input_r_q0[32'd1];

assign trunc_ln17_fu_226_p1 = input_r_q0[0:0];

assign zext_ln14_fu_192_p1 = i_0_reg_157;

assign zext_ln16_fu_197_p1 = chunk_num;

assign zext_ln17_1_fu_221_p1 = add_ln17_fu_216_p2;

assign zext_ln17_2_fu_230_p1 = ref_num_0_reg_168;

assign zext_ln17_fu_212_p1 = ap_phi_mux_ref_num_0_phi_fu_172_p4;

assign zext_ln7_10_fu_355_p1 = tmp_9_fu_347_p3;

assign zext_ln7_11_fu_367_p1 = tmp_10_fu_359_p3;

assign zext_ln7_12_fu_379_p1 = tmp_11_fu_371_p3;

assign zext_ln7_13_fu_391_p1 = tmp_12_fu_383_p3;

assign zext_ln7_14_fu_403_p1 = tmp_13_fu_395_p3;

assign zext_ln7_15_fu_415_p1 = tmp_14_fu_407_p3;

assign zext_ln7_16_fu_427_p1 = tmp_15_fu_419_p3;

assign zext_ln7_17_fu_439_p1 = tmp_16_fu_431_p3;

assign zext_ln7_18_fu_451_p1 = tmp_17_fu_443_p3;

assign zext_ln7_19_fu_463_p1 = tmp_18_fu_455_p3;

assign zext_ln7_1_fu_247_p1 = tmp_fu_239_p3;

assign zext_ln7_20_fu_475_p1 = tmp_19_fu_467_p3;

assign zext_ln7_21_fu_487_p1 = tmp_20_fu_479_p3;

assign zext_ln7_22_fu_499_p1 = tmp_21_fu_491_p3;

assign zext_ln7_23_fu_511_p1 = tmp_22_fu_503_p3;

assign zext_ln7_24_fu_523_p1 = tmp_23_fu_515_p3;

assign zext_ln7_25_fu_535_p1 = tmp_24_fu_527_p3;

assign zext_ln7_26_fu_547_p1 = tmp_25_fu_539_p3;

assign zext_ln7_27_fu_559_p1 = tmp_26_fu_551_p3;

assign zext_ln7_28_fu_571_p1 = tmp_27_fu_563_p3;

assign zext_ln7_29_fu_583_p1 = tmp_28_fu_575_p3;

assign zext_ln7_2_fu_259_p1 = tmp_1_fu_251_p3;

assign zext_ln7_30_fu_595_p1 = tmp_29_fu_587_p3;

assign zext_ln7_31_fu_617_p1 = add_ln7_fu_611_p2;

assign zext_ln7_32_fu_627_p1 = add_ln7_1_fu_621_p2;

assign zext_ln7_33_fu_637_p1 = add_ln7_2_fu_631_p2;

assign zext_ln7_34_fu_647_p1 = add_ln7_3_fu_641_p2;

assign zext_ln7_35_fu_657_p1 = add_ln7_4_fu_651_p2;

assign zext_ln7_36_fu_667_p1 = add_ln7_5_fu_661_p2;

assign zext_ln7_37_fu_677_p1 = add_ln7_6_fu_671_p2;

assign zext_ln7_38_fu_687_p1 = add_ln7_7_fu_681_p2;

assign zext_ln7_39_fu_697_p1 = add_ln7_8_fu_691_p2;

assign zext_ln7_3_fu_271_p1 = tmp_2_fu_263_p3;

assign zext_ln7_40_fu_707_p1 = add_ln7_9_fu_701_p2;

assign zext_ln7_41_fu_717_p1 = add_ln7_10_fu_711_p2;

assign zext_ln7_42_fu_727_p1 = add_ln7_11_fu_721_p2;

assign zext_ln7_43_fu_737_p1 = add_ln7_12_fu_731_p2;

assign zext_ln7_44_fu_747_p1 = add_ln7_13_fu_741_p2;

assign zext_ln7_45_fu_903_p1 = add_ln7_14_reg_953;

assign zext_ln7_46_fu_763_p1 = add_ln7_15_fu_757_p2;

assign zext_ln7_47_fu_773_p1 = add_ln7_16_fu_767_p2;

assign zext_ln7_48_fu_783_p1 = add_ln7_17_fu_777_p2;

assign zext_ln7_49_fu_793_p1 = add_ln7_18_fu_787_p2;

assign zext_ln7_4_fu_283_p1 = tmp_3_fu_275_p3;

assign zext_ln7_50_fu_803_p1 = add_ln7_19_fu_797_p2;

assign zext_ln7_51_fu_813_p1 = add_ln7_20_fu_807_p2;

assign zext_ln7_52_fu_823_p1 = add_ln7_21_fu_817_p2;

assign zext_ln7_53_fu_833_p1 = add_ln7_22_fu_827_p2;

assign zext_ln7_54_fu_843_p1 = add_ln7_23_fu_837_p2;

assign zext_ln7_55_fu_853_p1 = add_ln7_24_fu_847_p2;

assign zext_ln7_56_fu_863_p1 = add_ln7_25_fu_857_p2;

assign zext_ln7_57_fu_873_p1 = add_ln7_26_fu_867_p2;

assign zext_ln7_58_fu_883_p1 = add_ln7_27_fu_877_p2;

assign zext_ln7_59_fu_893_p1 = add_ln7_28_fu_887_p2;

assign zext_ln7_5_fu_295_p1 = tmp_4_fu_287_p3;

assign zext_ln7_60_fu_906_p1 = add_ln7_29_reg_958;

assign zext_ln7_61_fu_607_p1 = tmp_30_fu_599_p3;

assign zext_ln7_6_fu_307_p1 = tmp_5_fu_299_p3;

assign zext_ln7_7_fu_319_p1 = tmp_6_fu_311_p3;

assign zext_ln7_8_fu_331_p1 = tmp_7_fu_323_p3;

assign zext_ln7_9_fu_343_p1 = tmp_8_fu_335_p3;

assign zext_ln7_fu_235_p1 = trunc_ln17_fu_226_p1;

always @ (posedge ap_clk) begin
    zext_ln16_reg_929[16] <= 1'b0;
    zext_ln17_2_reg_948[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //tancalc_ref_read
