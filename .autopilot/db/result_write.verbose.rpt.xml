<profile>

<section name = "Vivado HLS Report for 'result_write'" level="0">
<item name = "Date">Thu Nov  7 01:38:18 2019
</item>
<item name = "Version">2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)</item>
<item name = "Project">tancoeff</item>
<item name = "Solution">tancoeff</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcvu9p-fsgd2104-2L-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing (ns)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">3.33, 2.433, 0.90</column>
</table>
</item>
</section>
</item>
<item name = "Latency (clock cycles)">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">, min, max, min, max, Type</keys>
<column name="">7, 7, 7, 7, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="7">Instance, Module, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 91, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 107, -</column>
<column name="Register">-, -, 69, -, -</column>
<specialColumn name="Available SLR">1440, 2280, 788160, 394080, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">0, 0, ~0, ~0, 0</specialColumn>
<specialColumn name="Available">4320, 6840, 2364480, 1182240, 960</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP48E, FF, LUT, URAM</keys>
</table>
</item>
<item name = "DSP48E"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP48E, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln332_fu_230_p2">+, 0, 0, 59, 59, 59</column>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_10_fu_296_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_11_fu_302_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_12_fu_308_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_13_fu_314_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_14_fu_320_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_1_fu_242_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_2_fu_248_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_3_fu_254_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_4_fu_260_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_5_fu_266_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_6_fu_272_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_7_fu_278_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_8_fu_284_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_9_fu_290_p2">or, 0, 0, 2, 1, 1</column>
<column name="or_ln66_fu_236_p2">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">44, 9, 1, 9</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="cmpr_chunk_num_0_i_c_blk_n">9, 2, 1, 2</column>
<column name="data_num_0_i_c1_blk_n">9, 2, 1, 2</column>
<column name="output_V_blk_n_AW">9, 2, 1, 2</column>
<column name="output_V_blk_n_B">9, 2, 1, 2</column>
<column name="output_V_blk_n_W">9, 2, 1, 2</column>
<column name="output_V_offset_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="add_ln332_reg_340">59, 0, 59, 0</column>
<column name="ap_CS_fsm">8, 0, 8, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="or_ln66_14_reg_345">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, result_write, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, result_write, return value</column>
<column name="m_axi_output_V_AWVALID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWREADY">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWADDR">out, 64, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWLEN">out, 32, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWSIZE">out, 3, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWBURST">out, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWLOCK">out, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWCACHE">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWPROT">out, 3, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWQOS">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWREGION">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_AWUSER">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WVALID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WREADY">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WDATA">out, 512, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WSTRB">out, 64, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WLAST">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_WUSER">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARVALID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARREADY">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARADDR">out, 64, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARID">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARLEN">out, 32, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARSIZE">out, 3, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARBURST">out, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARLOCK">out, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARCACHE">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARPROT">out, 3, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARQOS">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARREGION">out, 4, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_ARUSER">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RVALID">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RREADY">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RDATA">in, 512, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RLAST">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RID">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RUSER">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_RRESP">in, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_BVALID">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_BREADY">out, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_BRESP">in, 2, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_BID">in, 1, m_axi, output_V, pointer</column>
<column name="m_axi_output_V_BUSER">in, 1, m_axi, output_V, pointer</column>
<column name="output_V_offset_dout">in, 58, ap_fifo, output_V_offset, pointer</column>
<column name="output_V_offset_empty_n">in, 1, ap_fifo, output_V_offset, pointer</column>
<column name="output_V_offset_read">out, 1, ap_fifo, output_V_offset, pointer</column>
<column name="result_local_0_V_read_2">in, 1, ap_none, result_local_0_V_read_2, scalar</column>
<column name="result_local_1_V_read_2">in, 1, ap_none, result_local_1_V_read_2, scalar</column>
<column name="result_local_2_V_read_2">in, 1, ap_none, result_local_2_V_read_2, scalar</column>
<column name="result_local_3_V_read_2">in, 1, ap_none, result_local_3_V_read_2, scalar</column>
<column name="result_local_4_V_read_2">in, 1, ap_none, result_local_4_V_read_2, scalar</column>
<column name="result_local_5_V_read_2">in, 1, ap_none, result_local_5_V_read_2, scalar</column>
<column name="result_local_6_V_read_2">in, 1, ap_none, result_local_6_V_read_2, scalar</column>
<column name="result_local_7_V_read_2">in, 1, ap_none, result_local_7_V_read_2, scalar</column>
<column name="result_local_8_V_read_2">in, 1, ap_none, result_local_8_V_read_2, scalar</column>
<column name="result_local_9_V_read_2">in, 1, ap_none, result_local_9_V_read_2, scalar</column>
<column name="result_local_10_V_read_2">in, 1, ap_none, result_local_10_V_read_2, scalar</column>
<column name="result_local_11_V_read_2">in, 1, ap_none, result_local_11_V_read_2, scalar</column>
<column name="result_local_12_V_read_2">in, 1, ap_none, result_local_12_V_read_2, scalar</column>
<column name="result_local_13_V_read_2">in, 1, ap_none, result_local_13_V_read_2, scalar</column>
<column name="result_local_14_V_read_2">in, 1, ap_none, result_local_14_V_read_2, scalar</column>
<column name="result_local_15_V_read_2">in, 1, ap_none, result_local_15_V_read_2, scalar</column>
<column name="cmpr_chunk_num_0_i_c_dout">in, 2, ap_fifo, cmpr_chunk_num_0_i_c, pointer</column>
<column name="cmpr_chunk_num_0_i_c_empty_n">in, 1, ap_fifo, cmpr_chunk_num_0_i_c, pointer</column>
<column name="cmpr_chunk_num_0_i_c_read">out, 1, ap_fifo, cmpr_chunk_num_0_i_c, pointer</column>
<column name="data_num_0_i_c1_dout">in, 6, ap_fifo, data_num_0_i_c1, pointer</column>
<column name="data_num_0_i_c1_empty_n">in, 1, ap_fifo, data_num_0_i_c1, pointer</column>
<column name="data_num_0_i_c1_read">out, 1, ap_fifo, data_num_0_i_c1, pointer</column>
</table>
</item>
</section>
</profile>
