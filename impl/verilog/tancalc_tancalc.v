// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tancalc_tancalc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-fsgd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=753,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=0,HLS_SYN_FF=22493,HLS_SYN_LUT=58016,HLS_VERSION=2019_1}" *)

module tancalc_tancalc (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        output_V_TDATA,
        output_V_TVALID,
        output_V_TREADY,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_pp0_stage0 = 14'd512;
parameter    ap_ST_fsm_state15 = 14'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 14'd4096;
parameter    ap_ST_fsm_state32 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output  [511:0] output_V_TDATA;
output   output_V_TVALID;
input   output_V_TREADY;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_V;
reg   [511:0] output_V_1_data_out;
reg    output_V_1_vld_in;
wire    output_V_1_vld_out;
wire    output_V_1_ack_in;
wire    output_V_1_ack_out;
reg   [511:0] output_V_1_payload_A;
reg   [511:0] output_V_1_payload_B;
reg    output_V_1_sel_rd;
reg    output_V_1_sel_wr;
wire    output_V_1_sel;
wire    output_V_1_load_A;
wire    output_V_1_load_B;
reg   [1:0] output_V_1_state;
wire    output_V_1_state_cmp_full;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln95_reg_1967;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter3_reg;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter4_reg;
reg    output_V_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter6_reg;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter7_reg;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg   [5:0] data_part_num_0_i24_reg_342;
reg   [6:0] data_num_assign_reg_353;
wire   [10:0] grp_popcntdata_fu_364_ap_return;
reg   [10:0] reg_409;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_state16_pp1_stage0_iter0;
wire    ap_block_state18_pp1_stage0_iter1;
reg    ap_block_state18_io;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state22_pp1_stage0_iter3;
reg    ap_block_state24_pp1_stage0_iter4;
wire    ap_block_state26_pp1_stage0_iter5;
wire    ap_block_state28_pp1_stage0_iter6;
wire    ap_block_state30_pp1_stage0_iter7;
reg    ap_block_state30_io;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter5_reg;
wire    ap_block_state17_pp1_stage1_iter0;
reg    ap_block_state17_io;
wire    ap_block_state19_pp1_stage1_iter1;
wire    ap_block_state21_pp1_stage1_iter2;
wire    ap_block_state23_pp1_stage1_iter3;
reg    ap_block_state25_pp1_stage1_iter4;
wire    ap_block_state27_pp1_stage1_iter5;
wire    ap_block_state29_pp1_stage1_iter6;
wire    ap_block_state31_pp1_stage1_iter7;
reg    ap_block_state31_io;
reg    ap_block_pp1_stage1_11001;
wire   [10:0] grp_popcntdata_fu_369_ap_return;
reg   [10:0] reg_413;
wire   [10:0] grp_popcntdata_fu_374_ap_return;
reg   [10:0] reg_417;
wire   [10:0] grp_popcntdata_fu_379_ap_return;
reg   [10:0] reg_421;
wire   [10:0] grp_popcntdata_fu_384_ap_return;
reg   [10:0] reg_425;
wire   [10:0] grp_popcntdata_fu_389_ap_return;
reg   [10:0] reg_429;
wire   [10:0] grp_popcntdata_fu_394_ap_return;
reg   [10:0] reg_433;
wire   [10:0] grp_popcntdata_fu_399_ap_return;
reg   [10:0] reg_437;
wire   [58:0] p_cast_fu_451_p1;
reg   [58:0] p_cast_reg_1833;
wire   [2:0] cmpr_chunk_num_fu_461_p2;
reg   [2:0] cmpr_chunk_num_reg_1843;
wire    ap_CS_fsm_state2;
reg    ap_block_state2;
wire   [58:0] add_ln219_fu_485_p2;
reg   [58:0] add_ln219_reg_1848;
wire   [0:0] icmp_ln92_fu_455_p2;
wire   [0:0] icmp_ln27_fu_500_p2;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] data_part_num_fu_506_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] trunc_ln29_1_reg_1868;
reg   [3:0] trunc_ln29_1_reg_1868_pp0_iter1_reg;
reg   [3:0] trunc_ln29_1_reg_1868_pp0_iter2_reg;
reg   [3:0] trunc_ln29_1_reg_1868_pp0_iter3_reg;
wire   [0:0] trunc_ln30_fu_522_p1;
reg   [0:0] trunc_ln30_reg_1872;
reg   [0:0] trunc_ln30_reg_1872_pp0_iter1_reg;
reg   [511:0] temp_input_V_reg_1877;
wire   [511:0] trunc_ln364_fu_652_p1;
reg   [511:0] trunc_ln364_reg_1882;
wire   [11:0] zext_ln215_1_fu_788_p1;
reg   [11:0] zext_ln215_1_reg_1887;
wire    ap_CS_fsm_state15;
wire   [11:0] zext_ln215_4_fu_792_p1;
reg   [11:0] zext_ln215_4_reg_1892;
wire   [11:0] zext_ln215_7_fu_796_p1;
reg   [11:0] zext_ln215_7_reg_1897;
wire   [11:0] zext_ln215_10_fu_800_p1;
reg   [11:0] zext_ln215_10_reg_1902;
wire   [11:0] zext_ln215_13_fu_804_p1;
reg   [11:0] zext_ln215_13_reg_1907;
wire   [11:0] zext_ln215_16_fu_808_p1;
reg   [11:0] zext_ln215_16_reg_1912;
wire   [11:0] zext_ln215_19_fu_812_p1;
reg   [11:0] zext_ln215_19_reg_1917;
wire   [11:0] zext_ln215_22_fu_816_p1;
reg   [11:0] zext_ln215_22_reg_1922;
wire   [11:0] zext_ln215_25_fu_820_p1;
reg   [11:0] zext_ln215_25_reg_1927;
wire   [11:0] zext_ln215_28_fu_824_p1;
reg   [11:0] zext_ln215_28_reg_1932;
wire   [11:0] zext_ln215_31_fu_828_p1;
reg   [11:0] zext_ln215_31_reg_1937;
wire   [11:0] zext_ln215_34_fu_832_p1;
reg   [11:0] zext_ln215_34_reg_1942;
wire   [11:0] zext_ln215_37_fu_836_p1;
reg   [11:0] zext_ln215_37_reg_1947;
wire   [11:0] zext_ln215_40_fu_840_p1;
reg   [11:0] zext_ln215_40_reg_1952;
wire   [11:0] zext_ln215_43_fu_844_p1;
reg   [11:0] zext_ln215_43_reg_1957;
wire   [11:0] zext_ln215_46_fu_848_p1;
reg   [11:0] zext_ln215_46_reg_1962;
wire   [0:0] icmp_ln95_fu_852_p2;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter1_reg;
reg   [0:0] icmp_ln95_reg_1967_pp1_iter2_reg;
wire   [6:0] data_num_fu_858_p2;
reg   [6:0] data_num_reg_1971;
wire   [6:0] shl_ln98_fu_864_p2;
reg   [6:0] shl_ln98_reg_1976;
wire   [58:0] add_ln219_1_fu_874_p2;
reg   [58:0] add_ln219_1_reg_1981;
wire   [58:0] add_ln219_2_fu_898_p2;
reg   [58:0] add_ln219_2_reg_1992;
reg   [511:0] gmem0_addr_2_read_reg_2003;
wire   [1023:0] ref_local_0_V_fu_937_p3;
reg   [1023:0] ref_local_0_V_reg_2009;
wire   [1023:0] and_ln1355_fu_944_p2;
reg   [1023:0] and_ln1355_reg_2021;
wire   [1023:0] and_ln1355_1_fu_950_p2;
reg   [1023:0] and_ln1355_1_reg_2026;
wire   [1023:0] and_ln1355_2_fu_956_p2;
reg   [1023:0] and_ln1355_2_reg_2031;
wire   [1023:0] and_ln1355_3_fu_962_p2;
reg   [1023:0] and_ln1355_3_reg_2036;
wire   [1023:0] and_ln1355_4_fu_968_p2;
reg   [1023:0] and_ln1355_4_reg_2041;
wire   [1023:0] and_ln1355_5_fu_974_p2;
reg   [1023:0] and_ln1355_5_reg_2046;
wire   [1023:0] and_ln1355_6_fu_980_p2;
reg   [1023:0] and_ln1355_6_reg_2051;
wire   [1023:0] and_ln1355_7_fu_986_p2;
reg   [1023:0] and_ln1355_7_reg_2056;
wire   [9:0] grp_popcnt_fu_404_ap_return;
reg   [9:0] refpop_local_0_V_reg_2061;
reg    ap_enable_reg_pp1_iter5;
wire   [1023:0] and_ln1355_8_fu_1016_p2;
reg   [1023:0] and_ln1355_8_reg_2066;
wire   [1023:0] and_ln1355_9_fu_1021_p2;
reg   [1023:0] and_ln1355_9_reg_2071;
wire   [1023:0] and_ln1355_10_fu_1026_p2;
reg   [1023:0] and_ln1355_10_reg_2076;
wire   [1023:0] and_ln1355_11_fu_1031_p2;
reg   [1023:0] and_ln1355_11_reg_2081;
wire   [1023:0] and_ln1355_12_fu_1036_p2;
reg   [1023:0] and_ln1355_12_reg_2086;
wire   [1023:0] and_ln1355_13_fu_1041_p2;
reg   [1023:0] and_ln1355_13_reg_2091;
wire   [1023:0] and_ln1355_14_fu_1046_p2;
reg   [1023:0] and_ln1355_14_reg_2096;
wire   [1023:0] and_ln1355_15_fu_1051_p2;
reg   [1023:0] and_ln1355_15_reg_2101;
wire   [11:0] zext_ln215_fu_1056_p1;
reg   [11:0] zext_ln215_reg_2106;
wire   [0:0] or_ln66_6_fu_1343_p2;
reg   [0:0] or_ln66_6_reg_2118;
wire   [511:0] zext_ln295_fu_1636_p1;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state16;
reg    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [1023:0] grp_popcntdata_fu_364_x_V;
reg    grp_popcntdata_fu_364_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call36;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call36;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call36;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call36;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call36;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call36;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call36;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call36;
reg    ap_block_pp1_stage1_11001_ignoreCallOp280;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call36;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call36;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call36;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call36;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call36;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call36;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call36;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call36;
reg    ap_block_pp1_stage0_11001_ignoreCallOp296;
reg   [1023:0] grp_popcntdata_fu_369_x_V;
reg    grp_popcntdata_fu_369_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call43;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call43;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call43;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call43;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call43;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call43;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call43;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call43;
reg    ap_block_pp1_stage1_11001_ignoreCallOp281;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call43;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call43;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call43;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call43;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call43;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call43;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call43;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call43;
reg    ap_block_pp1_stage0_11001_ignoreCallOp297;
reg   [1023:0] grp_popcntdata_fu_374_x_V;
reg    grp_popcntdata_fu_374_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call49;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call49;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call49;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call49;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call49;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call49;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call49;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call49;
reg    ap_block_pp1_stage1_11001_ignoreCallOp282;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call49;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call49;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call49;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call49;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call49;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call49;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call49;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call49;
reg    ap_block_pp1_stage0_11001_ignoreCallOp298;
reg   [1023:0] grp_popcntdata_fu_379_x_V;
reg    grp_popcntdata_fu_379_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call57;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call57;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call57;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call57;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call57;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call57;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call57;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call57;
reg    ap_block_pp1_stage1_11001_ignoreCallOp283;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call57;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call57;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call57;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call57;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call57;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call57;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call57;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call57;
reg    ap_block_pp1_stage0_11001_ignoreCallOp299;
reg   [1023:0] grp_popcntdata_fu_384_x_V;
reg    grp_popcntdata_fu_384_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call65;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call65;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call65;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call65;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call65;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call65;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call65;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call65;
reg    ap_block_pp1_stage1_11001_ignoreCallOp284;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call65;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call65;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call65;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call65;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call65;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call65;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call65;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call65;
reg    ap_block_pp1_stage0_11001_ignoreCallOp300;
reg   [1023:0] grp_popcntdata_fu_389_x_V;
reg    grp_popcntdata_fu_389_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call73;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call73;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call73;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call73;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call73;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call73;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call73;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call73;
reg    ap_block_pp1_stage1_11001_ignoreCallOp285;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call73;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call73;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call73;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call73;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call73;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call73;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call73;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call73;
reg    ap_block_pp1_stage0_11001_ignoreCallOp301;
reg   [1023:0] grp_popcntdata_fu_394_x_V;
reg    grp_popcntdata_fu_394_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call81;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call81;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call81;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call81;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call81;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call81;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call81;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call81;
reg    ap_block_pp1_stage1_11001_ignoreCallOp286;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call81;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call81;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call81;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call81;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call81;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call81;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call81;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call81;
reg    ap_block_pp1_stage0_11001_ignoreCallOp302;
reg   [1023:0] grp_popcntdata_fu_399_x_V;
reg    grp_popcntdata_fu_399_ap_ce;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call89;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call89;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call89;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call89;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call89;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call89;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call89;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call89;
reg    ap_block_pp1_stage1_11001_ignoreCallOp287;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call89;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call89;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call89;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call89;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call89;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call89;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call89;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call89;
reg    ap_block_pp1_stage0_11001_ignoreCallOp303;
reg   [511:0] grp_popcnt_fu_404_x_V;
reg    grp_popcnt_fu_404_ap_ce;
wire    ap_block_state10_pp0_stage0_iter0_ignore_call6;
reg    ap_block_state11_pp0_stage0_iter1_ignore_call6;
wire    ap_block_state12_pp0_stage0_iter2_ignore_call6;
wire    ap_block_state13_pp0_stage0_iter3_ignore_call6;
wire    ap_block_state14_pp0_stage0_iter4_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp152;
wire    ap_block_state16_pp1_stage0_iter0_ignore_call34;
wire    ap_block_state18_pp1_stage0_iter1_ignore_call34;
wire    ap_block_state20_pp1_stage0_iter2_ignore_call34;
wire    ap_block_state22_pp1_stage0_iter3_ignore_call34;
reg    ap_block_state24_pp1_stage0_iter4_ignore_call34;
wire    ap_block_state26_pp1_stage0_iter5_ignore_call34;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call34;
wire    ap_block_state30_pp1_stage0_iter7_ignore_call34;
reg    ap_block_pp1_stage0_11001_ignoreCallOp262;
wire    ap_block_state17_pp1_stage1_iter0_ignore_call34;
wire    ap_block_state19_pp1_stage1_iter1_ignore_call34;
wire    ap_block_state21_pp1_stage1_iter2_ignore_call34;
wire    ap_block_state23_pp1_stage1_iter3_ignore_call34;
reg    ap_block_state25_pp1_stage1_iter4_ignore_call34;
wire    ap_block_state27_pp1_stage1_iter5_ignore_call34;
wire    ap_block_state29_pp1_stage1_iter6_ignore_call34;
wire    ap_block_state31_pp1_stage1_iter7_ignore_call34;
reg    ap_block_pp1_stage1_11001_ignoreCallOp279;
reg   [2:0] cmpr_chunk_num_assign_reg_331;
wire    ap_CS_fsm_state32;
reg   [6:0] ap_phi_mux_data_num_assign_phi_fu_357_p4;
wire   [63:0] zext_ln219_1_fu_490_p1;
wire   [63:0] zext_ln219_3_fu_879_p1;
wire   [63:0] zext_ln219_5_fu_903_p1;
reg   [1023:0] cmpr_local_15_V_fu_154;
wire   [1023:0] cmpr_local_0_V_fu_539_p3;
reg   [1023:0] cmpr_local_15_V_1_fu_158;
reg   [1023:0] cmpr_local_15_V_2_fu_162;
reg   [1023:0] cmpr_local_15_V_3_fu_166;
reg   [1023:0] cmpr_local_15_V_4_fu_170;
reg   [1023:0] cmpr_local_15_V_5_fu_174;
reg   [1023:0] cmpr_local_15_V_6_fu_178;
reg   [1023:0] cmpr_local_15_V_7_fu_182;
reg   [1023:0] cmpr_local_15_V_8_fu_186;
reg   [1023:0] cmpr_local_15_V_9_fu_190;
reg   [1023:0] cmpr_local_15_V_10_fu_194;
reg   [1023:0] cmpr_local_15_V_11_fu_198;
reg   [1023:0] cmpr_local_15_V_12_fu_202;
reg   [1023:0] cmpr_local_15_V_13_fu_206;
reg   [1023:0] cmpr_local_15_V_14_fu_210;
reg   [1023:0] cmpr_local_15_V_15_fu_214;
reg   [10:0] cmprpop_local_15_V_fu_218;
wire   [10:0] cmprpop_local_0_V_2_fu_656_p1;
reg   [10:0] cmprpop_local_15_V_1_fu_222;
reg   [10:0] cmprpop_local_15_V_2_fu_226;
reg   [10:0] cmprpop_local_15_V_3_fu_230;
reg   [10:0] cmprpop_local_15_V_4_fu_234;
reg   [10:0] cmprpop_local_15_V_5_fu_238;
reg   [10:0] cmprpop_local_15_V_6_fu_242;
reg   [10:0] cmprpop_local_15_V_7_fu_246;
reg   [10:0] cmprpop_local_15_V_8_fu_250;
reg   [10:0] cmprpop_local_15_V_9_fu_254;
reg   [10:0] cmprpop_local_15_V_10_fu_258;
reg   [10:0] cmprpop_local_15_V_11_fu_262;
reg   [10:0] cmprpop_local_15_V_12_fu_266;
reg   [10:0] cmprpop_local_15_V_13_fu_270;
reg   [10:0] cmprpop_local_15_V_14_fu_274;
reg   [10:0] cmprpop_local_15_V_15_fu_278;
reg    ap_block_pp1_stage0_01001;
wire   [57:0] tmp_3_fu_441_p4;
wire   [1:0] trunc_ln93_fu_467_p1;
wire   [7:0] or_ln_fu_471_p4;
wire   [58:0] zext_ln219_fu_481_p1;
wire   [9:0] shl_ln1_fu_526_p3;
wire   [9:0] num_hi_fu_533_p2;
wire   [10:0] zext_ln647_fu_626_p1;
wire   [10:0] xor_ln647_fu_630_p2;
wire   [1023:0] zext_ln647_1_fu_636_p1;
wire   [1023:0] lshr_ln647_fu_640_p2;
wire   [1023:0] p_Result_s_fu_646_p2;
wire   [58:0] zext_ln219_2_fu_870_p1;
wire   [6:0] or_ln32_fu_889_p2;
wire   [58:0] zext_ln219_4_fu_894_p1;
wire   [11:0] add_ln1353_fu_1059_p2;
wire   [12:0] zext_ln215_2_fu_1064_p1;
wire   [12:0] zext_ln215_3_fu_1068_p1;
wire   [11:0] add_ln1353_1_fu_1078_p2;
wire   [12:0] zext_ln215_5_fu_1083_p1;
wire   [12:0] zext_ln215_6_fu_1087_p1;
wire   [11:0] add_ln1353_2_fu_1097_p2;
wire   [12:0] zext_ln215_8_fu_1102_p1;
wire   [12:0] zext_ln215_9_fu_1106_p1;
wire   [12:0] sub_ln1354_2_fu_1110_p2;
wire   [0:0] icmp_ln54_fu_1116_p2;
wire   [11:0] add_ln1353_3_fu_1128_p2;
wire   [12:0] zext_ln215_11_fu_1133_p1;
wire   [12:0] zext_ln215_12_fu_1137_p1;
wire   [12:0] sub_ln1354_3_fu_1141_p2;
wire   [0:0] icmp_ln54_1_fu_1147_p2;
wire   [11:0] add_ln1353_4_fu_1159_p2;
wire   [12:0] zext_ln215_14_fu_1164_p1;
wire   [12:0] zext_ln215_15_fu_1168_p1;
wire   [12:0] sub_ln1354_4_fu_1172_p2;
wire   [0:0] icmp_ln54_2_fu_1178_p2;
wire   [11:0] add_ln1353_5_fu_1190_p2;
wire   [12:0] zext_ln215_17_fu_1195_p1;
wire   [12:0] zext_ln215_18_fu_1199_p1;
wire   [12:0] sub_ln1354_5_fu_1203_p2;
wire   [0:0] icmp_ln54_3_fu_1209_p2;
wire   [11:0] add_ln1353_6_fu_1221_p2;
wire   [12:0] zext_ln215_20_fu_1226_p1;
wire   [12:0] zext_ln215_21_fu_1230_p1;
wire   [12:0] sub_ln1354_6_fu_1234_p2;
wire   [0:0] icmp_ln54_4_fu_1240_p2;
wire   [11:0] add_ln1353_7_fu_1252_p2;
wire   [12:0] zext_ln215_23_fu_1257_p1;
wire   [12:0] zext_ln215_24_fu_1261_p1;
wire   [12:0] sub_ln1354_7_fu_1265_p2;
wire   [0:0] icmp_ln54_5_fu_1271_p2;
wire   [12:0] sub_ln1354_fu_1072_p2;
wire   [0:0] icmp_ln54_13_fu_1283_p2;
wire   [12:0] sub_ln1354_1_fu_1091_p2;
wire   [0:0] icmp_ln54_14_fu_1295_p2;
wire   [0:0] xor_ln54_13_fu_1289_p2;
wire   [0:0] xor_ln54_14_fu_1301_p2;
wire   [0:0] xor_ln54_fu_1122_p2;
wire   [0:0] xor_ln54_1_fu_1153_p2;
wire   [0:0] or_ln66_1_fu_1313_p2;
wire   [0:0] or_ln66_fu_1307_p2;
wire   [0:0] xor_ln54_2_fu_1184_p2;
wire   [0:0] xor_ln54_3_fu_1215_p2;
wire   [0:0] xor_ln54_4_fu_1246_p2;
wire   [0:0] xor_ln54_5_fu_1277_p2;
wire   [0:0] or_ln66_4_fu_1331_p2;
wire   [0:0] or_ln66_3_fu_1325_p2;
wire   [0:0] or_ln66_5_fu_1337_p2;
wire   [0:0] or_ln66_2_fu_1319_p2;
wire   [11:0] add_ln1353_8_fu_1349_p2;
wire   [12:0] zext_ln215_26_fu_1353_p1;
wire   [12:0] zext_ln215_27_fu_1357_p1;
wire   [12:0] sub_ln1354_8_fu_1361_p2;
wire   [0:0] icmp_ln54_6_fu_1367_p2;
wire   [11:0] add_ln1353_9_fu_1379_p2;
wire   [12:0] zext_ln215_29_fu_1383_p1;
wire   [12:0] zext_ln215_30_fu_1387_p1;
wire   [12:0] sub_ln1354_9_fu_1391_p2;
wire   [0:0] icmp_ln54_7_fu_1397_p2;
wire   [11:0] add_ln1353_10_fu_1409_p2;
wire   [12:0] zext_ln215_32_fu_1413_p1;
wire   [12:0] zext_ln215_33_fu_1417_p1;
wire   [12:0] sub_ln1354_10_fu_1421_p2;
wire   [0:0] icmp_ln54_8_fu_1427_p2;
wire   [11:0] add_ln1353_11_fu_1439_p2;
wire   [12:0] zext_ln215_35_fu_1443_p1;
wire   [12:0] zext_ln215_36_fu_1447_p1;
wire   [12:0] sub_ln1354_11_fu_1451_p2;
wire   [0:0] icmp_ln54_9_fu_1457_p2;
wire   [11:0] add_ln1353_12_fu_1469_p2;
wire   [12:0] zext_ln215_38_fu_1473_p1;
wire   [12:0] zext_ln215_39_fu_1477_p1;
wire   [12:0] sub_ln1354_12_fu_1481_p2;
wire   [0:0] icmp_ln54_10_fu_1487_p2;
wire   [11:0] add_ln1353_13_fu_1499_p2;
wire   [12:0] zext_ln215_41_fu_1503_p1;
wire   [12:0] zext_ln215_42_fu_1507_p1;
wire   [12:0] sub_ln1354_13_fu_1511_p2;
wire   [0:0] icmp_ln54_11_fu_1517_p2;
wire   [11:0] add_ln1353_14_fu_1529_p2;
wire   [12:0] zext_ln215_44_fu_1533_p1;
wire   [12:0] zext_ln215_45_fu_1537_p1;
wire   [12:0] sub_ln1354_14_fu_1541_p2;
wire   [0:0] icmp_ln54_12_fu_1547_p2;
wire   [11:0] add_ln1353_15_fu_1559_p2;
wire   [12:0] zext_ln215_47_fu_1563_p1;
wire   [12:0] zext_ln215_48_fu_1567_p1;
wire   [12:0] sub_ln1354_15_fu_1571_p2;
wire   [0:0] icmp_ln66_fu_1577_p2;
wire   [0:0] xor_ln54_6_fu_1373_p2;
wire   [0:0] xor_ln54_7_fu_1403_p2;
wire   [0:0] xor_ln54_8_fu_1433_p2;
wire   [0:0] xor_ln54_9_fu_1463_p2;
wire   [0:0] or_ln66_8_fu_1595_p2;
wire   [0:0] or_ln66_7_fu_1589_p2;
wire   [0:0] xor_ln54_10_fu_1493_p2;
wire   [0:0] xor_ln54_11_fu_1523_p2;
wire   [0:0] xor_ln66_fu_1583_p2;
wire   [0:0] xor_ln54_12_fu_1553_p2;
wire   [0:0] or_ln66_11_fu_1613_p2;
wire   [0:0] or_ln66_10_fu_1607_p2;
wire   [0:0] or_ln66_12_fu_1619_p2;
wire   [0:0] or_ln66_9_fu_1601_p2;
wire   [0:0] or_ln66_13_fu_1625_p2;
wire   [0:0] or_ln66_14_fu_1631_p2;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_925;
reg    ap_condition_927;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 14'd1;
#0 output_V_1_sel_rd = 1'b0;
#0 output_V_1_sel_wr = 1'b0;
#0 output_V_1_state = 2'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

tancalc_tancalc_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
tancalc_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_V(input_V)
);

tancalc_tancalc_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
tancalc_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem0_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

tancalc_popcntdata grp_popcntdata_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_364_x_V),
    .ap_return(grp_popcntdata_fu_364_ap_return),
    .ap_ce(grp_popcntdata_fu_364_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_369(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_369_x_V),
    .ap_return(grp_popcntdata_fu_369_ap_return),
    .ap_ce(grp_popcntdata_fu_369_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_374(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_374_x_V),
    .ap_return(grp_popcntdata_fu_374_ap_return),
    .ap_ce(grp_popcntdata_fu_374_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_379(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_379_x_V),
    .ap_return(grp_popcntdata_fu_379_ap_return),
    .ap_ce(grp_popcntdata_fu_379_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_384_x_V),
    .ap_return(grp_popcntdata_fu_384_ap_return),
    .ap_ce(grp_popcntdata_fu_384_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_389(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_389_x_V),
    .ap_return(grp_popcntdata_fu_389_ap_return),
    .ap_ce(grp_popcntdata_fu_389_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_394(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_394_x_V),
    .ap_return(grp_popcntdata_fu_394_ap_return),
    .ap_ce(grp_popcntdata_fu_394_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_399(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_399_x_V),
    .ap_return(grp_popcntdata_fu_399_ap_return),
    .ap_ce(grp_popcntdata_fu_399_ap_ce)
);

tancalc_popcnt grp_popcnt_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcnt_fu_404_x_V),
    .ap_return(grp_popcnt_fu_404_ap_return),
    .ap_ce(grp_popcnt_fu_404_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_enable_reg_pp1_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_sel_rd <= 1'b0;
    end else begin
        if (((output_V_1_vld_out == 1'b1) & (output_V_1_ack_out == 1'b1))) begin
            output_V_1_sel_rd <= ~output_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_sel_wr <= 1'b0;
    end else begin
        if (((output_V_1_ack_in == 1'b1) & (output_V_1_vld_in == 1'b1))) begin
            output_V_1_sel_wr <= ~output_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_V_1_state <= 2'd0;
    end else begin
        if ((((output_V_1_vld_in == 1'b0) & (output_V_1_state == 2'd2)) | ((output_V_1_vld_in == 1'b0) & (output_V_1_ack_out == 1'b1) & (output_V_1_state == 2'd3)))) begin
            output_V_1_state <= 2'd2;
        end else if ((((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd1)) | ((output_V_TREADY == 1'b0) & (output_V_1_vld_in == 1'b1) & (output_V_1_state == 2'd3)))) begin
            output_V_1_state <= 2'd1;
        end else if (((~((output_V_1_vld_in == 1'b0) & (output_V_1_ack_out == 1'b1)) & ~((output_V_TREADY == 1'b0) & (output_V_1_vld_in == 1'b1)) & (output_V_1_state == 2'd3)) | ((output_V_1_ack_out == 1'b1) & (output_V_1_state == 2'd1)) | ((output_V_1_vld_in == 1'b1) & (output_V_1_state == 2'd2)))) begin
            output_V_1_state <= 2'd3;
        end else begin
            output_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        cmpr_chunk_num_assign_reg_331 <= cmpr_chunk_num_reg_1843;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_chunk_num_assign_reg_331 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_num_assign_reg_353 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0))) begin
        data_num_assign_reg_353 <= data_num_reg_1971;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_500_p2 == 1'd0))) begin
        data_part_num_0_i24_reg_342 <= data_part_num_fu_506_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_part_num_0_i24_reg_342 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_fu_852_p2 == 1'd0))) begin
        add_ln219_1_reg_1981 <= add_ln219_1_fu_874_p2;
        shl_ln98_reg_1976[6 : 1] <= shl_ln98_fu_864_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967 == 1'd0))) begin
        add_ln219_2_reg_1992 <= add_ln219_2_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln92_fu_455_p2 == 1'd0))) begin
        add_ln219_reg_1848 <= add_ln219_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0))) begin
        and_ln1355_10_reg_2076[511 : 0] <= and_ln1355_10_fu_1026_p2[511 : 0];
        and_ln1355_11_reg_2081[511 : 0] <= and_ln1355_11_fu_1031_p2[511 : 0];
        and_ln1355_12_reg_2086[511 : 0] <= and_ln1355_12_fu_1036_p2[511 : 0];
        and_ln1355_13_reg_2091[511 : 0] <= and_ln1355_13_fu_1041_p2[511 : 0];
        and_ln1355_14_reg_2096[511 : 0] <= and_ln1355_14_fu_1046_p2[511 : 0];
        and_ln1355_15_reg_2101[511 : 0] <= and_ln1355_15_fu_1051_p2[511 : 0];
        and_ln1355_8_reg_2066[511 : 0] <= and_ln1355_8_fu_1016_p2[511 : 0];
        and_ln1355_9_reg_2071[511 : 0] <= and_ln1355_9_fu_1021_p2[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0))) begin
        and_ln1355_1_reg_2026[511 : 0] <= and_ln1355_1_fu_950_p2[511 : 0];
        and_ln1355_2_reg_2031[511 : 0] <= and_ln1355_2_fu_956_p2[511 : 0];
        and_ln1355_3_reg_2036[511 : 0] <= and_ln1355_3_fu_962_p2[511 : 0];
        and_ln1355_4_reg_2041[511 : 0] <= and_ln1355_4_fu_968_p2[511 : 0];
        and_ln1355_5_reg_2046[511 : 0] <= and_ln1355_5_fu_974_p2[511 : 0];
        and_ln1355_6_reg_2051[511 : 0] <= and_ln1355_6_fu_980_p2[511 : 0];
        and_ln1355_7_reg_2056[511 : 0] <= and_ln1355_7_fu_986_p2[511 : 0];
        and_ln1355_reg_2021[511 : 0] <= and_ln1355_fu_944_p2[511 : 0];
        ref_local_0_V_reg_2009[511 : 0] <= ref_local_0_V_fu_937_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2))) begin
        cmpr_chunk_num_reg_1843 <= cmpr_chunk_num_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_10_fu_194[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_11_fu_198[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_12_fu_202[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_13_fu_206[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_14_fu_210[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_15_fu_214[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_1_fu_158[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_2_fu_162[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_3_fu_166[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_4_fu_170[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_5_fu_174[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_6_fu_178[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_7_fu_182[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_8_fu_186[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_9_fu_190[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_fu_154[511 : 0] <= cmpr_local_0_V_fu_539_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_10_fu_258[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_11_fu_262[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_12_fu_266[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_13_fu_270[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_14_fu_274[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_15_fu_278[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_1_fu_222[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_2_fu_226[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_3_fu_230[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_4_fu_234[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_5_fu_238[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_6_fu_242[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_7_fu_246[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_8_fu_250[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_9_fu_254[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1868_pp0_iter3_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_fu_218[9 : 0] <= cmprpop_local_0_V_2_fu_656_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        data_num_reg_1971 <= data_num_fu_858_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0))) begin
        gmem0_addr_2_read_reg_2003 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln95_reg_1967 <= icmp_ln95_fu_852_p2;
        icmp_ln95_reg_1967_pp1_iter1_reg <= icmp_ln95_reg_1967;
        icmp_ln95_reg_1967_pp1_iter2_reg <= icmp_ln95_reg_1967_pp1_iter1_reg;
        icmp_ln95_reg_1967_pp1_iter3_reg <= icmp_ln95_reg_1967_pp1_iter2_reg;
        icmp_ln95_reg_1967_pp1_iter4_reg <= icmp_ln95_reg_1967_pp1_iter3_reg;
        icmp_ln95_reg_1967_pp1_iter5_reg <= icmp_ln95_reg_1967_pp1_iter4_reg;
        icmp_ln95_reg_1967_pp1_iter6_reg <= icmp_ln95_reg_1967_pp1_iter5_reg;
        icmp_ln95_reg_1967_pp1_iter7_reg <= icmp_ln95_reg_1967_pp1_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter6_reg == 1'd0))) begin
        or_ln66_6_reg_2118 <= or_ln66_6_fu_1343_p2;
        zext_ln215_reg_2106[9 : 0] <= zext_ln215_fu_1056_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_1_load_A == 1'b1)) begin
        output_V_1_payload_A <= zext_ln295_fu_1636_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((output_V_1_load_B == 1'b1)) begin
        output_V_1_payload_B <= zext_ln295_fu_1636_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_cast_reg_1833[57 : 0] <= p_cast_fu_451_p1[57 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0))) begin
        refpop_local_0_V_reg_2061 <= grp_popcnt_fu_404_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter6_reg == 1'd0)))) begin
        reg_409 <= grp_popcntdata_fu_364_ap_return;
        reg_413 <= grp_popcntdata_fu_369_ap_return;
        reg_417 <= grp_popcntdata_fu_374_ap_return;
        reg_421 <= grp_popcntdata_fu_379_ap_return;
        reg_425 <= grp_popcntdata_fu_384_ap_return;
        reg_429 <= grp_popcntdata_fu_389_ap_return;
        reg_433 <= grp_popcntdata_fu_394_ap_return;
        reg_437 <= grp_popcntdata_fu_399_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_input_V_reg_1877 <= gmem0_RDATA;
        trunc_ln29_1_reg_1868_pp0_iter1_reg <= trunc_ln29_1_reg_1868;
        trunc_ln30_reg_1872_pp0_iter1_reg <= trunc_ln30_reg_1872;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_500_p2 == 1'd0))) begin
        trunc_ln29_1_reg_1868 <= {{data_part_num_0_i24_reg_342[4:1]}};
        trunc_ln30_reg_1872 <= trunc_ln30_fu_522_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        trunc_ln29_1_reg_1868_pp0_iter2_reg <= trunc_ln29_1_reg_1868_pp0_iter1_reg;
        trunc_ln29_1_reg_1868_pp0_iter3_reg <= trunc_ln29_1_reg_1868_pp0_iter2_reg;
        trunc_ln364_reg_1882 <= trunc_ln364_fu_652_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        zext_ln215_10_reg_1902[9 : 0] <= zext_ln215_10_fu_800_p1[9 : 0];
        zext_ln215_13_reg_1907[9 : 0] <= zext_ln215_13_fu_804_p1[9 : 0];
        zext_ln215_16_reg_1912[9 : 0] <= zext_ln215_16_fu_808_p1[9 : 0];
        zext_ln215_19_reg_1917[9 : 0] <= zext_ln215_19_fu_812_p1[9 : 0];
        zext_ln215_1_reg_1887[9 : 0] <= zext_ln215_1_fu_788_p1[9 : 0];
        zext_ln215_22_reg_1922[9 : 0] <= zext_ln215_22_fu_816_p1[9 : 0];
        zext_ln215_25_reg_1927[9 : 0] <= zext_ln215_25_fu_820_p1[9 : 0];
        zext_ln215_28_reg_1932[9 : 0] <= zext_ln215_28_fu_824_p1[9 : 0];
        zext_ln215_31_reg_1937[9 : 0] <= zext_ln215_31_fu_828_p1[9 : 0];
        zext_ln215_34_reg_1942[9 : 0] <= zext_ln215_34_fu_832_p1[9 : 0];
        zext_ln215_37_reg_1947[9 : 0] <= zext_ln215_37_fu_836_p1[9 : 0];
        zext_ln215_40_reg_1952[9 : 0] <= zext_ln215_40_fu_840_p1[9 : 0];
        zext_ln215_43_reg_1957[9 : 0] <= zext_ln215_43_fu_844_p1[9 : 0];
        zext_ln215_46_reg_1962[9 : 0] <= zext_ln215_46_fu_848_p1[9 : 0];
        zext_ln215_4_reg_1892[9 : 0] <= zext_ln215_4_fu_792_p1[9 : 0];
        zext_ln215_7_reg_1897[9 : 0] <= zext_ln215_7_fu_796_p1[9 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_500_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_fu_852_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln92_fu_455_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0))) begin
        ap_phi_mux_data_num_assign_phi_fu_357_p4 = data_num_reg_1971;
    end else begin
        ap_phi_mux_data_num_assign_phi_fu_357_p4 = data_num_assign_reg_353;
    end
end

always @ (*) begin
    if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln92_fu_455_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0))) begin
        gmem0_ARADDR = zext_ln219_5_fu_903_p1;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967 == 1'd0))) begin
        gmem0_ARADDR = zext_ln219_3_fu_879_p1;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_ARADDR = zext_ln219_1_fu_490_p1;
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967 == 1'd0)))) begin
        gmem0_ARLEN = 32'd1;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        gmem0_ARLEN = 32'd32;
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967 == 1'd0)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln95_reg_1967 == 1'd0)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp262) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp279) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp152) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_popcnt_fu_404_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_404_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0))) begin
        grp_popcnt_fu_404_x_V = gmem0_addr_2_read_reg_2003;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_popcnt_fu_404_x_V = trunc_ln364_reg_1882;
    end else begin
        grp_popcnt_fu_404_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp296) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp280) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_364_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_364_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_364_x_V = and_ln1355_8_reg_2066;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_364_x_V = and_ln1355_reg_2021;
        end else begin
            grp_popcntdata_fu_364_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_364_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp297) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp281) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_369_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_369_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_369_x_V = and_ln1355_9_reg_2071;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_369_x_V = and_ln1355_1_reg_2026;
        end else begin
            grp_popcntdata_fu_369_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_369_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp298) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp282) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_374_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_374_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_374_x_V = and_ln1355_10_reg_2076;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_374_x_V = and_ln1355_2_reg_2031;
        end else begin
            grp_popcntdata_fu_374_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_374_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp299) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp283) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_379_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_379_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_379_x_V = and_ln1355_11_reg_2081;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_379_x_V = and_ln1355_3_reg_2036;
        end else begin
            grp_popcntdata_fu_379_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_379_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp300) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp284) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_384_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_384_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_384_x_V = and_ln1355_12_reg_2086;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_384_x_V = and_ln1355_4_reg_2041;
        end else begin
            grp_popcntdata_fu_384_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_384_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp301) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp285) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_389_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_389_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_389_x_V = and_ln1355_13_reg_2091;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_389_x_V = and_ln1355_5_reg_2046;
        end else begin
            grp_popcntdata_fu_389_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_389_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp302) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp286) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_394_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_394_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_394_x_V = and_ln1355_14_reg_2096;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_394_x_V = and_ln1355_6_reg_2051;
        end else begin
            grp_popcntdata_fu_394_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_394_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp303) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp287) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_399_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_399_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_reg_1967_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_927)) begin
            grp_popcntdata_fu_399_x_V = and_ln1355_15_reg_2101;
        end else if ((1'b1 == ap_condition_925)) begin
            grp_popcntdata_fu_399_x_V = and_ln1355_7_reg_2056;
        end else begin
            grp_popcntdata_fu_399_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_399_x_V = 'bx;
    end
end

always @ (*) begin
    if ((output_V_1_sel == 1'b1)) begin
        output_V_1_data_out = output_V_1_payload_B;
    end else begin
        output_V_1_data_out = output_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter6_reg == 1'd0))) begin
        output_V_1_vld_in = 1'b1;
    end else begin
        output_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln95_reg_1967_pp1_iter6_reg == 1'd0)) | ((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1) & (icmp_ln95_reg_1967_pp1_iter7_reg == 1'd0)))) begin
        output_V_TDATA_blk_n = output_V_1_state[1'd1];
    end else begin
        output_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln92_fu_455_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln92_fu_455_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln27_fu_500_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln27_fu_500_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln95_fu_852_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln95_fu_852_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_10_fu_1409_p2 = (zext_ln215_31_reg_1937 + zext_ln215_reg_2106);

assign add_ln1353_11_fu_1439_p2 = (zext_ln215_34_reg_1942 + zext_ln215_reg_2106);

assign add_ln1353_12_fu_1469_p2 = (zext_ln215_37_reg_1947 + zext_ln215_reg_2106);

assign add_ln1353_13_fu_1499_p2 = (zext_ln215_40_reg_1952 + zext_ln215_reg_2106);

assign add_ln1353_14_fu_1529_p2 = (zext_ln215_43_reg_1957 + zext_ln215_reg_2106);

assign add_ln1353_15_fu_1559_p2 = (zext_ln215_46_reg_1962 + zext_ln215_reg_2106);

assign add_ln1353_1_fu_1078_p2 = (zext_ln215_4_reg_1892 + zext_ln215_fu_1056_p1);

assign add_ln1353_2_fu_1097_p2 = (zext_ln215_7_reg_1897 + zext_ln215_fu_1056_p1);

assign add_ln1353_3_fu_1128_p2 = (zext_ln215_10_reg_1902 + zext_ln215_fu_1056_p1);

assign add_ln1353_4_fu_1159_p2 = (zext_ln215_13_reg_1907 + zext_ln215_fu_1056_p1);

assign add_ln1353_5_fu_1190_p2 = (zext_ln215_16_reg_1912 + zext_ln215_fu_1056_p1);

assign add_ln1353_6_fu_1221_p2 = (zext_ln215_19_reg_1917 + zext_ln215_fu_1056_p1);

assign add_ln1353_7_fu_1252_p2 = (zext_ln215_22_reg_1922 + zext_ln215_fu_1056_p1);

assign add_ln1353_8_fu_1349_p2 = (zext_ln215_25_reg_1927 + zext_ln215_reg_2106);

assign add_ln1353_9_fu_1379_p2 = (zext_ln215_28_reg_1932 + zext_ln215_reg_2106);

assign add_ln1353_fu_1059_p2 = (zext_ln215_1_reg_1887 + zext_ln215_fu_1056_p1);

assign add_ln219_1_fu_874_p2 = (p_cast_reg_1833 + zext_ln219_2_fu_870_p1);

assign add_ln219_2_fu_898_p2 = (p_cast_reg_1833 + zext_ln219_4_fu_894_p1);

assign add_ln219_fu_485_p2 = (p_cast_reg_1833 + zext_ln219_fu_481_p1);

assign and_ln1355_10_fu_1026_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_10_fu_194);

assign and_ln1355_11_fu_1031_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_11_fu_198);

assign and_ln1355_12_fu_1036_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_12_fu_202);

assign and_ln1355_13_fu_1041_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_13_fu_206);

assign and_ln1355_14_fu_1046_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_14_fu_210);

assign and_ln1355_15_fu_1051_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_15_fu_214);

assign and_ln1355_1_fu_950_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_1_fu_158);

assign and_ln1355_2_fu_956_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_2_fu_162);

assign and_ln1355_3_fu_962_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_3_fu_166);

assign and_ln1355_4_fu_968_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_4_fu_170);

assign and_ln1355_5_fu_974_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_5_fu_174);

assign and_ln1355_6_fu_980_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_6_fu_178);

assign and_ln1355_7_fu_986_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_7_fu_182);

assign and_ln1355_8_fu_1016_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_8_fu_186);

assign and_ln1355_9_fu_1021_p2 = (ref_local_0_V_reg_2009 & cmpr_local_15_V_9_fu_190);

assign and_ln1355_fu_944_p2 = (ref_local_0_V_fu_937_p3 & cmpr_local_15_V_fu_154);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp152 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp262 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp296 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp297 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp298 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp299 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp300 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp301 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp302 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp303 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp279 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp280 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp281 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp282 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp283 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp284 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp285 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp286 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp287 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state17_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter0_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1_ignore_call6 = (gmem0_RVALID == 1'b0);
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter0_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_io = ((gmem0_ARREADY == 1'b0) & (icmp_ln95_reg_1967 == 1'd0));
end

assign ap_block_state17_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter0_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((gmem0_ARREADY == 1'b0) & (icmp_ln95_reg_1967 == 1'd0));
end

assign ap_block_state18_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter1_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((output_V_1_state == 2'd1) | ((output_V_TREADY == 1'b0) & (output_V_1_state == 2'd3)));
end

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter2_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage1_iter2_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter3_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage1_iter3_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call34 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call36 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call43 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call49 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call57 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call65 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call73 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call81 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp1_stage0_iter4_ignore_call89 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call34 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call36 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call43 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call49 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call57 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call65 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call73 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call81 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage1_iter4_ignore_call89 = ((gmem0_RVALID == 1'b0) & (icmp_ln95_reg_1967_pp1_iter4_reg == 1'd0));
end

assign ap_block_state26_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter5_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage1_iter5_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter6_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((output_V_1_ack_in == 1'b0) & (icmp_ln95_reg_1967_pp1_iter6_reg == 1'd0));
end

assign ap_block_state30_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter7_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_io = ((output_V_1_ack_in == 1'b0) & (icmp_ln95_reg_1967_pp1_iter7_reg == 1'd0));
end

assign ap_block_state31_pp1_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter7_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_925 = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1));
end

always @ (*) begin
    ap_condition_927 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmpr_chunk_num_fu_461_p2 = (cmpr_chunk_num_assign_reg_331 + 3'd1);

assign cmpr_local_0_V_fu_539_p3 = {{512'd0}, {temp_input_V_reg_1877}};

assign cmprpop_local_0_V_2_fu_656_p1 = grp_popcnt_fu_404_ap_return;

assign data_num_fu_858_p2 = (ap_phi_mux_data_num_assign_phi_fu_357_p4 + 7'd1);

assign data_part_num_fu_506_p2 = (data_part_num_0_i24_reg_342 + 6'd1);

assign icmp_ln27_fu_500_p2 = ((data_part_num_0_i24_reg_342 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln54_10_fu_1487_p2 = (($signed(zext_ln215_39_fu_1477_p1) < $signed(sub_ln1354_12_fu_1481_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_11_fu_1517_p2 = (($signed(zext_ln215_42_fu_1507_p1) < $signed(sub_ln1354_13_fu_1511_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_12_fu_1547_p2 = (($signed(zext_ln215_45_fu_1537_p1) < $signed(sub_ln1354_14_fu_1541_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_13_fu_1283_p2 = (($signed(zext_ln215_3_fu_1068_p1) < $signed(sub_ln1354_fu_1072_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_14_fu_1295_p2 = (($signed(zext_ln215_6_fu_1087_p1) < $signed(sub_ln1354_1_fu_1091_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1147_p2 = (($signed(zext_ln215_12_fu_1137_p1) < $signed(sub_ln1354_3_fu_1141_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1178_p2 = (($signed(zext_ln215_15_fu_1168_p1) < $signed(sub_ln1354_4_fu_1172_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_3_fu_1209_p2 = (($signed(zext_ln215_18_fu_1199_p1) < $signed(sub_ln1354_5_fu_1203_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_4_fu_1240_p2 = (($signed(zext_ln215_21_fu_1230_p1) < $signed(sub_ln1354_6_fu_1234_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_5_fu_1271_p2 = (($signed(zext_ln215_24_fu_1261_p1) < $signed(sub_ln1354_7_fu_1265_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_6_fu_1367_p2 = (($signed(zext_ln215_27_fu_1357_p1) < $signed(sub_ln1354_8_fu_1361_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_7_fu_1397_p2 = (($signed(zext_ln215_30_fu_1387_p1) < $signed(sub_ln1354_9_fu_1391_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_8_fu_1427_p2 = (($signed(zext_ln215_33_fu_1417_p1) < $signed(sub_ln1354_10_fu_1421_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_9_fu_1457_p2 = (($signed(zext_ln215_36_fu_1447_p1) < $signed(sub_ln1354_11_fu_1451_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1116_p2 = (($signed(zext_ln215_9_fu_1106_p1) < $signed(sub_ln1354_2_fu_1110_p2)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1577_p2 = (($signed(zext_ln215_48_fu_1567_p1) < $signed(sub_ln1354_15_fu_1571_p2)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_455_p2 = ((cmpr_chunk_num_assign_reg_331 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_852_p2 = ((ap_phi_mux_data_num_assign_phi_fu_357_p4 == 7'd64) ? 1'b1 : 1'b0);

assign lshr_ln647_fu_640_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln647_1_fu_636_p1;

assign num_hi_fu_533_p2 = (shl_ln1_fu_526_p3 | 10'd511);

assign or_ln32_fu_889_p2 = (shl_ln98_reg_1976 | 7'd1);

assign or_ln66_10_fu_1607_p2 = (xor_ln54_11_fu_1523_p2 | xor_ln54_10_fu_1493_p2);

assign or_ln66_11_fu_1613_p2 = (xor_ln66_fu_1583_p2 | xor_ln54_12_fu_1553_p2);

assign or_ln66_12_fu_1619_p2 = (or_ln66_11_fu_1613_p2 | or_ln66_10_fu_1607_p2);

assign or_ln66_13_fu_1625_p2 = (or_ln66_9_fu_1601_p2 | or_ln66_12_fu_1619_p2);

assign or_ln66_14_fu_1631_p2 = (or_ln66_6_reg_2118 | or_ln66_13_fu_1625_p2);

assign or_ln66_1_fu_1313_p2 = (xor_ln54_fu_1122_p2 | xor_ln54_1_fu_1153_p2);

assign or_ln66_2_fu_1319_p2 = (or_ln66_fu_1307_p2 | or_ln66_1_fu_1313_p2);

assign or_ln66_3_fu_1325_p2 = (xor_ln54_3_fu_1215_p2 | xor_ln54_2_fu_1184_p2);

assign or_ln66_4_fu_1331_p2 = (xor_ln54_5_fu_1277_p2 | xor_ln54_4_fu_1246_p2);

assign or_ln66_5_fu_1337_p2 = (or_ln66_4_fu_1331_p2 | or_ln66_3_fu_1325_p2);

assign or_ln66_6_fu_1343_p2 = (or_ln66_5_fu_1337_p2 | or_ln66_2_fu_1319_p2);

assign or_ln66_7_fu_1589_p2 = (xor_ln54_7_fu_1403_p2 | xor_ln54_6_fu_1373_p2);

assign or_ln66_8_fu_1595_p2 = (xor_ln54_9_fu_1463_p2 | xor_ln54_8_fu_1433_p2);

assign or_ln66_9_fu_1601_p2 = (or_ln66_8_fu_1595_p2 | or_ln66_7_fu_1589_p2);

assign or_ln66_fu_1307_p2 = (xor_ln54_14_fu_1301_p2 | xor_ln54_13_fu_1289_p2);

assign or_ln_fu_471_p4 = {{{{2'd2}, {trunc_ln93_fu_467_p1}}}, {4'd0}};

assign output_V_1_ack_in = output_V_1_state[1'd1];

assign output_V_1_ack_out = output_V_TREADY;

assign output_V_1_load_A = (output_V_1_state_cmp_full & ~output_V_1_sel_wr);

assign output_V_1_load_B = (output_V_1_state_cmp_full & output_V_1_sel_wr);

assign output_V_1_sel = output_V_1_sel_rd;

assign output_V_1_state_cmp_full = ((output_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign output_V_1_vld_out = output_V_1_state[1'd0];

assign output_V_TDATA = output_V_1_data_out;

assign output_V_TVALID = output_V_1_state[1'd0];

assign p_Result_s_fu_646_p2 = (lshr_ln647_fu_640_p2 & cmpr_local_0_V_fu_539_p3);

assign p_cast_fu_451_p1 = tmp_3_fu_441_p4;

assign ref_local_0_V_fu_937_p3 = {{512'd0}, {gmem0_addr_2_read_reg_2003}};

assign shl_ln1_fu_526_p3 = {{trunc_ln30_reg_1872_pp0_iter1_reg}, {9'd0}};

assign shl_ln98_fu_864_p2 = ap_phi_mux_data_num_assign_phi_fu_357_p4 << 7'd1;

assign sub_ln1354_10_fu_1421_p2 = (zext_ln215_32_fu_1413_p1 - zext_ln215_33_fu_1417_p1);

assign sub_ln1354_11_fu_1451_p2 = (zext_ln215_35_fu_1443_p1 - zext_ln215_36_fu_1447_p1);

assign sub_ln1354_12_fu_1481_p2 = (zext_ln215_38_fu_1473_p1 - zext_ln215_39_fu_1477_p1);

assign sub_ln1354_13_fu_1511_p2 = (zext_ln215_41_fu_1503_p1 - zext_ln215_42_fu_1507_p1);

assign sub_ln1354_14_fu_1541_p2 = (zext_ln215_44_fu_1533_p1 - zext_ln215_45_fu_1537_p1);

assign sub_ln1354_15_fu_1571_p2 = (zext_ln215_47_fu_1563_p1 - zext_ln215_48_fu_1567_p1);

assign sub_ln1354_1_fu_1091_p2 = (zext_ln215_5_fu_1083_p1 - zext_ln215_6_fu_1087_p1);

assign sub_ln1354_2_fu_1110_p2 = (zext_ln215_8_fu_1102_p1 - zext_ln215_9_fu_1106_p1);

assign sub_ln1354_3_fu_1141_p2 = (zext_ln215_11_fu_1133_p1 - zext_ln215_12_fu_1137_p1);

assign sub_ln1354_4_fu_1172_p2 = (zext_ln215_14_fu_1164_p1 - zext_ln215_15_fu_1168_p1);

assign sub_ln1354_5_fu_1203_p2 = (zext_ln215_17_fu_1195_p1 - zext_ln215_18_fu_1199_p1);

assign sub_ln1354_6_fu_1234_p2 = (zext_ln215_20_fu_1226_p1 - zext_ln215_21_fu_1230_p1);

assign sub_ln1354_7_fu_1265_p2 = (zext_ln215_23_fu_1257_p1 - zext_ln215_24_fu_1261_p1);

assign sub_ln1354_8_fu_1361_p2 = (zext_ln215_26_fu_1353_p1 - zext_ln215_27_fu_1357_p1);

assign sub_ln1354_9_fu_1391_p2 = (zext_ln215_29_fu_1383_p1 - zext_ln215_30_fu_1387_p1);

assign sub_ln1354_fu_1072_p2 = (zext_ln215_2_fu_1064_p1 - zext_ln215_3_fu_1068_p1);

assign tmp_3_fu_441_p4 = {{input_V[63:6]}};

assign trunc_ln30_fu_522_p1 = data_part_num_0_i24_reg_342[0:0];

assign trunc_ln364_fu_652_p1 = p_Result_s_fu_646_p2[511:0];

assign trunc_ln93_fu_467_p1 = cmpr_chunk_num_assign_reg_331[1:0];

assign xor_ln54_10_fu_1493_p2 = (icmp_ln54_10_fu_1487_p2 ^ 1'd1);

assign xor_ln54_11_fu_1523_p2 = (icmp_ln54_11_fu_1517_p2 ^ 1'd1);

assign xor_ln54_12_fu_1553_p2 = (icmp_ln54_12_fu_1547_p2 ^ 1'd1);

assign xor_ln54_13_fu_1289_p2 = (icmp_ln54_13_fu_1283_p2 ^ 1'd1);

assign xor_ln54_14_fu_1301_p2 = (icmp_ln54_14_fu_1295_p2 ^ 1'd1);

assign xor_ln54_1_fu_1153_p2 = (icmp_ln54_1_fu_1147_p2 ^ 1'd1);

assign xor_ln54_2_fu_1184_p2 = (icmp_ln54_2_fu_1178_p2 ^ 1'd1);

assign xor_ln54_3_fu_1215_p2 = (icmp_ln54_3_fu_1209_p2 ^ 1'd1);

assign xor_ln54_4_fu_1246_p2 = (icmp_ln54_4_fu_1240_p2 ^ 1'd1);

assign xor_ln54_5_fu_1277_p2 = (icmp_ln54_5_fu_1271_p2 ^ 1'd1);

assign xor_ln54_6_fu_1373_p2 = (icmp_ln54_6_fu_1367_p2 ^ 1'd1);

assign xor_ln54_7_fu_1403_p2 = (icmp_ln54_7_fu_1397_p2 ^ 1'd1);

assign xor_ln54_8_fu_1433_p2 = (icmp_ln54_8_fu_1427_p2 ^ 1'd1);

assign xor_ln54_9_fu_1463_p2 = (icmp_ln54_9_fu_1457_p2 ^ 1'd1);

assign xor_ln54_fu_1122_p2 = (icmp_ln54_fu_1116_p2 ^ 1'd1);

assign xor_ln647_fu_630_p2 = (zext_ln647_fu_626_p1 ^ 11'd1023);

assign xor_ln66_fu_1583_p2 = (icmp_ln66_fu_1577_p2 ^ 1'd1);

assign zext_ln215_10_fu_800_p1 = cmprpop_local_15_V_3_fu_230;

assign zext_ln215_11_fu_1133_p1 = add_ln1353_3_fu_1128_p2;

assign zext_ln215_12_fu_1137_p1 = reg_421;

assign zext_ln215_13_fu_804_p1 = cmprpop_local_15_V_4_fu_234;

assign zext_ln215_14_fu_1164_p1 = add_ln1353_4_fu_1159_p2;

assign zext_ln215_15_fu_1168_p1 = reg_425;

assign zext_ln215_16_fu_808_p1 = cmprpop_local_15_V_5_fu_238;

assign zext_ln215_17_fu_1195_p1 = add_ln1353_5_fu_1190_p2;

assign zext_ln215_18_fu_1199_p1 = reg_429;

assign zext_ln215_19_fu_812_p1 = cmprpop_local_15_V_6_fu_242;

assign zext_ln215_1_fu_788_p1 = cmprpop_local_15_V_fu_218;

assign zext_ln215_20_fu_1226_p1 = add_ln1353_6_fu_1221_p2;

assign zext_ln215_21_fu_1230_p1 = reg_433;

assign zext_ln215_22_fu_816_p1 = cmprpop_local_15_V_7_fu_246;

assign zext_ln215_23_fu_1257_p1 = add_ln1353_7_fu_1252_p2;

assign zext_ln215_24_fu_1261_p1 = reg_437;

assign zext_ln215_25_fu_820_p1 = cmprpop_local_15_V_8_fu_250;

assign zext_ln215_26_fu_1353_p1 = add_ln1353_8_fu_1349_p2;

assign zext_ln215_27_fu_1357_p1 = reg_409;

assign zext_ln215_28_fu_824_p1 = cmprpop_local_15_V_9_fu_254;

assign zext_ln215_29_fu_1383_p1 = add_ln1353_9_fu_1379_p2;

assign zext_ln215_2_fu_1064_p1 = add_ln1353_fu_1059_p2;

assign zext_ln215_30_fu_1387_p1 = reg_413;

assign zext_ln215_31_fu_828_p1 = cmprpop_local_15_V_10_fu_258;

assign zext_ln215_32_fu_1413_p1 = add_ln1353_10_fu_1409_p2;

assign zext_ln215_33_fu_1417_p1 = reg_417;

assign zext_ln215_34_fu_832_p1 = cmprpop_local_15_V_11_fu_262;

assign zext_ln215_35_fu_1443_p1 = add_ln1353_11_fu_1439_p2;

assign zext_ln215_36_fu_1447_p1 = reg_421;

assign zext_ln215_37_fu_836_p1 = cmprpop_local_15_V_12_fu_266;

assign zext_ln215_38_fu_1473_p1 = add_ln1353_12_fu_1469_p2;

assign zext_ln215_39_fu_1477_p1 = reg_425;

assign zext_ln215_3_fu_1068_p1 = reg_409;

assign zext_ln215_40_fu_840_p1 = cmprpop_local_15_V_13_fu_270;

assign zext_ln215_41_fu_1503_p1 = add_ln1353_13_fu_1499_p2;

assign zext_ln215_42_fu_1507_p1 = reg_429;

assign zext_ln215_43_fu_844_p1 = cmprpop_local_15_V_14_fu_274;

assign zext_ln215_44_fu_1533_p1 = add_ln1353_14_fu_1529_p2;

assign zext_ln215_45_fu_1537_p1 = reg_433;

assign zext_ln215_46_fu_848_p1 = cmprpop_local_15_V_15_fu_278;

assign zext_ln215_47_fu_1563_p1 = add_ln1353_15_fu_1559_p2;

assign zext_ln215_48_fu_1567_p1 = reg_437;

assign zext_ln215_4_fu_792_p1 = cmprpop_local_15_V_1_fu_222;

assign zext_ln215_5_fu_1083_p1 = add_ln1353_1_fu_1078_p2;

assign zext_ln215_6_fu_1087_p1 = reg_413;

assign zext_ln215_7_fu_796_p1 = cmprpop_local_15_V_2_fu_226;

assign zext_ln215_8_fu_1102_p1 = add_ln1353_2_fu_1097_p2;

assign zext_ln215_9_fu_1106_p1 = reg_417;

assign zext_ln215_fu_1056_p1 = refpop_local_0_V_reg_2061;

assign zext_ln219_1_fu_490_p1 = add_ln219_reg_1848;

assign zext_ln219_2_fu_870_p1 = shl_ln98_fu_864_p2;

assign zext_ln219_3_fu_879_p1 = add_ln219_1_reg_1981;

assign zext_ln219_4_fu_894_p1 = or_ln32_fu_889_p2;

assign zext_ln219_5_fu_903_p1 = add_ln219_2_reg_1992;

assign zext_ln219_fu_481_p1 = or_ln_fu_471_p4;

assign zext_ln295_fu_1636_p1 = or_ln66_14_fu_1631_p2;

assign zext_ln647_1_fu_636_p1 = xor_ln647_fu_630_p2;

assign zext_ln647_fu_626_p1 = num_hi_fu_533_p2;

always @ (posedge ap_clk) begin
    p_cast_reg_1833[58] <= 1'b0;
    zext_ln215_1_reg_1887[11:10] <= 2'b00;
    zext_ln215_4_reg_1892[11:10] <= 2'b00;
    zext_ln215_7_reg_1897[11:10] <= 2'b00;
    zext_ln215_10_reg_1902[11:10] <= 2'b00;
    zext_ln215_13_reg_1907[11:10] <= 2'b00;
    zext_ln215_16_reg_1912[11:10] <= 2'b00;
    zext_ln215_19_reg_1917[11:10] <= 2'b00;
    zext_ln215_22_reg_1922[11:10] <= 2'b00;
    zext_ln215_25_reg_1927[11:10] <= 2'b00;
    zext_ln215_28_reg_1932[11:10] <= 2'b00;
    zext_ln215_31_reg_1937[11:10] <= 2'b00;
    zext_ln215_34_reg_1942[11:10] <= 2'b00;
    zext_ln215_37_reg_1947[11:10] <= 2'b00;
    zext_ln215_40_reg_1952[11:10] <= 2'b00;
    zext_ln215_43_reg_1957[11:10] <= 2'b00;
    zext_ln215_46_reg_1962[11:10] <= 2'b00;
    shl_ln98_reg_1976[0] <= 1'b0;
    ref_local_0_V_reg_2009[1023:512] <= 512'b
    and_ln1355_reg_2021[1023:512] <= 512'b
    and_ln1355_1_reg_2026[1023:512] <= 512'b
    and_ln1355_2_reg_2031[1023:512] <= 512'b
    and_ln1355_3_reg_2036[1023:512] <= 512'b
    and_ln1355_4_reg_2041[1023:512] <= 512'b
    and_ln1355_5_reg_2046[1023:512] <= 512'b
    and_ln1355_6_reg_2051[1023:512] <= 512'b
    and_ln1355_7_reg_2056[1023:512] <= 512'b
    and_ln1355_8_reg_2066[1023:512] <= 512'b
    and_ln1355_9_reg_2071[1023:512] <= 512'b
    and_ln1355_10_reg_2076[1023:512] <= 512'b
    and_ln1355_11_reg_2081[1023:512] <= 512'b
    and_ln1355_12_reg_2086[1023:512] <= 512'b
    and_ln1355_13_reg_2091[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_14_reg_2096[1023:512] <= 512'b
    and_ln1355_15_reg_2101[1023:512] <= 512'b
    zext_ln215_reg_2106[11:10] <= 2'b00;
    cmpr_local_15_V_fu_154[1023:512] <= 512'b
    cmpr_local_15_V_1_fu_158[1023:512] <= 512'b
    cmpr_local_15_V_2_fu_162[1023:512] <= 512'b
    cmpr_local_15_V_3_fu_166[1023:512] <= 512'b
    cmpr_local_15_V_4_fu_170[1023:512] <= 512'b
    cmpr_local_15_V_5_fu_174[1023:512] <= 512'b
    cmpr_local_15_V_6_fu_178[1023:512] <= 512'b
    cmpr_local_15_V_7_fu_182[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    cmpr_local_15_V_8_fu_186[1023:512] <= 512'b
    cmpr_local_15_V_9_fu_190[1023:512] <= 512'b
    cmpr_local_15_V_10_fu_194[1023:512] <= 512'b
    cmpr_local_15_V_11_fu_198[1023:512] <= 512'b
    cmpr_local_15_V_12_fu_202[1023:512] <= 512'b
    cmpr_local_15_V_13_fu_206[1023:512] <= 512'b
    cmpr_local_15_V_14_fu_210[1023:512] <= 512'b
    cmpr_local_15_V_15_fu_214[1023:512] <= 512'b
    cmprpop_local_15_V_fu_218[10] <= 1'b0;
    cmprpop_local_15_V_1_fu_222[10] <= 1'b0;
    cmprpop_local_15_V_2_fu_226[10] <= 1'b0;
    cmprpop_local_15_V_3_fu_230[10] <= 1'b0;
    cmprpop_local_15_V_4_fu_234[10] <= 1'b0;
    cmprpop_local_15_V_5_fu_238[10] <= 1'b0;
    cmprpop_local_15_V_6_fu_242[10] <= 1'b0;
    cmprpop_local_15_V_7_fu_246[10] <= 1'b0;
    cmprpop_local_15_V_8_fu_250[10] <= 1'b0;
    cmprpop_local_15_V_9_fu_254[10] <= 1'b0;
    cmprpop_local_15_V_10_fu_258[10] <= 1'b0;
    cmprpop_local_15_V_11_fu_262[10] <= 1'b0;
    cmprpop_local_15_V_12_fu_266[10] <= 1'b0;
    cmprpop_local_15_V_13_fu_270[10] <= 1'b0;
    cmprpop_local_15_V_14_fu_274[10] <= 1'b0;
    cmprpop_local_15_V_15_fu_278[10] <= 1'b0;
end

endmodule //tancalc_tancalc
