// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tancalc_cmpr_read (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        cmpr_local_address0,
        cmpr_local_ce0,
        cmpr_local_we0,
        cmpr_local_d0,
        cmprpop_local_address0,
        cmprpop_local_ce0,
        cmprpop_local_we0,
        cmprpop_local_d0,
        chunk_num
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state7 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [6:0] cmpr_local_address0;
output   cmpr_local_ce0;
output   cmpr_local_we0;
output  [31:0] cmpr_local_d0;
output  [6:0] cmprpop_local_address0;
output   cmprpop_local_ce0;
output   cmprpop_local_we0;
output  [5:0] cmprpop_local_d0;
input  [31:0] chunk_num;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg cmpr_local_ce0;
reg cmpr_local_we0;
reg[6:0] cmprpop_local_address0;
reg cmprpop_local_ce0;
reg cmprpop_local_we0;
reg[5:0] cmprpop_local_d0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] cmpr_num_0_reg_168;
wire   [7:0] i_fu_186_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln26_fu_197_p2;
reg   [0:0] icmp_ln26_reg_926;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state4_pp1_stage0_iter0;
wire    ap_block_state5_pp1_stage0_iter1;
wire    ap_block_state6_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln26_reg_926_pp1_iter1_reg;
wire   [7:0] cmpr_num_fu_203_p2;
reg   [7:0] cmpr_num_reg_930;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln27_2_fu_227_p1;
reg   [63:0] zext_ln27_2_reg_940;
wire   [4:0] add_ln7_44_fu_748_p2;
reg   [4:0] add_ln7_44_reg_945;
wire   [4:0] add_ln7_59_fu_894_p2;
reg   [4:0] add_ln7_59_reg_950;
wire    ap_CS_fsm_state3;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state4;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] i_0_reg_157;
wire   [0:0] icmp_ln23_fu_180_p2;
reg   [7:0] ap_phi_mux_cmpr_num_0_phi_fu_172_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln24_fu_192_p1;
wire   [63:0] zext_ln27_1_fu_218_p1;
wire   [5:0] add_ln7_60_fu_906_p2;
wire   [31:0] zext_ln27_fu_209_p1;
wire   [31:0] add_ln27_fu_213_p2;
wire   [0:0] trunc_ln27_fu_223_p1;
wire   [0:0] tmp_fu_236_p3;
wire   [0:0] tmp_31_fu_248_p3;
wire   [0:0] tmp_32_fu_260_p3;
wire   [0:0] tmp_33_fu_272_p3;
wire   [0:0] tmp_34_fu_284_p3;
wire   [0:0] tmp_35_fu_296_p3;
wire   [0:0] tmp_36_fu_308_p3;
wire   [0:0] tmp_37_fu_320_p3;
wire   [0:0] tmp_38_fu_332_p3;
wire   [0:0] tmp_39_fu_344_p3;
wire   [0:0] tmp_40_fu_356_p3;
wire   [0:0] tmp_41_fu_368_p3;
wire   [0:0] tmp_42_fu_380_p3;
wire   [0:0] tmp_43_fu_392_p3;
wire   [0:0] tmp_44_fu_404_p3;
wire   [0:0] tmp_45_fu_416_p3;
wire   [0:0] tmp_46_fu_428_p3;
wire   [0:0] tmp_47_fu_440_p3;
wire   [0:0] tmp_48_fu_452_p3;
wire   [0:0] tmp_49_fu_464_p3;
wire   [0:0] tmp_50_fu_476_p3;
wire   [0:0] tmp_51_fu_488_p3;
wire   [0:0] tmp_52_fu_500_p3;
wire   [0:0] tmp_53_fu_512_p3;
wire   [0:0] tmp_54_fu_524_p3;
wire   [0:0] tmp_55_fu_536_p3;
wire   [0:0] tmp_56_fu_548_p3;
wire   [0:0] tmp_57_fu_560_p3;
wire   [0:0] tmp_58_fu_572_p3;
wire   [0:0] tmp_59_fu_584_p3;
wire   [0:0] tmp_60_fu_596_p3;
wire   [1:0] zext_ln7_fu_232_p1;
wire   [1:0] zext_ln7_61_fu_244_p1;
wire   [1:0] add_ln7_fu_608_p2;
wire   [1:0] zext_ln7_63_fu_268_p1;
wire   [1:0] zext_ln7_62_fu_256_p1;
wire   [1:0] add_ln7_31_fu_618_p2;
wire   [2:0] zext_ln7_91_fu_614_p1;
wire   [2:0] zext_ln7_92_fu_624_p1;
wire   [2:0] add_ln7_32_fu_628_p2;
wire   [1:0] zext_ln7_65_fu_292_p1;
wire   [1:0] zext_ln7_64_fu_280_p1;
wire   [1:0] add_ln7_33_fu_638_p2;
wire   [1:0] zext_ln7_67_fu_316_p1;
wire   [1:0] zext_ln7_66_fu_304_p1;
wire   [1:0] add_ln7_34_fu_648_p2;
wire   [2:0] zext_ln7_94_fu_644_p1;
wire   [2:0] zext_ln7_95_fu_654_p1;
wire   [2:0] add_ln7_35_fu_658_p2;
wire   [3:0] zext_ln7_93_fu_634_p1;
wire   [3:0] zext_ln7_96_fu_664_p1;
wire   [3:0] add_ln7_36_fu_668_p2;
wire   [1:0] zext_ln7_69_fu_340_p1;
wire   [1:0] zext_ln7_68_fu_328_p1;
wire   [1:0] add_ln7_37_fu_678_p2;
wire   [1:0] zext_ln7_71_fu_364_p1;
wire   [1:0] zext_ln7_70_fu_352_p1;
wire   [1:0] add_ln7_38_fu_688_p2;
wire   [2:0] zext_ln7_98_fu_684_p1;
wire   [2:0] zext_ln7_99_fu_694_p1;
wire   [2:0] add_ln7_39_fu_698_p2;
wire   [1:0] zext_ln7_73_fu_388_p1;
wire   [1:0] zext_ln7_72_fu_376_p1;
wire   [1:0] add_ln7_40_fu_708_p2;
wire   [1:0] zext_ln7_75_fu_412_p1;
wire   [1:0] zext_ln7_74_fu_400_p1;
wire   [1:0] add_ln7_41_fu_718_p2;
wire   [2:0] zext_ln7_101_fu_714_p1;
wire   [2:0] zext_ln7_102_fu_724_p1;
wire   [2:0] add_ln7_42_fu_728_p2;
wire   [3:0] zext_ln7_100_fu_704_p1;
wire   [3:0] zext_ln7_103_fu_734_p1;
wire   [3:0] add_ln7_43_fu_738_p2;
wire   [4:0] zext_ln7_97_fu_674_p1;
wire   [4:0] zext_ln7_104_fu_744_p1;
wire   [1:0] zext_ln7_77_fu_436_p1;
wire   [1:0] zext_ln7_76_fu_424_p1;
wire   [1:0] add_ln7_45_fu_754_p2;
wire   [1:0] zext_ln7_79_fu_460_p1;
wire   [1:0] zext_ln7_78_fu_448_p1;
wire   [1:0] add_ln7_46_fu_764_p2;
wire   [2:0] zext_ln7_106_fu_760_p1;
wire   [2:0] zext_ln7_107_fu_770_p1;
wire   [2:0] add_ln7_47_fu_774_p2;
wire   [1:0] zext_ln7_81_fu_484_p1;
wire   [1:0] zext_ln7_80_fu_472_p1;
wire   [1:0] add_ln7_48_fu_784_p2;
wire   [1:0] zext_ln7_83_fu_508_p1;
wire   [1:0] zext_ln7_82_fu_496_p1;
wire   [1:0] add_ln7_49_fu_794_p2;
wire   [2:0] zext_ln7_109_fu_790_p1;
wire   [2:0] zext_ln7_110_fu_800_p1;
wire   [2:0] add_ln7_50_fu_804_p2;
wire   [3:0] zext_ln7_108_fu_780_p1;
wire   [3:0] zext_ln7_111_fu_810_p1;
wire   [3:0] add_ln7_51_fu_814_p2;
wire   [1:0] zext_ln7_85_fu_532_p1;
wire   [1:0] zext_ln7_84_fu_520_p1;
wire   [1:0] add_ln7_52_fu_824_p2;
wire   [1:0] zext_ln7_87_fu_556_p1;
wire   [1:0] zext_ln7_86_fu_544_p1;
wire   [1:0] add_ln7_53_fu_834_p2;
wire   [2:0] zext_ln7_113_fu_830_p1;
wire   [2:0] zext_ln7_114_fu_840_p1;
wire   [2:0] add_ln7_54_fu_844_p2;
wire   [1:0] zext_ln7_89_fu_580_p1;
wire   [1:0] zext_ln7_88_fu_568_p1;
wire   [1:0] add_ln7_55_fu_854_p2;
wire   [1:0] zext_ln7_121_fu_604_p1;
wire   [1:0] zext_ln7_90_fu_592_p1;
wire   [1:0] add_ln7_56_fu_864_p2;
wire   [2:0] zext_ln7_116_fu_860_p1;
wire   [2:0] zext_ln7_117_fu_870_p1;
wire   [2:0] add_ln7_57_fu_874_p2;
wire   [3:0] zext_ln7_115_fu_850_p1;
wire   [3:0] zext_ln7_118_fu_880_p1;
wire   [3:0] add_ln7_58_fu_884_p2;
wire   [4:0] zext_ln7_112_fu_820_p1;
wire   [4:0] zext_ln7_119_fu_890_p1;
wire   [5:0] zext_ln7_105_fu_900_p1;
wire   [5:0] zext_ln7_120_fu_903_p1;
wire    ap_CS_fsm_state7;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state4) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state4)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cmpr_num_0_reg_168 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln26_reg_926 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        cmpr_num_0_reg_168 <= cmpr_num_reg_930;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_157 <= i_fu_186_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_157 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln26_reg_926 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln7_44_reg_945 <= add_ln7_44_fu_748_p2;
        add_ln7_59_reg_950 <= add_ln7_59_fu_894_p2;
        zext_ln27_2_reg_940[7 : 0] <= zext_ln27_2_fu_227_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cmpr_num_reg_930 <= cmpr_num_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln26_reg_926 <= icmp_ln26_fu_197_p2;
        icmp_ln26_reg_926_pp1_iter1_reg <= icmp_ln26_reg_926;
    end
end

always @ (*) begin
    if ((icmp_ln26_fu_197_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln26_reg_926 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_cmpr_num_0_phi_fu_172_p4 = cmpr_num_reg_930;
    end else begin
        ap_phi_mux_cmpr_num_0_phi_fu_172_p4 = cmpr_num_0_reg_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        cmpr_local_ce0 = 1'b1;
    end else begin
        cmpr_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln26_reg_926 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        cmpr_local_we0 = 1'b1;
    end else begin
        cmpr_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        cmprpop_local_address0 = zext_ln27_2_reg_940;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cmprpop_local_address0 = zext_ln24_fu_192_p1;
    end else begin
        cmprpop_local_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        cmprpop_local_ce0 = 1'b1;
    end else begin
        cmprpop_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        cmprpop_local_d0 = add_ln7_60_fu_906_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cmprpop_local_d0 = 6'd0;
    end else begin
        cmprpop_local_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln26_reg_926_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((icmp_ln23_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        cmprpop_local_we0 = 1'b1;
    end else begin
        cmprpop_local_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_180_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln26_fu_197_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln26_fu_197_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_213_p2 = (chunk_num + zext_ln27_fu_209_p1);

assign add_ln7_31_fu_618_p2 = (zext_ln7_63_fu_268_p1 + zext_ln7_62_fu_256_p1);

assign add_ln7_32_fu_628_p2 = (zext_ln7_91_fu_614_p1 + zext_ln7_92_fu_624_p1);

assign add_ln7_33_fu_638_p2 = (zext_ln7_65_fu_292_p1 + zext_ln7_64_fu_280_p1);

assign add_ln7_34_fu_648_p2 = (zext_ln7_67_fu_316_p1 + zext_ln7_66_fu_304_p1);

assign add_ln7_35_fu_658_p2 = (zext_ln7_94_fu_644_p1 + zext_ln7_95_fu_654_p1);

assign add_ln7_36_fu_668_p2 = (zext_ln7_93_fu_634_p1 + zext_ln7_96_fu_664_p1);

assign add_ln7_37_fu_678_p2 = (zext_ln7_69_fu_340_p1 + zext_ln7_68_fu_328_p1);

assign add_ln7_38_fu_688_p2 = (zext_ln7_71_fu_364_p1 + zext_ln7_70_fu_352_p1);

assign add_ln7_39_fu_698_p2 = (zext_ln7_98_fu_684_p1 + zext_ln7_99_fu_694_p1);

assign add_ln7_40_fu_708_p2 = (zext_ln7_73_fu_388_p1 + zext_ln7_72_fu_376_p1);

assign add_ln7_41_fu_718_p2 = (zext_ln7_75_fu_412_p1 + zext_ln7_74_fu_400_p1);

assign add_ln7_42_fu_728_p2 = (zext_ln7_101_fu_714_p1 + zext_ln7_102_fu_724_p1);

assign add_ln7_43_fu_738_p2 = (zext_ln7_100_fu_704_p1 + zext_ln7_103_fu_734_p1);

assign add_ln7_44_fu_748_p2 = (zext_ln7_97_fu_674_p1 + zext_ln7_104_fu_744_p1);

assign add_ln7_45_fu_754_p2 = (zext_ln7_77_fu_436_p1 + zext_ln7_76_fu_424_p1);

assign add_ln7_46_fu_764_p2 = (zext_ln7_79_fu_460_p1 + zext_ln7_78_fu_448_p1);

assign add_ln7_47_fu_774_p2 = (zext_ln7_106_fu_760_p1 + zext_ln7_107_fu_770_p1);

assign add_ln7_48_fu_784_p2 = (zext_ln7_81_fu_484_p1 + zext_ln7_80_fu_472_p1);

assign add_ln7_49_fu_794_p2 = (zext_ln7_83_fu_508_p1 + zext_ln7_82_fu_496_p1);

assign add_ln7_50_fu_804_p2 = (zext_ln7_109_fu_790_p1 + zext_ln7_110_fu_800_p1);

assign add_ln7_51_fu_814_p2 = (zext_ln7_108_fu_780_p1 + zext_ln7_111_fu_810_p1);

assign add_ln7_52_fu_824_p2 = (zext_ln7_85_fu_532_p1 + zext_ln7_84_fu_520_p1);

assign add_ln7_53_fu_834_p2 = (zext_ln7_87_fu_556_p1 + zext_ln7_86_fu_544_p1);

assign add_ln7_54_fu_844_p2 = (zext_ln7_113_fu_830_p1 + zext_ln7_114_fu_840_p1);

assign add_ln7_55_fu_854_p2 = (zext_ln7_89_fu_580_p1 + zext_ln7_88_fu_568_p1);

assign add_ln7_56_fu_864_p2 = (zext_ln7_121_fu_604_p1 + zext_ln7_90_fu_592_p1);

assign add_ln7_57_fu_874_p2 = (zext_ln7_116_fu_860_p1 + zext_ln7_117_fu_870_p1);

assign add_ln7_58_fu_884_p2 = (zext_ln7_115_fu_850_p1 + zext_ln7_118_fu_880_p1);

assign add_ln7_59_fu_894_p2 = (zext_ln7_112_fu_820_p1 + zext_ln7_119_fu_890_p1);

assign add_ln7_60_fu_906_p2 = (zext_ln7_105_fu_900_p1 + zext_ln7_120_fu_903_p1);

assign add_ln7_fu_608_p2 = (zext_ln7_fu_232_p1 + zext_ln7_61_fu_244_p1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state4_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmpr_local_address0 = zext_ln27_2_fu_227_p1;

assign cmpr_local_d0 = input_r_q0;

assign cmpr_num_fu_203_p2 = (ap_phi_mux_cmpr_num_0_phi_fu_172_p4 + 8'd1);

assign i_fu_186_p2 = (i_0_reg_157 + 8'd1);

assign icmp_ln23_fu_180_p2 = ((i_0_reg_157 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_197_p2 = ((ap_phi_mux_cmpr_num_0_phi_fu_172_p4 == 8'd128) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln27_1_fu_218_p1;

assign tmp_31_fu_248_p3 = input_r_q0[32'd2];

assign tmp_32_fu_260_p3 = input_r_q0[32'd3];

assign tmp_33_fu_272_p3 = input_r_q0[32'd4];

assign tmp_34_fu_284_p3 = input_r_q0[32'd5];

assign tmp_35_fu_296_p3 = input_r_q0[32'd6];

assign tmp_36_fu_308_p3 = input_r_q0[32'd7];

assign tmp_37_fu_320_p3 = input_r_q0[32'd8];

assign tmp_38_fu_332_p3 = input_r_q0[32'd9];

assign tmp_39_fu_344_p3 = input_r_q0[32'd10];

assign tmp_40_fu_356_p3 = input_r_q0[32'd11];

assign tmp_41_fu_368_p3 = input_r_q0[32'd12];

assign tmp_42_fu_380_p3 = input_r_q0[32'd13];

assign tmp_43_fu_392_p3 = input_r_q0[32'd14];

assign tmp_44_fu_404_p3 = input_r_q0[32'd15];

assign tmp_45_fu_416_p3 = input_r_q0[32'd16];

assign tmp_46_fu_428_p3 = input_r_q0[32'd17];

assign tmp_47_fu_440_p3 = input_r_q0[32'd18];

assign tmp_48_fu_452_p3 = input_r_q0[32'd19];

assign tmp_49_fu_464_p3 = input_r_q0[32'd20];

assign tmp_50_fu_476_p3 = input_r_q0[32'd21];

assign tmp_51_fu_488_p3 = input_r_q0[32'd22];

assign tmp_52_fu_500_p3 = input_r_q0[32'd23];

assign tmp_53_fu_512_p3 = input_r_q0[32'd24];

assign tmp_54_fu_524_p3 = input_r_q0[32'd25];

assign tmp_55_fu_536_p3 = input_r_q0[32'd26];

assign tmp_56_fu_548_p3 = input_r_q0[32'd27];

assign tmp_57_fu_560_p3 = input_r_q0[32'd28];

assign tmp_58_fu_572_p3 = input_r_q0[32'd29];

assign tmp_59_fu_584_p3 = input_r_q0[32'd30];

assign tmp_60_fu_596_p3 = input_r_q0[32'd31];

assign tmp_fu_236_p3 = input_r_q0[32'd1];

assign trunc_ln27_fu_223_p1 = input_r_q0[0:0];

assign zext_ln24_fu_192_p1 = i_0_reg_157;

assign zext_ln27_1_fu_218_p1 = add_ln27_fu_213_p2;

assign zext_ln27_2_fu_227_p1 = cmpr_num_0_reg_168;

assign zext_ln27_fu_209_p1 = ap_phi_mux_cmpr_num_0_phi_fu_172_p4;

assign zext_ln7_100_fu_704_p1 = add_ln7_39_fu_698_p2;

assign zext_ln7_101_fu_714_p1 = add_ln7_40_fu_708_p2;

assign zext_ln7_102_fu_724_p1 = add_ln7_41_fu_718_p2;

assign zext_ln7_103_fu_734_p1 = add_ln7_42_fu_728_p2;

assign zext_ln7_104_fu_744_p1 = add_ln7_43_fu_738_p2;

assign zext_ln7_105_fu_900_p1 = add_ln7_44_reg_945;

assign zext_ln7_106_fu_760_p1 = add_ln7_45_fu_754_p2;

assign zext_ln7_107_fu_770_p1 = add_ln7_46_fu_764_p2;

assign zext_ln7_108_fu_780_p1 = add_ln7_47_fu_774_p2;

assign zext_ln7_109_fu_790_p1 = add_ln7_48_fu_784_p2;

assign zext_ln7_110_fu_800_p1 = add_ln7_49_fu_794_p2;

assign zext_ln7_111_fu_810_p1 = add_ln7_50_fu_804_p2;

assign zext_ln7_112_fu_820_p1 = add_ln7_51_fu_814_p2;

assign zext_ln7_113_fu_830_p1 = add_ln7_52_fu_824_p2;

assign zext_ln7_114_fu_840_p1 = add_ln7_53_fu_834_p2;

assign zext_ln7_115_fu_850_p1 = add_ln7_54_fu_844_p2;

assign zext_ln7_116_fu_860_p1 = add_ln7_55_fu_854_p2;

assign zext_ln7_117_fu_870_p1 = add_ln7_56_fu_864_p2;

assign zext_ln7_118_fu_880_p1 = add_ln7_57_fu_874_p2;

assign zext_ln7_119_fu_890_p1 = add_ln7_58_fu_884_p2;

assign zext_ln7_120_fu_903_p1 = add_ln7_59_reg_950;

assign zext_ln7_121_fu_604_p1 = tmp_60_fu_596_p3;

assign zext_ln7_61_fu_244_p1 = tmp_fu_236_p3;

assign zext_ln7_62_fu_256_p1 = tmp_31_fu_248_p3;

assign zext_ln7_63_fu_268_p1 = tmp_32_fu_260_p3;

assign zext_ln7_64_fu_280_p1 = tmp_33_fu_272_p3;

assign zext_ln7_65_fu_292_p1 = tmp_34_fu_284_p3;

assign zext_ln7_66_fu_304_p1 = tmp_35_fu_296_p3;

assign zext_ln7_67_fu_316_p1 = tmp_36_fu_308_p3;

assign zext_ln7_68_fu_328_p1 = tmp_37_fu_320_p3;

assign zext_ln7_69_fu_340_p1 = tmp_38_fu_332_p3;

assign zext_ln7_70_fu_352_p1 = tmp_39_fu_344_p3;

assign zext_ln7_71_fu_364_p1 = tmp_40_fu_356_p3;

assign zext_ln7_72_fu_376_p1 = tmp_41_fu_368_p3;

assign zext_ln7_73_fu_388_p1 = tmp_42_fu_380_p3;

assign zext_ln7_74_fu_400_p1 = tmp_43_fu_392_p3;

assign zext_ln7_75_fu_412_p1 = tmp_44_fu_404_p3;

assign zext_ln7_76_fu_424_p1 = tmp_45_fu_416_p3;

assign zext_ln7_77_fu_436_p1 = tmp_46_fu_428_p3;

assign zext_ln7_78_fu_448_p1 = tmp_47_fu_440_p3;

assign zext_ln7_79_fu_460_p1 = tmp_48_fu_452_p3;

assign zext_ln7_80_fu_472_p1 = tmp_49_fu_464_p3;

assign zext_ln7_81_fu_484_p1 = tmp_50_fu_476_p3;

assign zext_ln7_82_fu_496_p1 = tmp_51_fu_488_p3;

assign zext_ln7_83_fu_508_p1 = tmp_52_fu_500_p3;

assign zext_ln7_84_fu_520_p1 = tmp_53_fu_512_p3;

assign zext_ln7_85_fu_532_p1 = tmp_54_fu_524_p3;

assign zext_ln7_86_fu_544_p1 = tmp_55_fu_536_p3;

assign zext_ln7_87_fu_556_p1 = tmp_56_fu_548_p3;

assign zext_ln7_88_fu_568_p1 = tmp_57_fu_560_p3;

assign zext_ln7_89_fu_580_p1 = tmp_58_fu_572_p3;

assign zext_ln7_90_fu_592_p1 = tmp_59_fu_584_p3;

assign zext_ln7_91_fu_614_p1 = add_ln7_fu_608_p2;

assign zext_ln7_92_fu_624_p1 = add_ln7_31_fu_618_p2;

assign zext_ln7_93_fu_634_p1 = add_ln7_32_fu_628_p2;

assign zext_ln7_94_fu_644_p1 = add_ln7_33_fu_638_p2;

assign zext_ln7_95_fu_654_p1 = add_ln7_34_fu_648_p2;

assign zext_ln7_96_fu_664_p1 = add_ln7_35_fu_658_p2;

assign zext_ln7_97_fu_674_p1 = add_ln7_36_fu_668_p2;

assign zext_ln7_98_fu_684_p1 = add_ln7_37_fu_678_p2;

assign zext_ln7_99_fu_694_p1 = add_ln7_38_fu_688_p2;

assign zext_ln7_fu_232_p1 = trunc_ln27_fu_223_p1;

always @ (posedge ap_clk) begin
    zext_ln27_2_reg_940[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //tancalc_cmpr_read
