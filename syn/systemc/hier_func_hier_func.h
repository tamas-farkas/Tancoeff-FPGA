// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _hier_func_hier_func_HH_
#define _hier_func_hier_func_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hier_func_tancalc.h"
#include "hier_func_fifo.h"
#include "hier_func_fifo_w10_d16_A.h"
#include "hier_func_start_for_fifo_U0.h"
#include "hier_func_hier_func_control_s_axi.h"
#include "hier_func_hier_func_gmem0_m_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONTROL_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CONTROL_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_ADDR_WIDTH = 64,
         unsigned int C_M_AXI_GMEM0_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM0_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM0_BUSER_WIDTH = 1>
struct hier_func_hier_func : public sc_module {
    // Port declarations 68
    sc_in< sc_logic > s_axi_control_AWVALID;
    sc_out< sc_logic > s_axi_control_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_AWADDR;
    sc_in< sc_logic > s_axi_control_WVALID;
    sc_out< sc_logic > s_axi_control_WREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_WDATA;
    sc_in< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH/8> > s_axi_control_WSTRB;
    sc_in< sc_logic > s_axi_control_ARVALID;
    sc_out< sc_logic > s_axi_control_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONTROL_ADDR_WIDTH> > s_axi_control_ARADDR;
    sc_out< sc_logic > s_axi_control_RVALID;
    sc_in< sc_logic > s_axi_control_RREADY;
    sc_out< sc_uint<C_S_AXI_CONTROL_DATA_WIDTH> > s_axi_control_RDATA;
    sc_out< sc_lv<2> > s_axi_control_RRESP;
    sc_out< sc_logic > s_axi_control_BVALID;
    sc_in< sc_logic > s_axi_control_BREADY;
    sc_out< sc_lv<2> > s_axi_control_BRESP;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > interrupt;
    sc_out< sc_logic > m_axi_gmem0_AWVALID;
    sc_in< sc_logic > m_axi_gmem0_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_AWID;
    sc_out< sc_lv<8> > m_axi_gmem0_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_AWUSER_WIDTH> > m_axi_gmem0_AWUSER;
    sc_out< sc_logic > m_axi_gmem0_WVALID;
    sc_in< sc_logic > m_axi_gmem0_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH/8> > m_axi_gmem0_WSTRB;
    sc_out< sc_logic > m_axi_gmem0_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_WID;
    sc_out< sc_uint<C_M_AXI_GMEM0_WUSER_WIDTH> > m_axi_gmem0_WUSER;
    sc_out< sc_logic > m_axi_gmem0_ARVALID;
    sc_in< sc_logic > m_axi_gmem0_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM0_ADDR_WIDTH> > m_axi_gmem0_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_ARID;
    sc_out< sc_lv<8> > m_axi_gmem0_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem0_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem0_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem0_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem0_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem0_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem0_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem0_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM0_ARUSER_WIDTH> > m_axi_gmem0_ARUSER;
    sc_in< sc_logic > m_axi_gmem0_RVALID;
    sc_out< sc_logic > m_axi_gmem0_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM0_DATA_WIDTH> > m_axi_gmem0_RDATA;
    sc_in< sc_logic > m_axi_gmem0_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_RID;
    sc_in< sc_uint<C_M_AXI_GMEM0_RUSER_WIDTH> > m_axi_gmem0_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem0_RRESP;
    sc_in< sc_logic > m_axi_gmem0_BVALID;
    sc_out< sc_logic > m_axi_gmem0_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem0_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM0_ID_WIDTH> > m_axi_gmem0_BID;
    sc_in< sc_uint<C_M_AXI_GMEM0_BUSER_WIDTH> > m_axi_gmem0_BUSER;
    sc_out< sc_lv<16> > fifo_output_V_V_TDATA;
    sc_out< sc_logic > fifo_output_V_V_TVALID;
    sc_in< sc_logic > fifo_output_V_V_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<16> > ap_var_for_const8;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<64> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const4;
    sc_signal< sc_lv<3> > ap_var_for_const5;
    sc_signal< sc_lv<2> > ap_var_for_const6;
    sc_signal< sc_lv<4> > ap_var_for_const7;
    sc_signal< sc_lv<10> > ap_var_for_const9;


    // Module declarations
    hier_func_hier_func(sc_module_name name);
    SC_HAS_PROCESS(hier_func_hier_func);

    ~hier_func_hier_func();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    hier_func_hier_func_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>* hier_func_control_s_axi_U;
    hier_func_hier_func_gmem0_m_axi<0,16,64,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>* hier_func_gmem0_m_axi_U;
    hier_func_tancalc* tancalc_U0;
    hier_func_fifo* fifo_U0;
    hier_func_fifo_w10_d16_A* stream_array_line_1_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_2_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_3_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_4_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_5_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_6_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_7_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_8_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_9_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_10_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_11_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_12_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_13_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_14_V_V_U;
    hier_func_fifo_w10_d16_A* stream_array_line_15_V_V_U;
    hier_func_start_for_fifo_U0* start_for_fifo_U0_U;
    sc_signal< sc_logic > ap_rst_reg_2;
    sc_signal< sc_logic > ap_rst_reg_1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<64> > tancalc_input_V;
    sc_signal< sc_logic > gmem0_AWREADY;
    sc_signal< sc_logic > gmem0_WREADY;
    sc_signal< sc_logic > gmem0_ARREADY;
    sc_signal< sc_logic > gmem0_RVALID;
    sc_signal< sc_lv<16> > gmem0_RDATA;
    sc_signal< sc_logic > gmem0_RLAST;
    sc_signal< sc_lv<1> > gmem0_RID;
    sc_signal< sc_lv<1> > gmem0_RUSER;
    sc_signal< sc_lv<2> > gmem0_RRESP;
    sc_signal< sc_logic > gmem0_BVALID;
    sc_signal< sc_lv<2> > gmem0_BRESP;
    sc_signal< sc_lv<1> > gmem0_BID;
    sc_signal< sc_lv<1> > gmem0_BUSER;
    sc_signal< sc_logic > tancalc_U0_ap_start;
    sc_signal< sc_logic > tancalc_U0_ap_done;
    sc_signal< sc_logic > tancalc_U0_ap_continue;
    sc_signal< sc_logic > tancalc_U0_ap_idle;
    sc_signal< sc_logic > tancalc_U0_ap_ready;
    sc_signal< sc_logic > tancalc_U0_start_out;
    sc_signal< sc_logic > tancalc_U0_start_write;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_AWVALID;
    sc_signal< sc_lv<64> > tancalc_U0_m_axi_tancalc_input_V_AWADDR;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_AWID;
    sc_signal< sc_lv<32> > tancalc_U0_m_axi_tancalc_input_V_AWLEN;
    sc_signal< sc_lv<3> > tancalc_U0_m_axi_tancalc_input_V_AWSIZE;
    sc_signal< sc_lv<2> > tancalc_U0_m_axi_tancalc_input_V_AWBURST;
    sc_signal< sc_lv<2> > tancalc_U0_m_axi_tancalc_input_V_AWLOCK;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_AWCACHE;
    sc_signal< sc_lv<3> > tancalc_U0_m_axi_tancalc_input_V_AWPROT;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_AWQOS;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_AWREGION;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_AWUSER;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_WVALID;
    sc_signal< sc_lv<16> > tancalc_U0_m_axi_tancalc_input_V_WDATA;
    sc_signal< sc_lv<2> > tancalc_U0_m_axi_tancalc_input_V_WSTRB;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_WLAST;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_WID;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_WUSER;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_ARVALID;
    sc_signal< sc_lv<64> > tancalc_U0_m_axi_tancalc_input_V_ARADDR;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_ARID;
    sc_signal< sc_lv<32> > tancalc_U0_m_axi_tancalc_input_V_ARLEN;
    sc_signal< sc_lv<3> > tancalc_U0_m_axi_tancalc_input_V_ARSIZE;
    sc_signal< sc_lv<2> > tancalc_U0_m_axi_tancalc_input_V_ARBURST;
    sc_signal< sc_lv<2> > tancalc_U0_m_axi_tancalc_input_V_ARLOCK;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_ARCACHE;
    sc_signal< sc_lv<3> > tancalc_U0_m_axi_tancalc_input_V_ARPROT;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_ARQOS;
    sc_signal< sc_lv<4> > tancalc_U0_m_axi_tancalc_input_V_ARREGION;
    sc_signal< sc_lv<1> > tancalc_U0_m_axi_tancalc_input_V_ARUSER;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_RREADY;
    sc_signal< sc_logic > tancalc_U0_m_axi_tancalc_input_V_BREADY;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_1_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_1_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_2_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_2_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_3_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_3_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_4_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_4_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_5_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_5_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_6_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_6_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_7_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_7_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_8_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_8_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_9_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_9_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_10_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_10_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_11_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_11_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_12_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_12_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_13_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_13_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_14_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_14_V_V_write;
    sc_signal< sc_lv<10> > tancalc_U0_tancalc_output_line_15_V_V_din;
    sc_signal< sc_logic > tancalc_U0_tancalc_output_line_15_V_V_write;
    sc_signal< sc_logic > fifo_U0_ap_start;
    sc_signal< sc_logic > fifo_U0_ap_done;
    sc_signal< sc_logic > fifo_U0_ap_continue;
    sc_signal< sc_logic > fifo_U0_ap_idle;
    sc_signal< sc_logic > fifo_U0_ap_ready;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_1_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_2_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_3_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_4_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_5_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_6_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_7_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_8_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_9_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_10_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_11_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_12_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_13_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_14_V_V_read;
    sc_signal< sc_logic > fifo_U0_fifo_input_line_15_V_V_read;
    sc_signal< sc_lv<16> > fifo_U0_fifo_output_V_V_TDATA;
    sc_signal< sc_logic > fifo_U0_fifo_output_V_V_TVALID;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > stream_array_line_1_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_1_V_V_dout;
    sc_signal< sc_logic > stream_array_line_1_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_2_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_2_V_V_dout;
    sc_signal< sc_logic > stream_array_line_2_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_3_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_3_V_V_dout;
    sc_signal< sc_logic > stream_array_line_3_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_4_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_4_V_V_dout;
    sc_signal< sc_logic > stream_array_line_4_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_5_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_5_V_V_dout;
    sc_signal< sc_logic > stream_array_line_5_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_6_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_6_V_V_dout;
    sc_signal< sc_logic > stream_array_line_6_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_7_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_7_V_V_dout;
    sc_signal< sc_logic > stream_array_line_7_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_8_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_8_V_V_dout;
    sc_signal< sc_logic > stream_array_line_8_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_9_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_9_V_V_dout;
    sc_signal< sc_logic > stream_array_line_9_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_10_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_10_V_V_dout;
    sc_signal< sc_logic > stream_array_line_10_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_11_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_11_V_V_dout;
    sc_signal< sc_logic > stream_array_line_11_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_12_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_12_V_V_dout;
    sc_signal< sc_logic > stream_array_line_12_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_13_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_13_V_V_dout;
    sc_signal< sc_logic > stream_array_line_13_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_14_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_14_V_V_dout;
    sc_signal< sc_logic > stream_array_line_14_V_V_empty_n;
    sc_signal< sc_logic > stream_array_line_15_V_V_full_n;
    sc_signal< sc_lv<10> > stream_array_line_15_V_V_dout;
    sc_signal< sc_logic > stream_array_line_15_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_fifo_U0_din;
    sc_signal< sc_logic > start_for_fifo_U0_full_n;
    sc_signal< sc_lv<1> > start_for_fifo_U0_dout;
    sc_signal< sc_logic > start_for_fifo_U0_empty_n;
    sc_signal< sc_logic > fifo_U0_start_full_n;
    sc_signal< sc_logic > fifo_U0_start_write;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_S_AXI_WSTRB_WIDTH;
    static const int C_S_AXI_ADDR_WIDTH;
    static const sc_logic ap_const_logic_1;
    static const int C_M_AXI_GMEM0_USER_VALUE;
    static const int C_M_AXI_GMEM0_PROT_VALUE;
    static const int C_M_AXI_GMEM0_CACHE_VALUE;
    static const int C_M_AXI_ID_WIDTH;
    static const int C_M_AXI_ADDR_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_WSTRB_WIDTH;
    static const int C_M_AXI_AWUSER_WIDTH;
    static const int C_M_AXI_ARUSER_WIDTH;
    static const int C_M_AXI_WUSER_WIDTH;
    static const int C_M_AXI_RUSER_WIDTH;
    static const int C_M_AXI_BUSER_WIDTH;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_fifo_U0_ap_continue();
    void thread_fifo_U0_ap_start();
    void thread_fifo_U0_start_full_n();
    void thread_fifo_U0_start_write();
    void thread_fifo_output_V_V_TDATA();
    void thread_fifo_output_V_V_TVALID();
    void thread_start_for_fifo_U0_din();
    void thread_tancalc_U0_ap_continue();
    void thread_tancalc_U0_ap_start();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
