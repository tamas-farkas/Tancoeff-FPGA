-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tancalc_dataflow_in_loop_subloop is
port (
    m_axi_input_V_AWVALID : OUT STD_LOGIC;
    m_axi_input_V_AWREADY : IN STD_LOGIC;
    m_axi_input_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_input_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_WVALID : OUT STD_LOGIC;
    m_axi_input_V_WREADY : IN STD_LOGIC;
    m_axi_input_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_input_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_input_V_WLAST : OUT STD_LOGIC;
    m_axi_input_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_ARVALID : OUT STD_LOGIC;
    m_axi_input_V_ARREADY : IN STD_LOGIC;
    m_axi_input_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_input_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_RVALID : IN STD_LOGIC;
    m_axi_input_V_RREADY : OUT STD_LOGIC;
    m_axi_input_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_input_V_RLAST : IN STD_LOGIC;
    m_axi_input_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_BVALID : IN STD_LOGIC;
    m_axi_input_V_BREADY : OUT STD_LOGIC;
    m_axi_input_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    data_num_0_i : IN STD_LOGIC_VECTOR (6 downto 0);
    p_read : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (1023 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read19 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read20 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read21 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read22 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read23 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read24 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read25 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read26 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read27 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read28 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read29 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read30 : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read31 : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_output_V_AWVALID : OUT STD_LOGIC;
    m_axi_output_V_AWREADY : IN STD_LOGIC;
    m_axi_output_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_WVALID : OUT STD_LOGIC;
    m_axi_output_V_WREADY : IN STD_LOGIC;
    m_axi_output_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_output_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_WLAST : OUT STD_LOGIC;
    m_axi_output_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_ARVALID : OUT STD_LOGIC;
    m_axi_output_V_ARREADY : IN STD_LOGIC;
    m_axi_output_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RVALID : IN STD_LOGIC;
    m_axi_output_V_RREADY : OUT STD_LOGIC;
    m_axi_output_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_output_V_RLAST : IN STD_LOGIC;
    m_axi_output_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_BVALID : IN STD_LOGIC;
    m_axi_output_V_BREADY : OUT STD_LOGIC;
    m_axi_output_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    cmpr_chunk_num_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_V_offset_ap_vld : IN STD_LOGIC;
    data_num_0_i_ap_vld : IN STD_LOGIC;
    p_read_ap_vld : IN STD_LOGIC;
    p_read1_ap_vld : IN STD_LOGIC;
    p_read2_ap_vld : IN STD_LOGIC;
    p_read3_ap_vld : IN STD_LOGIC;
    p_read4_ap_vld : IN STD_LOGIC;
    p_read5_ap_vld : IN STD_LOGIC;
    p_read6_ap_vld : IN STD_LOGIC;
    p_read7_ap_vld : IN STD_LOGIC;
    p_read8_ap_vld : IN STD_LOGIC;
    p_read9_ap_vld : IN STD_LOGIC;
    p_read10_ap_vld : IN STD_LOGIC;
    p_read11_ap_vld : IN STD_LOGIC;
    p_read12_ap_vld : IN STD_LOGIC;
    p_read13_ap_vld : IN STD_LOGIC;
    p_read14_ap_vld : IN STD_LOGIC;
    p_read15_ap_vld : IN STD_LOGIC;
    p_read16_ap_vld : IN STD_LOGIC;
    p_read17_ap_vld : IN STD_LOGIC;
    p_read18_ap_vld : IN STD_LOGIC;
    p_read19_ap_vld : IN STD_LOGIC;
    p_read20_ap_vld : IN STD_LOGIC;
    p_read21_ap_vld : IN STD_LOGIC;
    p_read22_ap_vld : IN STD_LOGIC;
    p_read23_ap_vld : IN STD_LOGIC;
    p_read24_ap_vld : IN STD_LOGIC;
    p_read25_ap_vld : IN STD_LOGIC;
    p_read26_ap_vld : IN STD_LOGIC;
    p_read27_ap_vld : IN STD_LOGIC;
    p_read28_ap_vld : IN STD_LOGIC;
    p_read29_ap_vld : IN STD_LOGIC;
    p_read30_ap_vld : IN STD_LOGIC;
    p_read31_ap_vld : IN STD_LOGIC;
    cmpr_chunk_num_0_i_ap_vld : IN STD_LOGIC;
    output_V_offset_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of tancalc_dataflow_in_loop_subloop is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_3 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal data_read3710_U0_ap_start : STD_LOGIC;
    signal data_read3710_U0_ap_done : STD_LOGIC;
    signal data_read3710_U0_ap_continue : STD_LOGIC;
    signal data_read3710_U0_ap_idle : STD_LOGIC;
    signal data_read3710_U0_ap_ready : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_AWVALID : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_WVALID : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal data_read3710_U0_m_axi_input_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal data_read3710_U0_m_axi_input_V_WLAST : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARVALID : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal data_read3710_U0_m_axi_input_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal data_read3710_U0_m_axi_input_V_RREADY : STD_LOGIC;
    signal data_read3710_U0_m_axi_input_V_BREADY : STD_LOGIC;
    signal data_read3710_U0_data_num_0_i_c_din : STD_LOGIC_VECTOR (5 downto 0);
    signal data_read3710_U0_data_num_0_i_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_0_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_0_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_1_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_1_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_2_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_2_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_3_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_3_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_4_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_4_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_5_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_5_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_6_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_6_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_7_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_7_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_8_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_8_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_9_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_9_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_10_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_10_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_11_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_11_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_12_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_12_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_13_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_13_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_14_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_14_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_local_15_V_c_din : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_cmpr_local_15_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_0_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_0_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_1_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_1_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_2_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_2_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_3_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_3_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_4_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_4_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_5_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_5_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_6_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_6_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_7_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_7_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_8_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_8_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_9_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_9_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_10_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_10_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_11_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_11_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_12_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_12_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_13_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_13_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_14_V_c_din : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_cmprpop_local_14_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmprpop_local_15_V_c_din : STD_LOGIC_VECTOR (9 downto 0);
    signal data_read3710_U0_cmprpop_local_15_V_c_write : STD_LOGIC;
    signal data_read3710_U0_cmpr_chunk_num_0_i_c_din : STD_LOGIC_VECTOR (1 downto 0);
    signal data_read3710_U0_cmpr_chunk_num_0_i_c_write : STD_LOGIC;
    signal data_read3710_U0_output_V_offset_out_din : STD_LOGIC_VECTOR (57 downto 0);
    signal data_read3710_U0_output_V_offset_out_write : STD_LOGIC;
    signal data_read3710_U0_ap_return_0 : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_ap_return_1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_ap_return_2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_ap_return_3 : STD_LOGIC_VECTOR (1023 downto 0);
    signal data_read3710_U0_ap_return_4 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_ap_return_5 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_ap_return_6 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_read3710_U0_ap_return_7 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_channel_done_refpop_local_3_V : STD_LOGIC;
    signal refpop_local_3_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_refpop_local_3_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_refpop_local_3_V : STD_LOGIC;
    signal ap_channel_done_refpop_local_2_V : STD_LOGIC;
    signal refpop_local_2_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_refpop_local_2_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_refpop_local_2_V : STD_LOGIC;
    signal ap_channel_done_refpop_local_1_V : STD_LOGIC;
    signal refpop_local_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_refpop_local_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_refpop_local_1_V : STD_LOGIC;
    signal ap_channel_done_refpop_local_0_V : STD_LOGIC;
    signal refpop_local_0_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_refpop_local_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_refpop_local_0_V : STD_LOGIC;
    signal ap_channel_done_ref_local_3_V : STD_LOGIC;
    signal ref_local_3_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ref_local_3_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_ref_local_3_V : STD_LOGIC;
    signal ap_channel_done_ref_local_2_V : STD_LOGIC;
    signal ref_local_2_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ref_local_2_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_ref_local_2_V : STD_LOGIC;
    signal ap_channel_done_ref_local_1_V : STD_LOGIC;
    signal ref_local_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ref_local_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_ref_local_1_V : STD_LOGIC;
    signal ap_channel_done_ref_local_0_V : STD_LOGIC;
    signal ref_local_0_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_ref_local_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_ref_local_0_V : STD_LOGIC;
    signal calculation_U0_ap_start : STD_LOGIC;
    signal calculation_U0_ap_done : STD_LOGIC;
    signal calculation_U0_ap_continue : STD_LOGIC;
    signal calculation_U0_ap_idle : STD_LOGIC;
    signal calculation_U0_ap_ready : STD_LOGIC;
    signal calculation_U0_cmpr_local_0_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_1_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_2_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_3_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_4_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_5_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_6_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_7_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_8_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_9_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_10_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_11_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_12_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_13_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_14_V_read : STD_LOGIC;
    signal calculation_U0_cmpr_local_15_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_0_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_1_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_2_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_3_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_4_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_5_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_6_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_7_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_8_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_9_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_10_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_11_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_12_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_13_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_14_V_read : STD_LOGIC;
    signal calculation_U0_cmprpop_local_15_V_read : STD_LOGIC;
    signal calculation_U0_data_num_0_i_read : STD_LOGIC;
    signal calculation_U0_data_num_0_i_out_din : STD_LOGIC_VECTOR (5 downto 0);
    signal calculation_U0_data_num_0_i_out_write : STD_LOGIC;
    signal calculation_U0_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_2 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_3 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_4 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_5 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_6 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_7 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_8 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_9 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_10 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_11 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_12 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_13 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_14 : STD_LOGIC_VECTOR (0 downto 0);
    signal calculation_U0_ap_return_15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_channel_done_result_local_15_V : STD_LOGIC;
    signal result_local_15_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_15_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_15_V : STD_LOGIC;
    signal ap_channel_done_result_local_14_V : STD_LOGIC;
    signal result_local_14_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_14_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_14_V : STD_LOGIC;
    signal ap_channel_done_result_local_13_V : STD_LOGIC;
    signal result_local_13_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_13_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_13_V : STD_LOGIC;
    signal ap_channel_done_result_local_12_V : STD_LOGIC;
    signal result_local_12_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_12_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_12_V : STD_LOGIC;
    signal ap_channel_done_result_local_11_V : STD_LOGIC;
    signal result_local_11_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_11_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_11_V : STD_LOGIC;
    signal ap_channel_done_result_local_10_V : STD_LOGIC;
    signal result_local_10_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_10_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_10_V : STD_LOGIC;
    signal ap_channel_done_result_local_9_V : STD_LOGIC;
    signal result_local_9_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_9_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_9_V : STD_LOGIC;
    signal ap_channel_done_result_local_8_V : STD_LOGIC;
    signal result_local_8_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_8_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_8_V : STD_LOGIC;
    signal ap_channel_done_result_local_7_V : STD_LOGIC;
    signal result_local_7_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_7_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_7_V : STD_LOGIC;
    signal ap_channel_done_result_local_6_V : STD_LOGIC;
    signal result_local_6_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_6_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_6_V : STD_LOGIC;
    signal ap_channel_done_result_local_5_V : STD_LOGIC;
    signal result_local_5_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_5_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_5_V : STD_LOGIC;
    signal ap_channel_done_result_local_4_V : STD_LOGIC;
    signal result_local_4_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_4_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_4_V : STD_LOGIC;
    signal ap_channel_done_result_local_3_V : STD_LOGIC;
    signal result_local_3_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_3_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_3_V : STD_LOGIC;
    signal ap_channel_done_result_local_2_V : STD_LOGIC;
    signal result_local_2_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_2_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_2_V : STD_LOGIC;
    signal ap_channel_done_result_local_1_V : STD_LOGIC;
    signal result_local_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_1_V : STD_LOGIC;
    signal ap_channel_done_result_local_0_V : STD_LOGIC;
    signal result_local_0_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_result_local_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_result_local_0_V : STD_LOGIC;
    signal result_write_U0_ap_start : STD_LOGIC;
    signal result_write_U0_ap_done : STD_LOGIC;
    signal result_write_U0_ap_continue : STD_LOGIC;
    signal result_write_U0_ap_idle : STD_LOGIC;
    signal result_write_U0_ap_ready : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_AWVALID : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal result_write_U0_m_axi_output_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal result_write_U0_m_axi_output_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal result_write_U0_m_axi_output_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal result_write_U0_m_axi_output_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal result_write_U0_m_axi_output_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal result_write_U0_m_axi_output_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_WVALID : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal result_write_U0_m_axi_output_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal result_write_U0_m_axi_output_V_WLAST : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_ARVALID : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal result_write_U0_m_axi_output_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal result_write_U0_m_axi_output_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal result_write_U0_m_axi_output_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal result_write_U0_m_axi_output_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal result_write_U0_m_axi_output_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal result_write_U0_m_axi_output_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal result_write_U0_m_axi_output_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal result_write_U0_m_axi_output_V_RREADY : STD_LOGIC;
    signal result_write_U0_m_axi_output_V_BREADY : STD_LOGIC;
    signal result_write_U0_output_V_offset_read : STD_LOGIC;
    signal result_write_U0_cmpr_chunk_num_0_i_c_read : STD_LOGIC;
    signal result_write_U0_data_num_0_i_c1_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal data_num_0_i_c_full_n : STD_LOGIC;
    signal data_num_0_i_c_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal data_num_0_i_c_empty_n : STD_LOGIC;
    signal cmpr_local_0_V_c_full_n : STD_LOGIC;
    signal cmpr_local_0_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_0_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_1_V_c_full_n : STD_LOGIC;
    signal cmpr_local_1_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_1_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_2_V_c_full_n : STD_LOGIC;
    signal cmpr_local_2_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_2_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_3_V_c_full_n : STD_LOGIC;
    signal cmpr_local_3_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_3_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_4_V_c_full_n : STD_LOGIC;
    signal cmpr_local_4_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_4_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_5_V_c_full_n : STD_LOGIC;
    signal cmpr_local_5_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_5_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_6_V_c_full_n : STD_LOGIC;
    signal cmpr_local_6_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_6_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_7_V_c_full_n : STD_LOGIC;
    signal cmpr_local_7_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_7_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_8_V_c_full_n : STD_LOGIC;
    signal cmpr_local_8_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_8_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_9_V_c_full_n : STD_LOGIC;
    signal cmpr_local_9_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_9_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_10_V_c_full_n : STD_LOGIC;
    signal cmpr_local_10_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_10_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_11_V_c_full_n : STD_LOGIC;
    signal cmpr_local_11_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_11_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_12_V_c_full_n : STD_LOGIC;
    signal cmpr_local_12_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_12_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_13_V_c_full_n : STD_LOGIC;
    signal cmpr_local_13_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_13_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_14_V_c_full_n : STD_LOGIC;
    signal cmpr_local_14_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_14_V_c_empty_n : STD_LOGIC;
    signal cmpr_local_15_V_c_full_n : STD_LOGIC;
    signal cmpr_local_15_V_c_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal cmpr_local_15_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_0_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_0_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_0_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_1_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_1_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_1_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_2_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_2_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_2_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_3_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_3_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_3_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_4_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_4_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_4_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_5_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_5_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_5_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_6_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_6_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_6_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_7_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_7_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_7_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_8_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_8_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_8_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_9_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_9_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_9_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_10_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_10_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_10_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_11_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_11_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_11_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_12_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_12_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_12_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_13_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_13_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_13_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_14_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_14_V_c_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal cmprpop_local_14_V_c_empty_n : STD_LOGIC;
    signal cmprpop_local_15_V_c_full_n : STD_LOGIC;
    signal cmprpop_local_15_V_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal cmprpop_local_15_V_c_empty_n : STD_LOGIC;
    signal cmpr_chunk_num_0_i_c_full_n : STD_LOGIC;
    signal cmpr_chunk_num_0_i_c_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal cmpr_chunk_num_0_i_c_empty_n : STD_LOGIC;
    signal output_V_offset_c_full_n : STD_LOGIC;
    signal output_V_offset_c_dout : STD_LOGIC_VECTOR (57 downto 0);
    signal output_V_offset_c_empty_n : STD_LOGIC;
    signal ref_local_0_V_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal ref_local_0_V_empty_n : STD_LOGIC;
    signal ref_local_1_V_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal ref_local_1_V_empty_n : STD_LOGIC;
    signal ref_local_2_V_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal ref_local_2_V_empty_n : STD_LOGIC;
    signal ref_local_3_V_dout : STD_LOGIC_VECTOR (1023 downto 0);
    signal ref_local_3_V_empty_n : STD_LOGIC;
    signal refpop_local_0_V_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal refpop_local_0_V_empty_n : STD_LOGIC;
    signal refpop_local_1_V_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal refpop_local_1_V_empty_n : STD_LOGIC;
    signal refpop_local_2_V_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal refpop_local_2_V_empty_n : STD_LOGIC;
    signal refpop_local_3_V_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal refpop_local_3_V_empty_n : STD_LOGIC;
    signal data_num_0_i_c1_full_n : STD_LOGIC;
    signal data_num_0_i_c1_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal data_num_0_i_c1_empty_n : STD_LOGIC;
    signal result_local_0_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_0_V_empty_n : STD_LOGIC;
    signal result_local_1_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_1_V_empty_n : STD_LOGIC;
    signal result_local_2_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_2_V_empty_n : STD_LOGIC;
    signal result_local_3_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_3_V_empty_n : STD_LOGIC;
    signal result_local_4_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_4_V_empty_n : STD_LOGIC;
    signal result_local_5_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_5_V_empty_n : STD_LOGIC;
    signal result_local_6_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_6_V_empty_n : STD_LOGIC;
    signal result_local_7_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_7_V_empty_n : STD_LOGIC;
    signal result_local_8_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_8_V_empty_n : STD_LOGIC;
    signal result_local_9_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_9_V_empty_n : STD_LOGIC;
    signal result_local_10_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_10_V_empty_n : STD_LOGIC;
    signal result_local_11_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_11_V_empty_n : STD_LOGIC;
    signal result_local_12_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_12_V_empty_n : STD_LOGIC;
    signal result_local_13_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_13_V_empty_n : STD_LOGIC;
    signal result_local_14_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_14_V_empty_n : STD_LOGIC;
    signal result_local_15_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal result_local_15_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal data_read3710_U0_start_full_n : STD_LOGIC;
    signal data_read3710_U0_start_write : STD_LOGIC;
    signal calculation_U0_start_full_n : STD_LOGIC;
    signal calculation_U0_start_write : STD_LOGIC;
    signal result_write_U0_start_full_n : STD_LOGIC;
    signal result_write_U0_start_write : STD_LOGIC;

    component tancalc_data_read3710 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_input_V_AWVALID : OUT STD_LOGIC;
        m_axi_input_V_AWREADY : IN STD_LOGIC;
        m_axi_input_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_input_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_WVALID : OUT STD_LOGIC;
        m_axi_input_V_WREADY : IN STD_LOGIC;
        m_axi_input_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_input_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_input_V_WLAST : OUT STD_LOGIC;
        m_axi_input_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_ARVALID : OUT STD_LOGIC;
        m_axi_input_V_ARREADY : IN STD_LOGIC;
        m_axi_input_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_input_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_RVALID : IN STD_LOGIC;
        m_axi_input_V_RREADY : OUT STD_LOGIC;
        m_axi_input_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_input_V_RLAST : IN STD_LOGIC;
        m_axi_input_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_BVALID : IN STD_LOGIC;
        m_axi_input_V_BREADY : OUT STD_LOGIC;
        m_axi_input_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
        data_num_0_i : IN STD_LOGIC_VECTOR (6 downto 0);
        p_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (1023 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (10 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (9 downto 0);
        cmpr_chunk_num_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        data_num_0_i_c_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_num_0_i_c_full_n : IN STD_LOGIC;
        data_num_0_i_c_write : OUT STD_LOGIC;
        cmpr_local_0_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_0_V_c_full_n : IN STD_LOGIC;
        cmpr_local_0_V_c_write : OUT STD_LOGIC;
        cmpr_local_1_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_1_V_c_full_n : IN STD_LOGIC;
        cmpr_local_1_V_c_write : OUT STD_LOGIC;
        cmpr_local_2_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_2_V_c_full_n : IN STD_LOGIC;
        cmpr_local_2_V_c_write : OUT STD_LOGIC;
        cmpr_local_3_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_3_V_c_full_n : IN STD_LOGIC;
        cmpr_local_3_V_c_write : OUT STD_LOGIC;
        cmpr_local_4_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_4_V_c_full_n : IN STD_LOGIC;
        cmpr_local_4_V_c_write : OUT STD_LOGIC;
        cmpr_local_5_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_5_V_c_full_n : IN STD_LOGIC;
        cmpr_local_5_V_c_write : OUT STD_LOGIC;
        cmpr_local_6_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_6_V_c_full_n : IN STD_LOGIC;
        cmpr_local_6_V_c_write : OUT STD_LOGIC;
        cmpr_local_7_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_7_V_c_full_n : IN STD_LOGIC;
        cmpr_local_7_V_c_write : OUT STD_LOGIC;
        cmpr_local_8_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_8_V_c_full_n : IN STD_LOGIC;
        cmpr_local_8_V_c_write : OUT STD_LOGIC;
        cmpr_local_9_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_9_V_c_full_n : IN STD_LOGIC;
        cmpr_local_9_V_c_write : OUT STD_LOGIC;
        cmpr_local_10_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_10_V_c_full_n : IN STD_LOGIC;
        cmpr_local_10_V_c_write : OUT STD_LOGIC;
        cmpr_local_11_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_11_V_c_full_n : IN STD_LOGIC;
        cmpr_local_11_V_c_write : OUT STD_LOGIC;
        cmpr_local_12_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_12_V_c_full_n : IN STD_LOGIC;
        cmpr_local_12_V_c_write : OUT STD_LOGIC;
        cmpr_local_13_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_13_V_c_full_n : IN STD_LOGIC;
        cmpr_local_13_V_c_write : OUT STD_LOGIC;
        cmpr_local_14_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_14_V_c_full_n : IN STD_LOGIC;
        cmpr_local_14_V_c_write : OUT STD_LOGIC;
        cmpr_local_15_V_c_din : OUT STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_15_V_c_full_n : IN STD_LOGIC;
        cmpr_local_15_V_c_write : OUT STD_LOGIC;
        cmprpop_local_0_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_0_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_0_V_c_write : OUT STD_LOGIC;
        cmprpop_local_1_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_1_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_1_V_c_write : OUT STD_LOGIC;
        cmprpop_local_2_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_2_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_2_V_c_write : OUT STD_LOGIC;
        cmprpop_local_3_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_3_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_3_V_c_write : OUT STD_LOGIC;
        cmprpop_local_4_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_4_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_4_V_c_write : OUT STD_LOGIC;
        cmprpop_local_5_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_5_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_5_V_c_write : OUT STD_LOGIC;
        cmprpop_local_6_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_6_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_6_V_c_write : OUT STD_LOGIC;
        cmprpop_local_7_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_7_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_7_V_c_write : OUT STD_LOGIC;
        cmprpop_local_8_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_8_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_8_V_c_write : OUT STD_LOGIC;
        cmprpop_local_9_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_9_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_9_V_c_write : OUT STD_LOGIC;
        cmprpop_local_10_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_10_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_10_V_c_write : OUT STD_LOGIC;
        cmprpop_local_11_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_11_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_11_V_c_write : OUT STD_LOGIC;
        cmprpop_local_12_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_12_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_12_V_c_write : OUT STD_LOGIC;
        cmprpop_local_13_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_13_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_13_V_c_write : OUT STD_LOGIC;
        cmprpop_local_14_V_c_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_14_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_14_V_c_write : OUT STD_LOGIC;
        cmprpop_local_15_V_c_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        cmprpop_local_15_V_c_full_n : IN STD_LOGIC;
        cmprpop_local_15_V_c_write : OUT STD_LOGIC;
        cmpr_chunk_num_0_i_c_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        cmpr_chunk_num_0_i_c_full_n : IN STD_LOGIC;
        cmpr_chunk_num_0_i_c_write : OUT STD_LOGIC;
        output_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
        output_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
        output_V_offset_out_full_n : IN STD_LOGIC;
        output_V_offset_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (1023 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (10 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component tancalc_calculation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ref_local_0_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        ref_local_1_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        ref_local_2_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        ref_local_3_V_read : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_0_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_0_V_empty_n : IN STD_LOGIC;
        cmpr_local_0_V_read : OUT STD_LOGIC;
        cmpr_local_1_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_1_V_empty_n : IN STD_LOGIC;
        cmpr_local_1_V_read : OUT STD_LOGIC;
        cmpr_local_2_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_2_V_empty_n : IN STD_LOGIC;
        cmpr_local_2_V_read : OUT STD_LOGIC;
        cmpr_local_3_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_3_V_empty_n : IN STD_LOGIC;
        cmpr_local_3_V_read : OUT STD_LOGIC;
        cmpr_local_4_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_4_V_empty_n : IN STD_LOGIC;
        cmpr_local_4_V_read : OUT STD_LOGIC;
        cmpr_local_5_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_5_V_empty_n : IN STD_LOGIC;
        cmpr_local_5_V_read : OUT STD_LOGIC;
        cmpr_local_6_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_6_V_empty_n : IN STD_LOGIC;
        cmpr_local_6_V_read : OUT STD_LOGIC;
        cmpr_local_7_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_7_V_empty_n : IN STD_LOGIC;
        cmpr_local_7_V_read : OUT STD_LOGIC;
        cmpr_local_8_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_8_V_empty_n : IN STD_LOGIC;
        cmpr_local_8_V_read : OUT STD_LOGIC;
        cmpr_local_9_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_9_V_empty_n : IN STD_LOGIC;
        cmpr_local_9_V_read : OUT STD_LOGIC;
        cmpr_local_10_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_10_V_empty_n : IN STD_LOGIC;
        cmpr_local_10_V_read : OUT STD_LOGIC;
        cmpr_local_11_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_11_V_empty_n : IN STD_LOGIC;
        cmpr_local_11_V_read : OUT STD_LOGIC;
        cmpr_local_12_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_12_V_empty_n : IN STD_LOGIC;
        cmpr_local_12_V_read : OUT STD_LOGIC;
        cmpr_local_13_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_13_V_empty_n : IN STD_LOGIC;
        cmpr_local_13_V_read : OUT STD_LOGIC;
        cmpr_local_14_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_14_V_empty_n : IN STD_LOGIC;
        cmpr_local_14_V_read : OUT STD_LOGIC;
        cmpr_local_15_V_dout : IN STD_LOGIC_VECTOR (1023 downto 0);
        cmpr_local_15_V_empty_n : IN STD_LOGIC;
        cmpr_local_15_V_read : OUT STD_LOGIC;
        refpop_local_0_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
        refpop_local_1_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
        refpop_local_2_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
        refpop_local_3_V_read : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_0_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_0_V_empty_n : IN STD_LOGIC;
        cmprpop_local_0_V_read : OUT STD_LOGIC;
        cmprpop_local_1_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_1_V_empty_n : IN STD_LOGIC;
        cmprpop_local_1_V_read : OUT STD_LOGIC;
        cmprpop_local_2_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_2_V_empty_n : IN STD_LOGIC;
        cmprpop_local_2_V_read : OUT STD_LOGIC;
        cmprpop_local_3_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_3_V_empty_n : IN STD_LOGIC;
        cmprpop_local_3_V_read : OUT STD_LOGIC;
        cmprpop_local_4_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_4_V_empty_n : IN STD_LOGIC;
        cmprpop_local_4_V_read : OUT STD_LOGIC;
        cmprpop_local_5_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_5_V_empty_n : IN STD_LOGIC;
        cmprpop_local_5_V_read : OUT STD_LOGIC;
        cmprpop_local_6_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_6_V_empty_n : IN STD_LOGIC;
        cmprpop_local_6_V_read : OUT STD_LOGIC;
        cmprpop_local_7_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_7_V_empty_n : IN STD_LOGIC;
        cmprpop_local_7_V_read : OUT STD_LOGIC;
        cmprpop_local_8_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_8_V_empty_n : IN STD_LOGIC;
        cmprpop_local_8_V_read : OUT STD_LOGIC;
        cmprpop_local_9_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_9_V_empty_n : IN STD_LOGIC;
        cmprpop_local_9_V_read : OUT STD_LOGIC;
        cmprpop_local_10_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_10_V_empty_n : IN STD_LOGIC;
        cmprpop_local_10_V_read : OUT STD_LOGIC;
        cmprpop_local_11_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_11_V_empty_n : IN STD_LOGIC;
        cmprpop_local_11_V_read : OUT STD_LOGIC;
        cmprpop_local_12_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_12_V_empty_n : IN STD_LOGIC;
        cmprpop_local_12_V_read : OUT STD_LOGIC;
        cmprpop_local_13_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_13_V_empty_n : IN STD_LOGIC;
        cmprpop_local_13_V_read : OUT STD_LOGIC;
        cmprpop_local_14_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        cmprpop_local_14_V_empty_n : IN STD_LOGIC;
        cmprpop_local_14_V_read : OUT STD_LOGIC;
        cmprpop_local_15_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        cmprpop_local_15_V_empty_n : IN STD_LOGIC;
        cmprpop_local_15_V_read : OUT STD_LOGIC;
        data_num_0_i_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        data_num_0_i_empty_n : IN STD_LOGIC;
        data_num_0_i_read : OUT STD_LOGIC;
        data_num_0_i_out_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        data_num_0_i_out_full_n : IN STD_LOGIC;
        data_num_0_i_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component tancalc_result_write IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_output_V_AWVALID : OUT STD_LOGIC;
        m_axi_output_V_AWREADY : IN STD_LOGIC;
        m_axi_output_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_output_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_WVALID : OUT STD_LOGIC;
        m_axi_output_V_WREADY : IN STD_LOGIC;
        m_axi_output_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_output_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_output_V_WLAST : OUT STD_LOGIC;
        m_axi_output_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_ARVALID : OUT STD_LOGIC;
        m_axi_output_V_ARREADY : IN STD_LOGIC;
        m_axi_output_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_output_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_RVALID : IN STD_LOGIC;
        m_axi_output_V_RREADY : OUT STD_LOGIC;
        m_axi_output_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_output_V_RLAST : IN STD_LOGIC;
        m_axi_output_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_BVALID : IN STD_LOGIC;
        m_axi_output_V_BREADY : OUT STD_LOGIC;
        m_axi_output_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_V_offset_dout : IN STD_LOGIC_VECTOR (57 downto 0);
        output_V_offset_empty_n : IN STD_LOGIC;
        output_V_offset_read : OUT STD_LOGIC;
        result_local_0_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_1_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_2_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_3_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_4_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_5_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_6_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_7_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_8_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_9_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_10_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_11_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_12_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_13_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_14_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_local_15_V_read_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        cmpr_chunk_num_0_i_c_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        cmpr_chunk_num_0_i_c_empty_n : IN STD_LOGIC;
        cmpr_chunk_num_0_i_c_read : OUT STD_LOGIC;
        data_num_0_i_c1_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        data_num_0_i_c1_empty_n : IN STD_LOGIC;
        data_num_0_i_c1_read : OUT STD_LOGIC );
    end component;


    component tancalc_fifo_w6_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w1024_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1023 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1023 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w11_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w10_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w2_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w58_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (57 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (57 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component tancalc_fifo_w1_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    data_read3710_U0 : component tancalc_data_read3710
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => data_read3710_U0_ap_start,
        ap_done => data_read3710_U0_ap_done,
        ap_continue => data_read3710_U0_ap_continue,
        ap_idle => data_read3710_U0_ap_idle,
        ap_ready => data_read3710_U0_ap_ready,
        m_axi_input_V_AWVALID => data_read3710_U0_m_axi_input_V_AWVALID,
        m_axi_input_V_AWREADY => ap_const_logic_0,
        m_axi_input_V_AWADDR => data_read3710_U0_m_axi_input_V_AWADDR,
        m_axi_input_V_AWID => data_read3710_U0_m_axi_input_V_AWID,
        m_axi_input_V_AWLEN => data_read3710_U0_m_axi_input_V_AWLEN,
        m_axi_input_V_AWSIZE => data_read3710_U0_m_axi_input_V_AWSIZE,
        m_axi_input_V_AWBURST => data_read3710_U0_m_axi_input_V_AWBURST,
        m_axi_input_V_AWLOCK => data_read3710_U0_m_axi_input_V_AWLOCK,
        m_axi_input_V_AWCACHE => data_read3710_U0_m_axi_input_V_AWCACHE,
        m_axi_input_V_AWPROT => data_read3710_U0_m_axi_input_V_AWPROT,
        m_axi_input_V_AWQOS => data_read3710_U0_m_axi_input_V_AWQOS,
        m_axi_input_V_AWREGION => data_read3710_U0_m_axi_input_V_AWREGION,
        m_axi_input_V_AWUSER => data_read3710_U0_m_axi_input_V_AWUSER,
        m_axi_input_V_WVALID => data_read3710_U0_m_axi_input_V_WVALID,
        m_axi_input_V_WREADY => ap_const_logic_0,
        m_axi_input_V_WDATA => data_read3710_U0_m_axi_input_V_WDATA,
        m_axi_input_V_WSTRB => data_read3710_U0_m_axi_input_V_WSTRB,
        m_axi_input_V_WLAST => data_read3710_U0_m_axi_input_V_WLAST,
        m_axi_input_V_WID => data_read3710_U0_m_axi_input_V_WID,
        m_axi_input_V_WUSER => data_read3710_U0_m_axi_input_V_WUSER,
        m_axi_input_V_ARVALID => data_read3710_U0_m_axi_input_V_ARVALID,
        m_axi_input_V_ARREADY => m_axi_input_V_ARREADY,
        m_axi_input_V_ARADDR => data_read3710_U0_m_axi_input_V_ARADDR,
        m_axi_input_V_ARID => data_read3710_U0_m_axi_input_V_ARID,
        m_axi_input_V_ARLEN => data_read3710_U0_m_axi_input_V_ARLEN,
        m_axi_input_V_ARSIZE => data_read3710_U0_m_axi_input_V_ARSIZE,
        m_axi_input_V_ARBURST => data_read3710_U0_m_axi_input_V_ARBURST,
        m_axi_input_V_ARLOCK => data_read3710_U0_m_axi_input_V_ARLOCK,
        m_axi_input_V_ARCACHE => data_read3710_U0_m_axi_input_V_ARCACHE,
        m_axi_input_V_ARPROT => data_read3710_U0_m_axi_input_V_ARPROT,
        m_axi_input_V_ARQOS => data_read3710_U0_m_axi_input_V_ARQOS,
        m_axi_input_V_ARREGION => data_read3710_U0_m_axi_input_V_ARREGION,
        m_axi_input_V_ARUSER => data_read3710_U0_m_axi_input_V_ARUSER,
        m_axi_input_V_RVALID => m_axi_input_V_RVALID,
        m_axi_input_V_RREADY => data_read3710_U0_m_axi_input_V_RREADY,
        m_axi_input_V_RDATA => m_axi_input_V_RDATA,
        m_axi_input_V_RLAST => m_axi_input_V_RLAST,
        m_axi_input_V_RID => m_axi_input_V_RID,
        m_axi_input_V_RUSER => m_axi_input_V_RUSER,
        m_axi_input_V_RRESP => m_axi_input_V_RRESP,
        m_axi_input_V_BVALID => ap_const_logic_0,
        m_axi_input_V_BREADY => data_read3710_U0_m_axi_input_V_BREADY,
        m_axi_input_V_BRESP => ap_const_lv2_0,
        m_axi_input_V_BID => ap_const_lv1_0,
        m_axi_input_V_BUSER => ap_const_lv1_0,
        input_V_offset => input_V_offset,
        data_num_0_i => data_num_0_i,
        p_read => p_read,
        p_read1 => p_read1,
        p_read2 => p_read2,
        p_read3 => p_read3,
        p_read4 => p_read4,
        p_read5 => p_read5,
        p_read6 => p_read6,
        p_read7 => p_read7,
        p_read8 => p_read8,
        p_read9 => p_read9,
        p_read10 => p_read10,
        p_read11 => p_read11,
        p_read12 => p_read12,
        p_read13 => p_read13,
        p_read14 => p_read14,
        p_read15 => p_read15,
        p_read16 => p_read16,
        p_read17 => p_read17,
        p_read18 => p_read18,
        p_read19 => p_read19,
        p_read20 => p_read20,
        p_read21 => p_read21,
        p_read22 => p_read22,
        p_read23 => p_read23,
        p_read24 => p_read24,
        p_read25 => p_read25,
        p_read26 => p_read26,
        p_read27 => p_read27,
        p_read28 => p_read28,
        p_read29 => p_read29,
        p_read30 => p_read30,
        p_read31 => p_read31,
        cmpr_chunk_num_0_i => cmpr_chunk_num_0_i,
        data_num_0_i_c_din => data_read3710_U0_data_num_0_i_c_din,
        data_num_0_i_c_full_n => data_num_0_i_c_full_n,
        data_num_0_i_c_write => data_read3710_U0_data_num_0_i_c_write,
        cmpr_local_0_V_c_din => data_read3710_U0_cmpr_local_0_V_c_din,
        cmpr_local_0_V_c_full_n => cmpr_local_0_V_c_full_n,
        cmpr_local_0_V_c_write => data_read3710_U0_cmpr_local_0_V_c_write,
        cmpr_local_1_V_c_din => data_read3710_U0_cmpr_local_1_V_c_din,
        cmpr_local_1_V_c_full_n => cmpr_local_1_V_c_full_n,
        cmpr_local_1_V_c_write => data_read3710_U0_cmpr_local_1_V_c_write,
        cmpr_local_2_V_c_din => data_read3710_U0_cmpr_local_2_V_c_din,
        cmpr_local_2_V_c_full_n => cmpr_local_2_V_c_full_n,
        cmpr_local_2_V_c_write => data_read3710_U0_cmpr_local_2_V_c_write,
        cmpr_local_3_V_c_din => data_read3710_U0_cmpr_local_3_V_c_din,
        cmpr_local_3_V_c_full_n => cmpr_local_3_V_c_full_n,
        cmpr_local_3_V_c_write => data_read3710_U0_cmpr_local_3_V_c_write,
        cmpr_local_4_V_c_din => data_read3710_U0_cmpr_local_4_V_c_din,
        cmpr_local_4_V_c_full_n => cmpr_local_4_V_c_full_n,
        cmpr_local_4_V_c_write => data_read3710_U0_cmpr_local_4_V_c_write,
        cmpr_local_5_V_c_din => data_read3710_U0_cmpr_local_5_V_c_din,
        cmpr_local_5_V_c_full_n => cmpr_local_5_V_c_full_n,
        cmpr_local_5_V_c_write => data_read3710_U0_cmpr_local_5_V_c_write,
        cmpr_local_6_V_c_din => data_read3710_U0_cmpr_local_6_V_c_din,
        cmpr_local_6_V_c_full_n => cmpr_local_6_V_c_full_n,
        cmpr_local_6_V_c_write => data_read3710_U0_cmpr_local_6_V_c_write,
        cmpr_local_7_V_c_din => data_read3710_U0_cmpr_local_7_V_c_din,
        cmpr_local_7_V_c_full_n => cmpr_local_7_V_c_full_n,
        cmpr_local_7_V_c_write => data_read3710_U0_cmpr_local_7_V_c_write,
        cmpr_local_8_V_c_din => data_read3710_U0_cmpr_local_8_V_c_din,
        cmpr_local_8_V_c_full_n => cmpr_local_8_V_c_full_n,
        cmpr_local_8_V_c_write => data_read3710_U0_cmpr_local_8_V_c_write,
        cmpr_local_9_V_c_din => data_read3710_U0_cmpr_local_9_V_c_din,
        cmpr_local_9_V_c_full_n => cmpr_local_9_V_c_full_n,
        cmpr_local_9_V_c_write => data_read3710_U0_cmpr_local_9_V_c_write,
        cmpr_local_10_V_c_din => data_read3710_U0_cmpr_local_10_V_c_din,
        cmpr_local_10_V_c_full_n => cmpr_local_10_V_c_full_n,
        cmpr_local_10_V_c_write => data_read3710_U0_cmpr_local_10_V_c_write,
        cmpr_local_11_V_c_din => data_read3710_U0_cmpr_local_11_V_c_din,
        cmpr_local_11_V_c_full_n => cmpr_local_11_V_c_full_n,
        cmpr_local_11_V_c_write => data_read3710_U0_cmpr_local_11_V_c_write,
        cmpr_local_12_V_c_din => data_read3710_U0_cmpr_local_12_V_c_din,
        cmpr_local_12_V_c_full_n => cmpr_local_12_V_c_full_n,
        cmpr_local_12_V_c_write => data_read3710_U0_cmpr_local_12_V_c_write,
        cmpr_local_13_V_c_din => data_read3710_U0_cmpr_local_13_V_c_din,
        cmpr_local_13_V_c_full_n => cmpr_local_13_V_c_full_n,
        cmpr_local_13_V_c_write => data_read3710_U0_cmpr_local_13_V_c_write,
        cmpr_local_14_V_c_din => data_read3710_U0_cmpr_local_14_V_c_din,
        cmpr_local_14_V_c_full_n => cmpr_local_14_V_c_full_n,
        cmpr_local_14_V_c_write => data_read3710_U0_cmpr_local_14_V_c_write,
        cmpr_local_15_V_c_din => data_read3710_U0_cmpr_local_15_V_c_din,
        cmpr_local_15_V_c_full_n => cmpr_local_15_V_c_full_n,
        cmpr_local_15_V_c_write => data_read3710_U0_cmpr_local_15_V_c_write,
        cmprpop_local_0_V_c_din => data_read3710_U0_cmprpop_local_0_V_c_din,
        cmprpop_local_0_V_c_full_n => cmprpop_local_0_V_c_full_n,
        cmprpop_local_0_V_c_write => data_read3710_U0_cmprpop_local_0_V_c_write,
        cmprpop_local_1_V_c_din => data_read3710_U0_cmprpop_local_1_V_c_din,
        cmprpop_local_1_V_c_full_n => cmprpop_local_1_V_c_full_n,
        cmprpop_local_1_V_c_write => data_read3710_U0_cmprpop_local_1_V_c_write,
        cmprpop_local_2_V_c_din => data_read3710_U0_cmprpop_local_2_V_c_din,
        cmprpop_local_2_V_c_full_n => cmprpop_local_2_V_c_full_n,
        cmprpop_local_2_V_c_write => data_read3710_U0_cmprpop_local_2_V_c_write,
        cmprpop_local_3_V_c_din => data_read3710_U0_cmprpop_local_3_V_c_din,
        cmprpop_local_3_V_c_full_n => cmprpop_local_3_V_c_full_n,
        cmprpop_local_3_V_c_write => data_read3710_U0_cmprpop_local_3_V_c_write,
        cmprpop_local_4_V_c_din => data_read3710_U0_cmprpop_local_4_V_c_din,
        cmprpop_local_4_V_c_full_n => cmprpop_local_4_V_c_full_n,
        cmprpop_local_4_V_c_write => data_read3710_U0_cmprpop_local_4_V_c_write,
        cmprpop_local_5_V_c_din => data_read3710_U0_cmprpop_local_5_V_c_din,
        cmprpop_local_5_V_c_full_n => cmprpop_local_5_V_c_full_n,
        cmprpop_local_5_V_c_write => data_read3710_U0_cmprpop_local_5_V_c_write,
        cmprpop_local_6_V_c_din => data_read3710_U0_cmprpop_local_6_V_c_din,
        cmprpop_local_6_V_c_full_n => cmprpop_local_6_V_c_full_n,
        cmprpop_local_6_V_c_write => data_read3710_U0_cmprpop_local_6_V_c_write,
        cmprpop_local_7_V_c_din => data_read3710_U0_cmprpop_local_7_V_c_din,
        cmprpop_local_7_V_c_full_n => cmprpop_local_7_V_c_full_n,
        cmprpop_local_7_V_c_write => data_read3710_U0_cmprpop_local_7_V_c_write,
        cmprpop_local_8_V_c_din => data_read3710_U0_cmprpop_local_8_V_c_din,
        cmprpop_local_8_V_c_full_n => cmprpop_local_8_V_c_full_n,
        cmprpop_local_8_V_c_write => data_read3710_U0_cmprpop_local_8_V_c_write,
        cmprpop_local_9_V_c_din => data_read3710_U0_cmprpop_local_9_V_c_din,
        cmprpop_local_9_V_c_full_n => cmprpop_local_9_V_c_full_n,
        cmprpop_local_9_V_c_write => data_read3710_U0_cmprpop_local_9_V_c_write,
        cmprpop_local_10_V_c_din => data_read3710_U0_cmprpop_local_10_V_c_din,
        cmprpop_local_10_V_c_full_n => cmprpop_local_10_V_c_full_n,
        cmprpop_local_10_V_c_write => data_read3710_U0_cmprpop_local_10_V_c_write,
        cmprpop_local_11_V_c_din => data_read3710_U0_cmprpop_local_11_V_c_din,
        cmprpop_local_11_V_c_full_n => cmprpop_local_11_V_c_full_n,
        cmprpop_local_11_V_c_write => data_read3710_U0_cmprpop_local_11_V_c_write,
        cmprpop_local_12_V_c_din => data_read3710_U0_cmprpop_local_12_V_c_din,
        cmprpop_local_12_V_c_full_n => cmprpop_local_12_V_c_full_n,
        cmprpop_local_12_V_c_write => data_read3710_U0_cmprpop_local_12_V_c_write,
        cmprpop_local_13_V_c_din => data_read3710_U0_cmprpop_local_13_V_c_din,
        cmprpop_local_13_V_c_full_n => cmprpop_local_13_V_c_full_n,
        cmprpop_local_13_V_c_write => data_read3710_U0_cmprpop_local_13_V_c_write,
        cmprpop_local_14_V_c_din => data_read3710_U0_cmprpop_local_14_V_c_din,
        cmprpop_local_14_V_c_full_n => cmprpop_local_14_V_c_full_n,
        cmprpop_local_14_V_c_write => data_read3710_U0_cmprpop_local_14_V_c_write,
        cmprpop_local_15_V_c_din => data_read3710_U0_cmprpop_local_15_V_c_din,
        cmprpop_local_15_V_c_full_n => cmprpop_local_15_V_c_full_n,
        cmprpop_local_15_V_c_write => data_read3710_U0_cmprpop_local_15_V_c_write,
        cmpr_chunk_num_0_i_c_din => data_read3710_U0_cmpr_chunk_num_0_i_c_din,
        cmpr_chunk_num_0_i_c_full_n => cmpr_chunk_num_0_i_c_full_n,
        cmpr_chunk_num_0_i_c_write => data_read3710_U0_cmpr_chunk_num_0_i_c_write,
        output_V_offset => output_V_offset,
        output_V_offset_out_din => data_read3710_U0_output_V_offset_out_din,
        output_V_offset_out_full_n => output_V_offset_c_full_n,
        output_V_offset_out_write => data_read3710_U0_output_V_offset_out_write,
        ap_return_0 => data_read3710_U0_ap_return_0,
        ap_return_1 => data_read3710_U0_ap_return_1,
        ap_return_2 => data_read3710_U0_ap_return_2,
        ap_return_3 => data_read3710_U0_ap_return_3,
        ap_return_4 => data_read3710_U0_ap_return_4,
        ap_return_5 => data_read3710_U0_ap_return_5,
        ap_return_6 => data_read3710_U0_ap_return_6,
        ap_return_7 => data_read3710_U0_ap_return_7);

    calculation_U0 : component tancalc_calculation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => calculation_U0_ap_start,
        ap_done => calculation_U0_ap_done,
        ap_continue => calculation_U0_ap_continue,
        ap_idle => calculation_U0_ap_idle,
        ap_ready => calculation_U0_ap_ready,
        ref_local_0_V_read => ref_local_0_V_dout,
        ref_local_1_V_read => ref_local_1_V_dout,
        ref_local_2_V_read => ref_local_2_V_dout,
        ref_local_3_V_read => ref_local_3_V_dout,
        cmpr_local_0_V_dout => cmpr_local_0_V_c_dout,
        cmpr_local_0_V_empty_n => cmpr_local_0_V_c_empty_n,
        cmpr_local_0_V_read => calculation_U0_cmpr_local_0_V_read,
        cmpr_local_1_V_dout => cmpr_local_1_V_c_dout,
        cmpr_local_1_V_empty_n => cmpr_local_1_V_c_empty_n,
        cmpr_local_1_V_read => calculation_U0_cmpr_local_1_V_read,
        cmpr_local_2_V_dout => cmpr_local_2_V_c_dout,
        cmpr_local_2_V_empty_n => cmpr_local_2_V_c_empty_n,
        cmpr_local_2_V_read => calculation_U0_cmpr_local_2_V_read,
        cmpr_local_3_V_dout => cmpr_local_3_V_c_dout,
        cmpr_local_3_V_empty_n => cmpr_local_3_V_c_empty_n,
        cmpr_local_3_V_read => calculation_U0_cmpr_local_3_V_read,
        cmpr_local_4_V_dout => cmpr_local_4_V_c_dout,
        cmpr_local_4_V_empty_n => cmpr_local_4_V_c_empty_n,
        cmpr_local_4_V_read => calculation_U0_cmpr_local_4_V_read,
        cmpr_local_5_V_dout => cmpr_local_5_V_c_dout,
        cmpr_local_5_V_empty_n => cmpr_local_5_V_c_empty_n,
        cmpr_local_5_V_read => calculation_U0_cmpr_local_5_V_read,
        cmpr_local_6_V_dout => cmpr_local_6_V_c_dout,
        cmpr_local_6_V_empty_n => cmpr_local_6_V_c_empty_n,
        cmpr_local_6_V_read => calculation_U0_cmpr_local_6_V_read,
        cmpr_local_7_V_dout => cmpr_local_7_V_c_dout,
        cmpr_local_7_V_empty_n => cmpr_local_7_V_c_empty_n,
        cmpr_local_7_V_read => calculation_U0_cmpr_local_7_V_read,
        cmpr_local_8_V_dout => cmpr_local_8_V_c_dout,
        cmpr_local_8_V_empty_n => cmpr_local_8_V_c_empty_n,
        cmpr_local_8_V_read => calculation_U0_cmpr_local_8_V_read,
        cmpr_local_9_V_dout => cmpr_local_9_V_c_dout,
        cmpr_local_9_V_empty_n => cmpr_local_9_V_c_empty_n,
        cmpr_local_9_V_read => calculation_U0_cmpr_local_9_V_read,
        cmpr_local_10_V_dout => cmpr_local_10_V_c_dout,
        cmpr_local_10_V_empty_n => cmpr_local_10_V_c_empty_n,
        cmpr_local_10_V_read => calculation_U0_cmpr_local_10_V_read,
        cmpr_local_11_V_dout => cmpr_local_11_V_c_dout,
        cmpr_local_11_V_empty_n => cmpr_local_11_V_c_empty_n,
        cmpr_local_11_V_read => calculation_U0_cmpr_local_11_V_read,
        cmpr_local_12_V_dout => cmpr_local_12_V_c_dout,
        cmpr_local_12_V_empty_n => cmpr_local_12_V_c_empty_n,
        cmpr_local_12_V_read => calculation_U0_cmpr_local_12_V_read,
        cmpr_local_13_V_dout => cmpr_local_13_V_c_dout,
        cmpr_local_13_V_empty_n => cmpr_local_13_V_c_empty_n,
        cmpr_local_13_V_read => calculation_U0_cmpr_local_13_V_read,
        cmpr_local_14_V_dout => cmpr_local_14_V_c_dout,
        cmpr_local_14_V_empty_n => cmpr_local_14_V_c_empty_n,
        cmpr_local_14_V_read => calculation_U0_cmpr_local_14_V_read,
        cmpr_local_15_V_dout => cmpr_local_15_V_c_dout,
        cmpr_local_15_V_empty_n => cmpr_local_15_V_c_empty_n,
        cmpr_local_15_V_read => calculation_U0_cmpr_local_15_V_read,
        refpop_local_0_V_read => refpop_local_0_V_dout,
        refpop_local_1_V_read => refpop_local_1_V_dout,
        refpop_local_2_V_read => refpop_local_2_V_dout,
        refpop_local_3_V_read => refpop_local_3_V_dout,
        cmprpop_local_0_V_dout => cmprpop_local_0_V_c_dout,
        cmprpop_local_0_V_empty_n => cmprpop_local_0_V_c_empty_n,
        cmprpop_local_0_V_read => calculation_U0_cmprpop_local_0_V_read,
        cmprpop_local_1_V_dout => cmprpop_local_1_V_c_dout,
        cmprpop_local_1_V_empty_n => cmprpop_local_1_V_c_empty_n,
        cmprpop_local_1_V_read => calculation_U0_cmprpop_local_1_V_read,
        cmprpop_local_2_V_dout => cmprpop_local_2_V_c_dout,
        cmprpop_local_2_V_empty_n => cmprpop_local_2_V_c_empty_n,
        cmprpop_local_2_V_read => calculation_U0_cmprpop_local_2_V_read,
        cmprpop_local_3_V_dout => cmprpop_local_3_V_c_dout,
        cmprpop_local_3_V_empty_n => cmprpop_local_3_V_c_empty_n,
        cmprpop_local_3_V_read => calculation_U0_cmprpop_local_3_V_read,
        cmprpop_local_4_V_dout => cmprpop_local_4_V_c_dout,
        cmprpop_local_4_V_empty_n => cmprpop_local_4_V_c_empty_n,
        cmprpop_local_4_V_read => calculation_U0_cmprpop_local_4_V_read,
        cmprpop_local_5_V_dout => cmprpop_local_5_V_c_dout,
        cmprpop_local_5_V_empty_n => cmprpop_local_5_V_c_empty_n,
        cmprpop_local_5_V_read => calculation_U0_cmprpop_local_5_V_read,
        cmprpop_local_6_V_dout => cmprpop_local_6_V_c_dout,
        cmprpop_local_6_V_empty_n => cmprpop_local_6_V_c_empty_n,
        cmprpop_local_6_V_read => calculation_U0_cmprpop_local_6_V_read,
        cmprpop_local_7_V_dout => cmprpop_local_7_V_c_dout,
        cmprpop_local_7_V_empty_n => cmprpop_local_7_V_c_empty_n,
        cmprpop_local_7_V_read => calculation_U0_cmprpop_local_7_V_read,
        cmprpop_local_8_V_dout => cmprpop_local_8_V_c_dout,
        cmprpop_local_8_V_empty_n => cmprpop_local_8_V_c_empty_n,
        cmprpop_local_8_V_read => calculation_U0_cmprpop_local_8_V_read,
        cmprpop_local_9_V_dout => cmprpop_local_9_V_c_dout,
        cmprpop_local_9_V_empty_n => cmprpop_local_9_V_c_empty_n,
        cmprpop_local_9_V_read => calculation_U0_cmprpop_local_9_V_read,
        cmprpop_local_10_V_dout => cmprpop_local_10_V_c_dout,
        cmprpop_local_10_V_empty_n => cmprpop_local_10_V_c_empty_n,
        cmprpop_local_10_V_read => calculation_U0_cmprpop_local_10_V_read,
        cmprpop_local_11_V_dout => cmprpop_local_11_V_c_dout,
        cmprpop_local_11_V_empty_n => cmprpop_local_11_V_c_empty_n,
        cmprpop_local_11_V_read => calculation_U0_cmprpop_local_11_V_read,
        cmprpop_local_12_V_dout => cmprpop_local_12_V_c_dout,
        cmprpop_local_12_V_empty_n => cmprpop_local_12_V_c_empty_n,
        cmprpop_local_12_V_read => calculation_U0_cmprpop_local_12_V_read,
        cmprpop_local_13_V_dout => cmprpop_local_13_V_c_dout,
        cmprpop_local_13_V_empty_n => cmprpop_local_13_V_c_empty_n,
        cmprpop_local_13_V_read => calculation_U0_cmprpop_local_13_V_read,
        cmprpop_local_14_V_dout => cmprpop_local_14_V_c_dout,
        cmprpop_local_14_V_empty_n => cmprpop_local_14_V_c_empty_n,
        cmprpop_local_14_V_read => calculation_U0_cmprpop_local_14_V_read,
        cmprpop_local_15_V_dout => cmprpop_local_15_V_c_dout,
        cmprpop_local_15_V_empty_n => cmprpop_local_15_V_c_empty_n,
        cmprpop_local_15_V_read => calculation_U0_cmprpop_local_15_V_read,
        data_num_0_i_dout => data_num_0_i_c_dout,
        data_num_0_i_empty_n => data_num_0_i_c_empty_n,
        data_num_0_i_read => calculation_U0_data_num_0_i_read,
        data_num_0_i_out_din => calculation_U0_data_num_0_i_out_din,
        data_num_0_i_out_full_n => data_num_0_i_c1_full_n,
        data_num_0_i_out_write => calculation_U0_data_num_0_i_out_write,
        ap_return_0 => calculation_U0_ap_return_0,
        ap_return_1 => calculation_U0_ap_return_1,
        ap_return_2 => calculation_U0_ap_return_2,
        ap_return_3 => calculation_U0_ap_return_3,
        ap_return_4 => calculation_U0_ap_return_4,
        ap_return_5 => calculation_U0_ap_return_5,
        ap_return_6 => calculation_U0_ap_return_6,
        ap_return_7 => calculation_U0_ap_return_7,
        ap_return_8 => calculation_U0_ap_return_8,
        ap_return_9 => calculation_U0_ap_return_9,
        ap_return_10 => calculation_U0_ap_return_10,
        ap_return_11 => calculation_U0_ap_return_11,
        ap_return_12 => calculation_U0_ap_return_12,
        ap_return_13 => calculation_U0_ap_return_13,
        ap_return_14 => calculation_U0_ap_return_14,
        ap_return_15 => calculation_U0_ap_return_15);

    result_write_U0 : component tancalc_result_write
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => result_write_U0_ap_start,
        ap_done => result_write_U0_ap_done,
        ap_continue => result_write_U0_ap_continue,
        ap_idle => result_write_U0_ap_idle,
        ap_ready => result_write_U0_ap_ready,
        m_axi_output_V_AWVALID => result_write_U0_m_axi_output_V_AWVALID,
        m_axi_output_V_AWREADY => m_axi_output_V_AWREADY,
        m_axi_output_V_AWADDR => result_write_U0_m_axi_output_V_AWADDR,
        m_axi_output_V_AWID => result_write_U0_m_axi_output_V_AWID,
        m_axi_output_V_AWLEN => result_write_U0_m_axi_output_V_AWLEN,
        m_axi_output_V_AWSIZE => result_write_U0_m_axi_output_V_AWSIZE,
        m_axi_output_V_AWBURST => result_write_U0_m_axi_output_V_AWBURST,
        m_axi_output_V_AWLOCK => result_write_U0_m_axi_output_V_AWLOCK,
        m_axi_output_V_AWCACHE => result_write_U0_m_axi_output_V_AWCACHE,
        m_axi_output_V_AWPROT => result_write_U0_m_axi_output_V_AWPROT,
        m_axi_output_V_AWQOS => result_write_U0_m_axi_output_V_AWQOS,
        m_axi_output_V_AWREGION => result_write_U0_m_axi_output_V_AWREGION,
        m_axi_output_V_AWUSER => result_write_U0_m_axi_output_V_AWUSER,
        m_axi_output_V_WVALID => result_write_U0_m_axi_output_V_WVALID,
        m_axi_output_V_WREADY => m_axi_output_V_WREADY,
        m_axi_output_V_WDATA => result_write_U0_m_axi_output_V_WDATA,
        m_axi_output_V_WSTRB => result_write_U0_m_axi_output_V_WSTRB,
        m_axi_output_V_WLAST => result_write_U0_m_axi_output_V_WLAST,
        m_axi_output_V_WID => result_write_U0_m_axi_output_V_WID,
        m_axi_output_V_WUSER => result_write_U0_m_axi_output_V_WUSER,
        m_axi_output_V_ARVALID => result_write_U0_m_axi_output_V_ARVALID,
        m_axi_output_V_ARREADY => ap_const_logic_0,
        m_axi_output_V_ARADDR => result_write_U0_m_axi_output_V_ARADDR,
        m_axi_output_V_ARID => result_write_U0_m_axi_output_V_ARID,
        m_axi_output_V_ARLEN => result_write_U0_m_axi_output_V_ARLEN,
        m_axi_output_V_ARSIZE => result_write_U0_m_axi_output_V_ARSIZE,
        m_axi_output_V_ARBURST => result_write_U0_m_axi_output_V_ARBURST,
        m_axi_output_V_ARLOCK => result_write_U0_m_axi_output_V_ARLOCK,
        m_axi_output_V_ARCACHE => result_write_U0_m_axi_output_V_ARCACHE,
        m_axi_output_V_ARPROT => result_write_U0_m_axi_output_V_ARPROT,
        m_axi_output_V_ARQOS => result_write_U0_m_axi_output_V_ARQOS,
        m_axi_output_V_ARREGION => result_write_U0_m_axi_output_V_ARREGION,
        m_axi_output_V_ARUSER => result_write_U0_m_axi_output_V_ARUSER,
        m_axi_output_V_RVALID => ap_const_logic_0,
        m_axi_output_V_RREADY => result_write_U0_m_axi_output_V_RREADY,
        m_axi_output_V_RDATA => ap_const_lv512_lc_1,
        m_axi_output_V_RLAST => ap_const_logic_0,
        m_axi_output_V_RID => ap_const_lv1_0,
        m_axi_output_V_RUSER => ap_const_lv1_0,
        m_axi_output_V_RRESP => ap_const_lv2_0,
        m_axi_output_V_BVALID => m_axi_output_V_BVALID,
        m_axi_output_V_BREADY => result_write_U0_m_axi_output_V_BREADY,
        m_axi_output_V_BRESP => m_axi_output_V_BRESP,
        m_axi_output_V_BID => m_axi_output_V_BID,
        m_axi_output_V_BUSER => m_axi_output_V_BUSER,
        output_V_offset_dout => output_V_offset_c_dout,
        output_V_offset_empty_n => output_V_offset_c_empty_n,
        output_V_offset_read => result_write_U0_output_V_offset_read,
        result_local_0_V_read_2 => result_local_0_V_dout,
        result_local_1_V_read_2 => result_local_1_V_dout,
        result_local_2_V_read_2 => result_local_2_V_dout,
        result_local_3_V_read_2 => result_local_3_V_dout,
        result_local_4_V_read_2 => result_local_4_V_dout,
        result_local_5_V_read_2 => result_local_5_V_dout,
        result_local_6_V_read_2 => result_local_6_V_dout,
        result_local_7_V_read_2 => result_local_7_V_dout,
        result_local_8_V_read_2 => result_local_8_V_dout,
        result_local_9_V_read_2 => result_local_9_V_dout,
        result_local_10_V_read_2 => result_local_10_V_dout,
        result_local_11_V_read_2 => result_local_11_V_dout,
        result_local_12_V_read_2 => result_local_12_V_dout,
        result_local_13_V_read_2 => result_local_13_V_dout,
        result_local_14_V_read_2 => result_local_14_V_dout,
        result_local_15_V_read_2 => result_local_15_V_dout,
        cmpr_chunk_num_0_i_c_dout => cmpr_chunk_num_0_i_c_dout,
        cmpr_chunk_num_0_i_c_empty_n => cmpr_chunk_num_0_i_c_empty_n,
        cmpr_chunk_num_0_i_c_read => result_write_U0_cmpr_chunk_num_0_i_c_read,
        data_num_0_i_c1_dout => data_num_0_i_c1_dout,
        data_num_0_i_c1_empty_n => data_num_0_i_c1_empty_n,
        data_num_0_i_c1_read => result_write_U0_data_num_0_i_c1_read);

    data_num_0_i_c_U : component tancalc_fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_data_num_0_i_c_din,
        if_full_n => data_num_0_i_c_full_n,
        if_write => data_read3710_U0_data_num_0_i_c_write,
        if_dout => data_num_0_i_c_dout,
        if_empty_n => data_num_0_i_c_empty_n,
        if_read => calculation_U0_data_num_0_i_read);

    cmpr_local_0_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_0_V_c_din,
        if_full_n => cmpr_local_0_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_0_V_c_write,
        if_dout => cmpr_local_0_V_c_dout,
        if_empty_n => cmpr_local_0_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_0_V_read);

    cmpr_local_1_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_1_V_c_din,
        if_full_n => cmpr_local_1_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_1_V_c_write,
        if_dout => cmpr_local_1_V_c_dout,
        if_empty_n => cmpr_local_1_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_1_V_read);

    cmpr_local_2_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_2_V_c_din,
        if_full_n => cmpr_local_2_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_2_V_c_write,
        if_dout => cmpr_local_2_V_c_dout,
        if_empty_n => cmpr_local_2_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_2_V_read);

    cmpr_local_3_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_3_V_c_din,
        if_full_n => cmpr_local_3_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_3_V_c_write,
        if_dout => cmpr_local_3_V_c_dout,
        if_empty_n => cmpr_local_3_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_3_V_read);

    cmpr_local_4_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_4_V_c_din,
        if_full_n => cmpr_local_4_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_4_V_c_write,
        if_dout => cmpr_local_4_V_c_dout,
        if_empty_n => cmpr_local_4_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_4_V_read);

    cmpr_local_5_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_5_V_c_din,
        if_full_n => cmpr_local_5_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_5_V_c_write,
        if_dout => cmpr_local_5_V_c_dout,
        if_empty_n => cmpr_local_5_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_5_V_read);

    cmpr_local_6_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_6_V_c_din,
        if_full_n => cmpr_local_6_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_6_V_c_write,
        if_dout => cmpr_local_6_V_c_dout,
        if_empty_n => cmpr_local_6_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_6_V_read);

    cmpr_local_7_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_7_V_c_din,
        if_full_n => cmpr_local_7_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_7_V_c_write,
        if_dout => cmpr_local_7_V_c_dout,
        if_empty_n => cmpr_local_7_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_7_V_read);

    cmpr_local_8_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_8_V_c_din,
        if_full_n => cmpr_local_8_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_8_V_c_write,
        if_dout => cmpr_local_8_V_c_dout,
        if_empty_n => cmpr_local_8_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_8_V_read);

    cmpr_local_9_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_9_V_c_din,
        if_full_n => cmpr_local_9_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_9_V_c_write,
        if_dout => cmpr_local_9_V_c_dout,
        if_empty_n => cmpr_local_9_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_9_V_read);

    cmpr_local_10_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_10_V_c_din,
        if_full_n => cmpr_local_10_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_10_V_c_write,
        if_dout => cmpr_local_10_V_c_dout,
        if_empty_n => cmpr_local_10_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_10_V_read);

    cmpr_local_11_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_11_V_c_din,
        if_full_n => cmpr_local_11_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_11_V_c_write,
        if_dout => cmpr_local_11_V_c_dout,
        if_empty_n => cmpr_local_11_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_11_V_read);

    cmpr_local_12_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_12_V_c_din,
        if_full_n => cmpr_local_12_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_12_V_c_write,
        if_dout => cmpr_local_12_V_c_dout,
        if_empty_n => cmpr_local_12_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_12_V_read);

    cmpr_local_13_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_13_V_c_din,
        if_full_n => cmpr_local_13_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_13_V_c_write,
        if_dout => cmpr_local_13_V_c_dout,
        if_empty_n => cmpr_local_13_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_13_V_read);

    cmpr_local_14_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_14_V_c_din,
        if_full_n => cmpr_local_14_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_14_V_c_write,
        if_dout => cmpr_local_14_V_c_dout,
        if_empty_n => cmpr_local_14_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_14_V_read);

    cmpr_local_15_V_c_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_local_15_V_c_din,
        if_full_n => cmpr_local_15_V_c_full_n,
        if_write => data_read3710_U0_cmpr_local_15_V_c_write,
        if_dout => cmpr_local_15_V_c_dout,
        if_empty_n => cmpr_local_15_V_c_empty_n,
        if_read => calculation_U0_cmpr_local_15_V_read);

    cmprpop_local_0_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_0_V_c_din,
        if_full_n => cmprpop_local_0_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_0_V_c_write,
        if_dout => cmprpop_local_0_V_c_dout,
        if_empty_n => cmprpop_local_0_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_0_V_read);

    cmprpop_local_1_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_1_V_c_din,
        if_full_n => cmprpop_local_1_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_1_V_c_write,
        if_dout => cmprpop_local_1_V_c_dout,
        if_empty_n => cmprpop_local_1_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_1_V_read);

    cmprpop_local_2_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_2_V_c_din,
        if_full_n => cmprpop_local_2_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_2_V_c_write,
        if_dout => cmprpop_local_2_V_c_dout,
        if_empty_n => cmprpop_local_2_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_2_V_read);

    cmprpop_local_3_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_3_V_c_din,
        if_full_n => cmprpop_local_3_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_3_V_c_write,
        if_dout => cmprpop_local_3_V_c_dout,
        if_empty_n => cmprpop_local_3_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_3_V_read);

    cmprpop_local_4_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_4_V_c_din,
        if_full_n => cmprpop_local_4_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_4_V_c_write,
        if_dout => cmprpop_local_4_V_c_dout,
        if_empty_n => cmprpop_local_4_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_4_V_read);

    cmprpop_local_5_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_5_V_c_din,
        if_full_n => cmprpop_local_5_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_5_V_c_write,
        if_dout => cmprpop_local_5_V_c_dout,
        if_empty_n => cmprpop_local_5_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_5_V_read);

    cmprpop_local_6_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_6_V_c_din,
        if_full_n => cmprpop_local_6_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_6_V_c_write,
        if_dout => cmprpop_local_6_V_c_dout,
        if_empty_n => cmprpop_local_6_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_6_V_read);

    cmprpop_local_7_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_7_V_c_din,
        if_full_n => cmprpop_local_7_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_7_V_c_write,
        if_dout => cmprpop_local_7_V_c_dout,
        if_empty_n => cmprpop_local_7_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_7_V_read);

    cmprpop_local_8_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_8_V_c_din,
        if_full_n => cmprpop_local_8_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_8_V_c_write,
        if_dout => cmprpop_local_8_V_c_dout,
        if_empty_n => cmprpop_local_8_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_8_V_read);

    cmprpop_local_9_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_9_V_c_din,
        if_full_n => cmprpop_local_9_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_9_V_c_write,
        if_dout => cmprpop_local_9_V_c_dout,
        if_empty_n => cmprpop_local_9_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_9_V_read);

    cmprpop_local_10_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_10_V_c_din,
        if_full_n => cmprpop_local_10_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_10_V_c_write,
        if_dout => cmprpop_local_10_V_c_dout,
        if_empty_n => cmprpop_local_10_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_10_V_read);

    cmprpop_local_11_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_11_V_c_din,
        if_full_n => cmprpop_local_11_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_11_V_c_write,
        if_dout => cmprpop_local_11_V_c_dout,
        if_empty_n => cmprpop_local_11_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_11_V_read);

    cmprpop_local_12_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_12_V_c_din,
        if_full_n => cmprpop_local_12_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_12_V_c_write,
        if_dout => cmprpop_local_12_V_c_dout,
        if_empty_n => cmprpop_local_12_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_12_V_read);

    cmprpop_local_13_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_13_V_c_din,
        if_full_n => cmprpop_local_13_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_13_V_c_write,
        if_dout => cmprpop_local_13_V_c_dout,
        if_empty_n => cmprpop_local_13_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_13_V_read);

    cmprpop_local_14_V_c_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_14_V_c_din,
        if_full_n => cmprpop_local_14_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_14_V_c_write,
        if_dout => cmprpop_local_14_V_c_dout,
        if_empty_n => cmprpop_local_14_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_14_V_read);

    cmprpop_local_15_V_c_U : component tancalc_fifo_w10_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmprpop_local_15_V_c_din,
        if_full_n => cmprpop_local_15_V_c_full_n,
        if_write => data_read3710_U0_cmprpop_local_15_V_c_write,
        if_dout => cmprpop_local_15_V_c_dout,
        if_empty_n => cmprpop_local_15_V_c_empty_n,
        if_read => calculation_U0_cmprpop_local_15_V_read);

    cmpr_chunk_num_0_i_c_U : component tancalc_fifo_w2_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_cmpr_chunk_num_0_i_c_din,
        if_full_n => cmpr_chunk_num_0_i_c_full_n,
        if_write => data_read3710_U0_cmpr_chunk_num_0_i_c_write,
        if_dout => cmpr_chunk_num_0_i_c_dout,
        if_empty_n => cmpr_chunk_num_0_i_c_empty_n,
        if_read => result_write_U0_cmpr_chunk_num_0_i_c_read);

    output_V_offset_c_U : component tancalc_fifo_w58_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_output_V_offset_out_din,
        if_full_n => output_V_offset_c_full_n,
        if_write => data_read3710_U0_output_V_offset_out_write,
        if_dout => output_V_offset_c_dout,
        if_empty_n => output_V_offset_c_empty_n,
        if_read => result_write_U0_output_V_offset_read);

    ref_local_0_V_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_0,
        if_full_n => ref_local_0_V_full_n,
        if_write => ap_channel_done_ref_local_0_V,
        if_dout => ref_local_0_V_dout,
        if_empty_n => ref_local_0_V_empty_n,
        if_read => calculation_U0_ap_ready);

    ref_local_1_V_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_1,
        if_full_n => ref_local_1_V_full_n,
        if_write => ap_channel_done_ref_local_1_V,
        if_dout => ref_local_1_V_dout,
        if_empty_n => ref_local_1_V_empty_n,
        if_read => calculation_U0_ap_ready);

    ref_local_2_V_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_2,
        if_full_n => ref_local_2_V_full_n,
        if_write => ap_channel_done_ref_local_2_V,
        if_dout => ref_local_2_V_dout,
        if_empty_n => ref_local_2_V_empty_n,
        if_read => calculation_U0_ap_ready);

    ref_local_3_V_U : component tancalc_fifo_w1024_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_3,
        if_full_n => ref_local_3_V_full_n,
        if_write => ap_channel_done_ref_local_3_V,
        if_dout => ref_local_3_V_dout,
        if_empty_n => ref_local_3_V_empty_n,
        if_read => calculation_U0_ap_ready);

    refpop_local_0_V_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_4,
        if_full_n => refpop_local_0_V_full_n,
        if_write => ap_channel_done_refpop_local_0_V,
        if_dout => refpop_local_0_V_dout,
        if_empty_n => refpop_local_0_V_empty_n,
        if_read => calculation_U0_ap_ready);

    refpop_local_1_V_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_5,
        if_full_n => refpop_local_1_V_full_n,
        if_write => ap_channel_done_refpop_local_1_V,
        if_dout => refpop_local_1_V_dout,
        if_empty_n => refpop_local_1_V_empty_n,
        if_read => calculation_U0_ap_ready);

    refpop_local_2_V_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_6,
        if_full_n => refpop_local_2_V_full_n,
        if_write => ap_channel_done_refpop_local_2_V,
        if_dout => refpop_local_2_V_dout,
        if_empty_n => refpop_local_2_V_empty_n,
        if_read => calculation_U0_ap_ready);

    refpop_local_3_V_U : component tancalc_fifo_w11_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => data_read3710_U0_ap_return_7,
        if_full_n => refpop_local_3_V_full_n,
        if_write => ap_channel_done_refpop_local_3_V,
        if_dout => refpop_local_3_V_dout,
        if_empty_n => refpop_local_3_V_empty_n,
        if_read => calculation_U0_ap_ready);

    data_num_0_i_c1_U : component tancalc_fifo_w6_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_data_num_0_i_out_din,
        if_full_n => data_num_0_i_c1_full_n,
        if_write => calculation_U0_data_num_0_i_out_write,
        if_dout => data_num_0_i_c1_dout,
        if_empty_n => data_num_0_i_c1_empty_n,
        if_read => result_write_U0_data_num_0_i_c1_read);

    result_local_0_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_0,
        if_full_n => result_local_0_V_full_n,
        if_write => ap_channel_done_result_local_0_V,
        if_dout => result_local_0_V_dout,
        if_empty_n => result_local_0_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_1_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_1,
        if_full_n => result_local_1_V_full_n,
        if_write => ap_channel_done_result_local_1_V,
        if_dout => result_local_1_V_dout,
        if_empty_n => result_local_1_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_2_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_2,
        if_full_n => result_local_2_V_full_n,
        if_write => ap_channel_done_result_local_2_V,
        if_dout => result_local_2_V_dout,
        if_empty_n => result_local_2_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_3_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_3,
        if_full_n => result_local_3_V_full_n,
        if_write => ap_channel_done_result_local_3_V,
        if_dout => result_local_3_V_dout,
        if_empty_n => result_local_3_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_4_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_4,
        if_full_n => result_local_4_V_full_n,
        if_write => ap_channel_done_result_local_4_V,
        if_dout => result_local_4_V_dout,
        if_empty_n => result_local_4_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_5_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_5,
        if_full_n => result_local_5_V_full_n,
        if_write => ap_channel_done_result_local_5_V,
        if_dout => result_local_5_V_dout,
        if_empty_n => result_local_5_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_6_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_6,
        if_full_n => result_local_6_V_full_n,
        if_write => ap_channel_done_result_local_6_V,
        if_dout => result_local_6_V_dout,
        if_empty_n => result_local_6_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_7_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_7,
        if_full_n => result_local_7_V_full_n,
        if_write => ap_channel_done_result_local_7_V,
        if_dout => result_local_7_V_dout,
        if_empty_n => result_local_7_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_8_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_8,
        if_full_n => result_local_8_V_full_n,
        if_write => ap_channel_done_result_local_8_V,
        if_dout => result_local_8_V_dout,
        if_empty_n => result_local_8_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_9_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_9,
        if_full_n => result_local_9_V_full_n,
        if_write => ap_channel_done_result_local_9_V,
        if_dout => result_local_9_V_dout,
        if_empty_n => result_local_9_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_10_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_10,
        if_full_n => result_local_10_V_full_n,
        if_write => ap_channel_done_result_local_10_V,
        if_dout => result_local_10_V_dout,
        if_empty_n => result_local_10_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_11_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_11,
        if_full_n => result_local_11_V_full_n,
        if_write => ap_channel_done_result_local_11_V,
        if_dout => result_local_11_V_dout,
        if_empty_n => result_local_11_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_12_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_12,
        if_full_n => result_local_12_V_full_n,
        if_write => ap_channel_done_result_local_12_V,
        if_dout => result_local_12_V_dout,
        if_empty_n => result_local_12_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_13_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_13,
        if_full_n => result_local_13_V_full_n,
        if_write => ap_channel_done_result_local_13_V,
        if_dout => result_local_13_V_dout,
        if_empty_n => result_local_13_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_14_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_14,
        if_full_n => result_local_14_V_full_n,
        if_write => ap_channel_done_result_local_14_V,
        if_dout => result_local_14_V_dout,
        if_empty_n => result_local_14_V_empty_n,
        if_read => result_write_U0_ap_ready);

    result_local_15_V_U : component tancalc_fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calculation_U0_ap_return_15,
        if_full_n => result_local_15_V_full_n,
        if_write => ap_channel_done_result_local_15_V,
        if_dout => result_local_15_V_dout,
        if_empty_n => result_local_15_V_empty_n,
        if_read => result_write_U0_ap_ready);





    ap_sync_reg_channel_write_ref_local_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ref_local_0_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ref_local_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ref_local_0_V <= ap_sync_channel_write_ref_local_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ref_local_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ref_local_1_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ref_local_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ref_local_1_V <= ap_sync_channel_write_ref_local_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ref_local_2_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ref_local_2_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ref_local_2_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ref_local_2_V <= ap_sync_channel_write_ref_local_2_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_ref_local_3_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_ref_local_3_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_ref_local_3_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_ref_local_3_V <= ap_sync_channel_write_ref_local_3_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_refpop_local_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_refpop_local_0_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_refpop_local_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_refpop_local_0_V <= ap_sync_channel_write_refpop_local_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_refpop_local_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_refpop_local_1_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_refpop_local_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_refpop_local_1_V <= ap_sync_channel_write_refpop_local_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_refpop_local_2_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_refpop_local_2_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_refpop_local_2_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_refpop_local_2_V <= ap_sync_channel_write_refpop_local_2_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_refpop_local_3_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_refpop_local_3_V <= ap_const_logic_0;
            else
                if (((data_read3710_U0_ap_done and data_read3710_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_refpop_local_3_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_refpop_local_3_V <= ap_sync_channel_write_refpop_local_3_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_0_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_0_V <= ap_sync_channel_write_result_local_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_10_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_10_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_10_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_10_V <= ap_sync_channel_write_result_local_10_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_11_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_11_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_11_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_11_V <= ap_sync_channel_write_result_local_11_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_12_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_12_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_12_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_12_V <= ap_sync_channel_write_result_local_12_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_13_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_13_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_13_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_13_V <= ap_sync_channel_write_result_local_13_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_14_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_14_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_14_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_14_V <= ap_sync_channel_write_result_local_14_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_15_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_15_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_15_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_15_V <= ap_sync_channel_write_result_local_15_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_1_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_1_V <= ap_sync_channel_write_result_local_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_2_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_2_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_2_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_2_V <= ap_sync_channel_write_result_local_2_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_3_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_3_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_3_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_3_V <= ap_sync_channel_write_result_local_3_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_4_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_4_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_4_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_4_V <= ap_sync_channel_write_result_local_4_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_5_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_5_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_5_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_5_V <= ap_sync_channel_write_result_local_5_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_6_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_6_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_6_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_6_V <= ap_sync_channel_write_result_local_6_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_7_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_7_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_7_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_7_V <= ap_sync_channel_write_result_local_7_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_8_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_8_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_8_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_8_V <= ap_sync_channel_write_result_local_8_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_result_local_9_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_result_local_9_V <= ap_const_logic_0;
            else
                if (((calculation_U0_ap_done and calculation_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_result_local_9_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_result_local_9_V <= ap_sync_channel_write_result_local_9_V;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_ref_local_0_V <= ((ap_sync_reg_channel_write_ref_local_0_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_ref_local_1_V <= ((ap_sync_reg_channel_write_ref_local_1_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_ref_local_2_V <= ((ap_sync_reg_channel_write_ref_local_2_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_ref_local_3_V <= ((ap_sync_reg_channel_write_ref_local_3_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_refpop_local_0_V <= ((ap_sync_reg_channel_write_refpop_local_0_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_refpop_local_1_V <= ((ap_sync_reg_channel_write_refpop_local_1_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_refpop_local_2_V <= ((ap_sync_reg_channel_write_refpop_local_2_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_refpop_local_3_V <= ((ap_sync_reg_channel_write_refpop_local_3_V xor ap_const_logic_1) and data_read3710_U0_ap_done);
    ap_channel_done_result_local_0_V <= ((ap_sync_reg_channel_write_result_local_0_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_10_V <= ((ap_sync_reg_channel_write_result_local_10_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_11_V <= ((ap_sync_reg_channel_write_result_local_11_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_12_V <= ((ap_sync_reg_channel_write_result_local_12_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_13_V <= ((ap_sync_reg_channel_write_result_local_13_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_14_V <= ((ap_sync_reg_channel_write_result_local_14_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_15_V <= ((ap_sync_reg_channel_write_result_local_15_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_1_V <= ((ap_sync_reg_channel_write_result_local_1_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_2_V <= ((ap_sync_reg_channel_write_result_local_2_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_3_V <= ((ap_sync_reg_channel_write_result_local_3_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_4_V <= ((ap_sync_reg_channel_write_result_local_4_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_5_V <= ((ap_sync_reg_channel_write_result_local_5_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_6_V <= ((ap_sync_reg_channel_write_result_local_6_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_7_V <= ((ap_sync_reg_channel_write_result_local_7_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_8_V <= ((ap_sync_reg_channel_write_result_local_8_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_channel_done_result_local_9_V <= ((ap_sync_reg_channel_write_result_local_9_V xor ap_const_logic_1) and calculation_U0_ap_done);
    ap_done <= result_write_U0_ap_done;
    ap_idle <= (result_write_U0_ap_idle and (result_local_15_V_empty_n xor ap_const_logic_1) and (result_local_14_V_empty_n xor ap_const_logic_1) and (result_local_13_V_empty_n xor ap_const_logic_1) and (result_local_12_V_empty_n xor ap_const_logic_1) and (result_local_11_V_empty_n xor ap_const_logic_1) and (result_local_10_V_empty_n xor ap_const_logic_1) and (result_local_9_V_empty_n xor ap_const_logic_1) and (result_local_8_V_empty_n xor ap_const_logic_1) and (result_local_7_V_empty_n xor ap_const_logic_1) and (result_local_6_V_empty_n xor ap_const_logic_1) and (result_local_5_V_empty_n xor ap_const_logic_1) and (result_local_4_V_empty_n xor ap_const_logic_1) and (result_local_3_V_empty_n xor ap_const_logic_1) and (result_local_2_V_empty_n xor ap_const_logic_1) and (result_local_1_V_empty_n xor ap_const_logic_1) and (result_local_0_V_empty_n xor ap_const_logic_1) and (refpop_local_3_V_empty_n xor ap_const_logic_1) and (refpop_local_2_V_empty_n xor ap_const_logic_1) and (refpop_local_1_V_empty_n xor ap_const_logic_1) and (refpop_local_0_V_empty_n xor ap_const_logic_1) and (ref_local_3_V_empty_n xor ap_const_logic_1) and (ref_local_2_V_empty_n xor ap_const_logic_1) and (ref_local_1_V_empty_n xor ap_const_logic_1) and (ref_local_0_V_empty_n xor ap_const_logic_1) and data_read3710_U0_ap_idle and calculation_U0_ap_idle);
    ap_ready <= data_read3710_U0_ap_ready;
    ap_sync_channel_write_ref_local_0_V <= ((ref_local_0_V_full_n and ap_channel_done_ref_local_0_V) or ap_sync_reg_channel_write_ref_local_0_V);
    ap_sync_channel_write_ref_local_1_V <= ((ref_local_1_V_full_n and ap_channel_done_ref_local_1_V) or ap_sync_reg_channel_write_ref_local_1_V);
    ap_sync_channel_write_ref_local_2_V <= ((ref_local_2_V_full_n and ap_channel_done_ref_local_2_V) or ap_sync_reg_channel_write_ref_local_2_V);
    ap_sync_channel_write_ref_local_3_V <= ((ref_local_3_V_full_n and ap_channel_done_ref_local_3_V) or ap_sync_reg_channel_write_ref_local_3_V);
    ap_sync_channel_write_refpop_local_0_V <= ((refpop_local_0_V_full_n and ap_channel_done_refpop_local_0_V) or ap_sync_reg_channel_write_refpop_local_0_V);
    ap_sync_channel_write_refpop_local_1_V <= ((refpop_local_1_V_full_n and ap_channel_done_refpop_local_1_V) or ap_sync_reg_channel_write_refpop_local_1_V);
    ap_sync_channel_write_refpop_local_2_V <= ((refpop_local_2_V_full_n and ap_channel_done_refpop_local_2_V) or ap_sync_reg_channel_write_refpop_local_2_V);
    ap_sync_channel_write_refpop_local_3_V <= ((refpop_local_3_V_full_n and ap_channel_done_refpop_local_3_V) or ap_sync_reg_channel_write_refpop_local_3_V);
    ap_sync_channel_write_result_local_0_V <= ((result_local_0_V_full_n and ap_channel_done_result_local_0_V) or ap_sync_reg_channel_write_result_local_0_V);
    ap_sync_channel_write_result_local_10_V <= ((result_local_10_V_full_n and ap_channel_done_result_local_10_V) or ap_sync_reg_channel_write_result_local_10_V);
    ap_sync_channel_write_result_local_11_V <= ((result_local_11_V_full_n and ap_channel_done_result_local_11_V) or ap_sync_reg_channel_write_result_local_11_V);
    ap_sync_channel_write_result_local_12_V <= ((result_local_12_V_full_n and ap_channel_done_result_local_12_V) or ap_sync_reg_channel_write_result_local_12_V);
    ap_sync_channel_write_result_local_13_V <= ((result_local_13_V_full_n and ap_channel_done_result_local_13_V) or ap_sync_reg_channel_write_result_local_13_V);
    ap_sync_channel_write_result_local_14_V <= ((result_local_14_V_full_n and ap_channel_done_result_local_14_V) or ap_sync_reg_channel_write_result_local_14_V);
    ap_sync_channel_write_result_local_15_V <= ((result_local_15_V_full_n and ap_channel_done_result_local_15_V) or ap_sync_reg_channel_write_result_local_15_V);
    ap_sync_channel_write_result_local_1_V <= ((result_local_1_V_full_n and ap_channel_done_result_local_1_V) or ap_sync_reg_channel_write_result_local_1_V);
    ap_sync_channel_write_result_local_2_V <= ((result_local_2_V_full_n and ap_channel_done_result_local_2_V) or ap_sync_reg_channel_write_result_local_2_V);
    ap_sync_channel_write_result_local_3_V <= ((result_local_3_V_full_n and ap_channel_done_result_local_3_V) or ap_sync_reg_channel_write_result_local_3_V);
    ap_sync_channel_write_result_local_4_V <= ((result_local_4_V_full_n and ap_channel_done_result_local_4_V) or ap_sync_reg_channel_write_result_local_4_V);
    ap_sync_channel_write_result_local_5_V <= ((result_local_5_V_full_n and ap_channel_done_result_local_5_V) or ap_sync_reg_channel_write_result_local_5_V);
    ap_sync_channel_write_result_local_6_V <= ((result_local_6_V_full_n and ap_channel_done_result_local_6_V) or ap_sync_reg_channel_write_result_local_6_V);
    ap_sync_channel_write_result_local_7_V <= ((result_local_7_V_full_n and ap_channel_done_result_local_7_V) or ap_sync_reg_channel_write_result_local_7_V);
    ap_sync_channel_write_result_local_8_V <= ((result_local_8_V_full_n and ap_channel_done_result_local_8_V) or ap_sync_reg_channel_write_result_local_8_V);
    ap_sync_channel_write_result_local_9_V <= ((result_local_9_V_full_n and ap_channel_done_result_local_9_V) or ap_sync_reg_channel_write_result_local_9_V);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= result_write_U0_ap_done;
    ap_sync_ready <= data_read3710_U0_ap_ready;
    calculation_U0_ap_continue <= (ap_sync_channel_write_result_local_9_V and ap_sync_channel_write_result_local_8_V and ap_sync_channel_write_result_local_7_V and ap_sync_channel_write_result_local_6_V and ap_sync_channel_write_result_local_5_V and ap_sync_channel_write_result_local_4_V and ap_sync_channel_write_result_local_3_V and ap_sync_channel_write_result_local_2_V and ap_sync_channel_write_result_local_1_V and ap_sync_channel_write_result_local_15_V and ap_sync_channel_write_result_local_14_V and ap_sync_channel_write_result_local_13_V and ap_sync_channel_write_result_local_12_V and ap_sync_channel_write_result_local_11_V and ap_sync_channel_write_result_local_10_V and ap_sync_channel_write_result_local_0_V);
    calculation_U0_ap_start <= (refpop_local_3_V_empty_n and refpop_local_2_V_empty_n and refpop_local_1_V_empty_n and refpop_local_0_V_empty_n and ref_local_3_V_empty_n and ref_local_2_V_empty_n and ref_local_1_V_empty_n and ref_local_0_V_empty_n);
    calculation_U0_start_full_n <= ap_const_logic_1;
    calculation_U0_start_write <= ap_const_logic_0;
    data_read3710_U0_ap_continue <= (ap_sync_channel_write_refpop_local_3_V and ap_sync_channel_write_refpop_local_2_V and ap_sync_channel_write_refpop_local_1_V and ap_sync_channel_write_refpop_local_0_V and ap_sync_channel_write_ref_local_3_V and ap_sync_channel_write_ref_local_2_V and ap_sync_channel_write_ref_local_1_V and ap_sync_channel_write_ref_local_0_V);
    data_read3710_U0_ap_start <= ap_start;
    data_read3710_U0_start_full_n <= ap_const_logic_1;
    data_read3710_U0_start_write <= ap_const_logic_0;
    m_axi_input_V_ARADDR <= data_read3710_U0_m_axi_input_V_ARADDR;
    m_axi_input_V_ARBURST <= data_read3710_U0_m_axi_input_V_ARBURST;
    m_axi_input_V_ARCACHE <= data_read3710_U0_m_axi_input_V_ARCACHE;
    m_axi_input_V_ARID <= data_read3710_U0_m_axi_input_V_ARID;
    m_axi_input_V_ARLEN <= data_read3710_U0_m_axi_input_V_ARLEN;
    m_axi_input_V_ARLOCK <= data_read3710_U0_m_axi_input_V_ARLOCK;
    m_axi_input_V_ARPROT <= data_read3710_U0_m_axi_input_V_ARPROT;
    m_axi_input_V_ARQOS <= data_read3710_U0_m_axi_input_V_ARQOS;
    m_axi_input_V_ARREGION <= data_read3710_U0_m_axi_input_V_ARREGION;
    m_axi_input_V_ARSIZE <= data_read3710_U0_m_axi_input_V_ARSIZE;
    m_axi_input_V_ARUSER <= data_read3710_U0_m_axi_input_V_ARUSER;
    m_axi_input_V_ARVALID <= data_read3710_U0_m_axi_input_V_ARVALID;
    m_axi_input_V_AWADDR <= ap_const_lv64_0;
    m_axi_input_V_AWBURST <= ap_const_lv2_0;
    m_axi_input_V_AWCACHE <= ap_const_lv4_0;
    m_axi_input_V_AWID <= ap_const_lv1_0;
    m_axi_input_V_AWLEN <= ap_const_lv32_0;
    m_axi_input_V_AWLOCK <= ap_const_lv2_0;
    m_axi_input_V_AWPROT <= ap_const_lv3_0;
    m_axi_input_V_AWQOS <= ap_const_lv4_0;
    m_axi_input_V_AWREGION <= ap_const_lv4_0;
    m_axi_input_V_AWSIZE <= ap_const_lv3_0;
    m_axi_input_V_AWUSER <= ap_const_lv1_0;
    m_axi_input_V_AWVALID <= ap_const_logic_0;
    m_axi_input_V_BREADY <= ap_const_logic_0;
    m_axi_input_V_RREADY <= data_read3710_U0_m_axi_input_V_RREADY;
    m_axi_input_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_input_V_WID <= ap_const_lv1_0;
    m_axi_input_V_WLAST <= ap_const_logic_0;
    m_axi_input_V_WSTRB <= ap_const_lv64_0;
    m_axi_input_V_WUSER <= ap_const_lv1_0;
    m_axi_input_V_WVALID <= ap_const_logic_0;
    m_axi_output_V_ARADDR <= ap_const_lv64_0;
    m_axi_output_V_ARBURST <= ap_const_lv2_0;
    m_axi_output_V_ARCACHE <= ap_const_lv4_0;
    m_axi_output_V_ARID <= ap_const_lv1_0;
    m_axi_output_V_ARLEN <= ap_const_lv32_0;
    m_axi_output_V_ARLOCK <= ap_const_lv2_0;
    m_axi_output_V_ARPROT <= ap_const_lv3_0;
    m_axi_output_V_ARQOS <= ap_const_lv4_0;
    m_axi_output_V_ARREGION <= ap_const_lv4_0;
    m_axi_output_V_ARSIZE <= ap_const_lv3_0;
    m_axi_output_V_ARUSER <= ap_const_lv1_0;
    m_axi_output_V_ARVALID <= ap_const_logic_0;
    m_axi_output_V_AWADDR <= result_write_U0_m_axi_output_V_AWADDR;
    m_axi_output_V_AWBURST <= result_write_U0_m_axi_output_V_AWBURST;
    m_axi_output_V_AWCACHE <= result_write_U0_m_axi_output_V_AWCACHE;
    m_axi_output_V_AWID <= result_write_U0_m_axi_output_V_AWID;
    m_axi_output_V_AWLEN <= result_write_U0_m_axi_output_V_AWLEN;
    m_axi_output_V_AWLOCK <= result_write_U0_m_axi_output_V_AWLOCK;
    m_axi_output_V_AWPROT <= result_write_U0_m_axi_output_V_AWPROT;
    m_axi_output_V_AWQOS <= result_write_U0_m_axi_output_V_AWQOS;
    m_axi_output_V_AWREGION <= result_write_U0_m_axi_output_V_AWREGION;
    m_axi_output_V_AWSIZE <= result_write_U0_m_axi_output_V_AWSIZE;
    m_axi_output_V_AWUSER <= result_write_U0_m_axi_output_V_AWUSER;
    m_axi_output_V_AWVALID <= result_write_U0_m_axi_output_V_AWVALID;
    m_axi_output_V_BREADY <= result_write_U0_m_axi_output_V_BREADY;
    m_axi_output_V_RREADY <= ap_const_logic_0;
    m_axi_output_V_WDATA <= result_write_U0_m_axi_output_V_WDATA;
    m_axi_output_V_WID <= result_write_U0_m_axi_output_V_WID;
    m_axi_output_V_WLAST <= result_write_U0_m_axi_output_V_WLAST;
    m_axi_output_V_WSTRB <= result_write_U0_m_axi_output_V_WSTRB;
    m_axi_output_V_WUSER <= result_write_U0_m_axi_output_V_WUSER;
    m_axi_output_V_WVALID <= result_write_U0_m_axi_output_V_WVALID;
    result_write_U0_ap_continue <= ap_continue;
    result_write_U0_ap_start <= (result_local_9_V_empty_n and result_local_8_V_empty_n and result_local_7_V_empty_n and result_local_6_V_empty_n and result_local_5_V_empty_n and result_local_4_V_empty_n and result_local_3_V_empty_n and result_local_2_V_empty_n and result_local_1_V_empty_n and result_local_15_V_empty_n and result_local_14_V_empty_n and result_local_13_V_empty_n and result_local_12_V_empty_n and result_local_11_V_empty_n and result_local_10_V_empty_n and result_local_0_V_empty_n);
    result_write_U0_start_full_n <= ap_const_logic_1;
    result_write_U0_start_write <= ap_const_logic_0;
end behav;
