// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _tancalc_data_read_1_HH_
#define _tancalc_data_read_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "tancalc_popcnt.h"

namespace ap_rtl {

struct tancalc_data_read_1 : public sc_module {
    // Port declarations 63
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_input_V_AWVALID;
    sc_in< sc_logic > m_axi_input_V_AWREADY;
    sc_out< sc_lv<64> > m_axi_input_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_input_V_AWID;
    sc_out< sc_lv<32> > m_axi_input_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_input_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_input_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_input_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_input_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_input_V_AWUSER;
    sc_out< sc_logic > m_axi_input_V_WVALID;
    sc_in< sc_logic > m_axi_input_V_WREADY;
    sc_out< sc_lv<512> > m_axi_input_V_WDATA;
    sc_out< sc_lv<64> > m_axi_input_V_WSTRB;
    sc_out< sc_logic > m_axi_input_V_WLAST;
    sc_out< sc_lv<1> > m_axi_input_V_WID;
    sc_out< sc_lv<1> > m_axi_input_V_WUSER;
    sc_out< sc_logic > m_axi_input_V_ARVALID;
    sc_in< sc_logic > m_axi_input_V_ARREADY;
    sc_out< sc_lv<64> > m_axi_input_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_input_V_ARID;
    sc_out< sc_lv<32> > m_axi_input_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_input_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_input_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_input_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_input_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_input_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_input_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_input_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_input_V_ARUSER;
    sc_in< sc_logic > m_axi_input_V_RVALID;
    sc_out< sc_logic > m_axi_input_V_RREADY;
    sc_in< sc_lv<512> > m_axi_input_V_RDATA;
    sc_in< sc_logic > m_axi_input_V_RLAST;
    sc_in< sc_lv<1> > m_axi_input_V_RID;
    sc_in< sc_lv<1> > m_axi_input_V_RUSER;
    sc_in< sc_lv<2> > m_axi_input_V_RRESP;
    sc_in< sc_logic > m_axi_input_V_BVALID;
    sc_out< sc_logic > m_axi_input_V_BREADY;
    sc_in< sc_lv<2> > m_axi_input_V_BRESP;
    sc_in< sc_lv<1> > m_axi_input_V_BID;
    sc_in< sc_lv<1> > m_axi_input_V_BUSER;
    sc_in< sc_lv<58> > input_V_offset;
    sc_out< sc_lv<10> > data_local_V_address0;
    sc_out< sc_logic > data_local_V_ce0;
    sc_out< sc_lv<128> > data_local_V_we0;
    sc_out< sc_lv<1024> > data_local_V_d0;
    sc_in< sc_lv<1024> > data_local_V_q0;
    sc_out< sc_lv<10> > datapop_local_V_address0;
    sc_out< sc_logic > datapop_local_V_ce0;
    sc_out< sc_logic > datapop_local_V_we0;
    sc_out< sc_lv<11> > datapop_local_V_d0;
    sc_in< sc_lv<11> > datapop_local_V_q0;
    sc_in< sc_lv<16> > chunk_num;


    // Module declarations
    tancalc_data_read_1(sc_module_name name);
    SC_HAS_PROCESS(tancalc_data_read_1);

    ~tancalc_data_read_1();

    sc_trace_file* mVcdFile;

    tancalc_popcnt* grp_popcnt_fu_178;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > input_V_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > input_V_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln37_reg_666;
    sc_signal< sc_lv<16> > data_part_0_reg_145;
    sc_signal< sc_lv<16> > data_num_0_reg_156;
    sc_signal< sc_lv<12> > data_part_num_0_reg_167;
    sc_signal< sc_lv<59> > add_ln215_fu_199_p2;
    sc_signal< sc_lv<59> > add_ln215_reg_655;
    sc_signal< sc_lv<1> > icmp_ln37_fu_215_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln37_reg_666_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_666_pp0_iter2_reg;
    sc_signal< sc_lv<12> > data_part_num_fu_221_p2;
    sc_signal< sc_lv<12> > data_part_num_reg_670;
    sc_signal< sc_lv<1> > trunc_ln37_fu_227_p1;
    sc_signal< sc_lv<1> > trunc_ln37_reg_675;
    sc_signal< sc_lv<16> > data_part_fu_237_p2;
    sc_signal< sc_lv<16> > data_part_reg_680;
    sc_signal< sc_lv<16> > data_num_1_fu_243_p3;
    sc_signal< sc_lv<16> > data_num_1_reg_685;
    sc_signal< sc_lv<16> > data_part_1_fu_251_p3;
    sc_signal< sc_lv<16> > data_part_1_reg_691;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<2> > trunc_ln46_fu_257_p1;
    sc_signal< sc_lv<2> > trunc_ln46_reg_698;
    sc_signal< sc_lv<2> > trunc_ln46_1_fu_261_p1;
    sc_signal< sc_lv<2> > trunc_ln46_1_reg_703;
    sc_signal< sc_lv<2> > trunc_ln46_2_fu_265_p1;
    sc_signal< sc_lv<2> > trunc_ln46_2_reg_708;
    sc_signal< sc_lv<512> > input_V_addr_read_reg_713;
    sc_signal< sc_lv<10> > data_local_V_addr_reg_718;
    sc_signal< sc_lv<1> > icmp_ln414_fu_300_p2;
    sc_signal< sc_lv<1> > icmp_ln414_reg_723;
    sc_signal< sc_lv<11> > tmp_1_fu_306_p3;
    sc_signal< sc_lv<11> > tmp_1_reg_730;
    sc_signal< sc_lv<11> > trunc_ln414_fu_313_p1;
    sc_signal< sc_lv<11> > trunc_ln414_reg_736;
    sc_signal< sc_lv<1024> > shl_ln414_fu_335_p2;
    sc_signal< sc_lv<1024> > shl_ln414_reg_742;
    sc_signal< sc_lv<1> > icmp_ln414_1_fu_341_p2;
    sc_signal< sc_lv<1> > icmp_ln414_1_reg_748;
    sc_signal< sc_lv<11> > tmp_3_fu_347_p3;
    sc_signal< sc_lv<11> > tmp_3_reg_754;
    sc_signal< sc_lv<11> > trunc_ln414_1_fu_354_p1;
    sc_signal< sc_lv<11> > trunc_ln414_1_reg_759;
    sc_signal< sc_lv<11> > sub_ln414_3_fu_380_p2;
    sc_signal< sc_lv<11> > sub_ln414_3_reg_764;
    sc_signal< sc_lv<1024> > shl_ln414_2_fu_390_p2;
    sc_signal< sc_lv<1024> > shl_ln414_2_reg_769;
    sc_signal< sc_lv<128> > shl_ln414_4_fu_411_p2;
    sc_signal< sc_lv<128> > shl_ln414_4_reg_775;
    sc_signal< sc_lv<1> > icmp_ln647_fu_417_p2;
    sc_signal< sc_lv<1> > icmp_ln647_reg_780;
    sc_signal< sc_lv<11> > trunc_ln647_fu_423_p1;
    sc_signal< sc_lv<11> > trunc_ln647_reg_787;
    sc_signal< sc_lv<10> > datapop_local_V_addr_reg_793;
    sc_signal< sc_lv<10> > datapop_local_V_addr_reg_793_pp0_iter2_reg;
    sc_signal< sc_lv<1024> > p_Result_s_fu_502_p2;
    sc_signal< sc_lv<1024> > p_Result_s_reg_798;
    sc_signal< sc_lv<11> > tmp_6_fu_560_p3;
    sc_signal< sc_lv<11> > tmp_6_reg_804;
    sc_signal< sc_lv<11> > sub_ln647_1_fu_567_p2;
    sc_signal< sc_lv<11> > sub_ln647_1_reg_811;
    sc_signal< sc_lv<512> > trunc_ln364_fu_640_p1;
    sc_signal< sc_lv<512> > trunc_ln364_reg_816;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<10> > grp_popcnt_fu_178_ap_return;
    sc_signal< sc_logic > grp_popcnt_fu_178_ap_ce;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter0_ignore_call82;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1_ignore_call82;
    sc_signal< bool > ap_block_state14_pp0_stage1_iter2_ignore_call82;
    sc_signal< bool > ap_block_pp0_stage1_11001_ignoreCallOp121;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0_ignore_call82;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1_ignore_call82;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter2_ignore_call82;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter3_ignore_call82;
    sc_signal< bool > ap_block_pp0_stage0_11001_ignoreCallOp127;
    sc_signal< sc_lv<16> > ap_phi_mux_data_part_0_phi_fu_149_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<16> > ap_phi_mux_data_num_0_phi_fu_160_p4;
    sc_signal< sc_lv<12> > ap_phi_mux_data_part_num_0_phi_fu_171_p4;
    sc_signal< sc_lv<64> > sext_ln46_1_fu_278_p1;
    sc_signal< sc_lv<64> > zext_ln215_2_fu_205_p1;
    sc_signal< sc_lv<17> > shl_ln_fu_183_p3;
    sc_signal< sc_lv<59> > zext_ln215_1_fu_195_p1;
    sc_signal< sc_lv<59> > zext_ln215_fu_191_p1;
    sc_signal< sc_lv<16> > data_num_fu_231_p2;
    sc_signal< sc_lv<17> > sext_ln46_fu_269_p1;
    sc_signal< sc_lv<17> > add_ln46_fu_272_p2;
    sc_signal< sc_lv<25> > Lo_assign_fu_284_p3;
    sc_signal< sc_lv<25> > or_ln46_fu_291_p2;
    sc_signal< sc_lv<11> > sub_ln414_fu_317_p2;
    sc_signal< sc_lv<11> > select_ln414_2_fu_323_p3;
    sc_signal< sc_lv<1024> > tmp_V_fu_297_p1;
    sc_signal< sc_lv<1024> > zext_ln414_fu_331_p1;
    sc_signal< sc_lv<11> > sub_ln414_2_fu_358_p2;
    sc_signal< sc_lv<11> > select_ln414_4_fu_364_p3;
    sc_signal< sc_lv<11> > select_ln414_6_fu_372_p3;
    sc_signal< sc_lv<1024> > zext_ln414_3_fu_386_p1;
    sc_signal< sc_lv<22> > tmp_5_fu_396_p3;
    sc_signal< sc_lv<29> > sext_ln414_fu_403_p1;
    sc_signal< sc_lv<128> > zext_ln414_6_fu_407_p1;
    sc_signal< sc_lv<11> > select_ln414_fu_427_p3;
    sc_signal< sc_lv<11> > select_ln414_1_fu_432_p3;
    sc_signal< sc_lv<11> > sub_ln414_1_fu_437_p2;
    sc_signal< sc_lv<1024> > tmp_2_fu_451_p4;
    sc_signal< sc_lv<1024> > zext_ln414_1_fu_443_p1;
    sc_signal< sc_lv<1024> > zext_ln414_2_fu_447_p1;
    sc_signal< sc_lv<1024> > shl_ln414_1_fu_466_p2;
    sc_signal< sc_lv<1024> > lshr_ln414_fu_472_p2;
    sc_signal< sc_lv<1024> > and_ln414_fu_478_p2;
    sc_signal< sc_lv<1024> > xor_ln414_fu_484_p2;
    sc_signal< sc_lv<1024> > select_ln414_3_fu_460_p3;
    sc_signal< sc_lv<1024> > and_ln414_1_fu_490_p2;
    sc_signal< sc_lv<1024> > and_ln414_2_fu_496_p2;
    sc_signal< sc_lv<11> > select_ln414_5_fu_508_p3;
    sc_signal< sc_lv<1024> > tmp_4_fu_520_p4;
    sc_signal< sc_lv<1024> > zext_ln414_4_fu_513_p1;
    sc_signal< sc_lv<1024> > zext_ln414_5_fu_517_p1;
    sc_signal< sc_lv<1024> > shl_ln414_3_fu_535_p2;
    sc_signal< sc_lv<1024> > lshr_ln414_1_fu_541_p2;
    sc_signal< sc_lv<1024> > select_ln414_7_fu_529_p3;
    sc_signal< sc_lv<1024> > and_ln414_3_fu_547_p2;
    sc_signal< sc_lv<11> > sub_ln647_fu_582_p2;
    sc_signal< sc_lv<11> > sub_ln647_2_fu_586_p2;
    sc_signal< sc_lv<1024> > tmp_7_fu_573_p4;
    sc_signal< sc_lv<11> > select_ln647_fu_590_p3;
    sc_signal< sc_lv<11> > select_ln647_2_fu_603_p3;
    sc_signal< sc_lv<11> > sub_ln647_3_fu_608_p2;
    sc_signal< sc_lv<1024> > select_ln647_1_fu_597_p3;
    sc_signal< sc_lv<1024> > zext_ln647_fu_614_p1;
    sc_signal< sc_lv<1024> > zext_ln647_1_fu_618_p1;
    sc_signal< sc_lv<1024> > lshr_ln647_fu_622_p2;
    sc_signal< sc_lv<1024> > lshr_ln647_1_fu_628_p2;
    sc_signal< sc_lv<1024> > p_Result_1_fu_634_p2;
    sc_signal< sc_lv<11> > zext_ln700_fu_644_p1;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_pp0_stage0;
    static const sc_lv<11> ap_ST_fsm_pp0_stage1;
    static const sc_lv<11> ap_ST_fsm_state16;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_800;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<17> ap_const_lv17_1FFFF;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<25> ap_const_lv25_1FF;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<32> ap_const_lv32_3FF;
    static const sc_lv<1024> ap_const_lv1024_lc_3;
    static const sc_lv<32> ap_const_lv32_A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Lo_assign_fu_284_p3();
    void thread_add_ln215_fu_199_p2();
    void thread_add_ln46_fu_272_p2();
    void thread_and_ln414_1_fu_490_p2();
    void thread_and_ln414_2_fu_496_p2();
    void thread_and_ln414_3_fu_547_p2();
    void thread_and_ln414_fu_478_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_11001_ignoreCallOp127();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_11001_ignoreCallOp121();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state10_pp0_stage1_iter0();
    void thread_ap_block_state10_pp0_stage1_iter0_ignore_call82();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state11_pp0_stage0_iter1_ignore_call82();
    void thread_ap_block_state12_pp0_stage1_iter1();
    void thread_ap_block_state12_pp0_stage1_iter1_ignore_call82();
    void thread_ap_block_state13_pp0_stage0_iter2();
    void thread_ap_block_state13_pp0_stage0_iter2_ignore_call82();
    void thread_ap_block_state14_pp0_stage1_iter2();
    void thread_ap_block_state14_pp0_stage1_iter2_ignore_call82();
    void thread_ap_block_state15_pp0_stage0_iter3();
    void thread_ap_block_state15_pp0_stage0_iter3_ignore_call82();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_block_state9_pp0_stage0_iter0_ignore_call82();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_data_num_0_phi_fu_160_p4();
    void thread_ap_phi_mux_data_part_0_phi_fu_149_p4();
    void thread_ap_phi_mux_data_part_num_0_phi_fu_171_p4();
    void thread_ap_ready();
    void thread_data_local_V_address0();
    void thread_data_local_V_ce0();
    void thread_data_local_V_d0();
    void thread_data_local_V_we0();
    void thread_data_num_1_fu_243_p3();
    void thread_data_num_fu_231_p2();
    void thread_data_part_1_fu_251_p3();
    void thread_data_part_fu_237_p2();
    void thread_data_part_num_fu_221_p2();
    void thread_datapop_local_V_address0();
    void thread_datapop_local_V_ce0();
    void thread_datapop_local_V_d0();
    void thread_datapop_local_V_we0();
    void thread_grp_popcnt_fu_178_ap_ce();
    void thread_icmp_ln37_fu_215_p2();
    void thread_icmp_ln414_1_fu_341_p2();
    void thread_icmp_ln414_fu_300_p2();
    void thread_icmp_ln647_fu_417_p2();
    void thread_input_V_blk_n_AR();
    void thread_input_V_blk_n_R();
    void thread_lshr_ln414_1_fu_541_p2();
    void thread_lshr_ln414_fu_472_p2();
    void thread_lshr_ln647_1_fu_628_p2();
    void thread_lshr_ln647_fu_622_p2();
    void thread_m_axi_input_V_ARADDR();
    void thread_m_axi_input_V_ARBURST();
    void thread_m_axi_input_V_ARCACHE();
    void thread_m_axi_input_V_ARID();
    void thread_m_axi_input_V_ARLEN();
    void thread_m_axi_input_V_ARLOCK();
    void thread_m_axi_input_V_ARPROT();
    void thread_m_axi_input_V_ARQOS();
    void thread_m_axi_input_V_ARREGION();
    void thread_m_axi_input_V_ARSIZE();
    void thread_m_axi_input_V_ARUSER();
    void thread_m_axi_input_V_ARVALID();
    void thread_m_axi_input_V_AWADDR();
    void thread_m_axi_input_V_AWBURST();
    void thread_m_axi_input_V_AWCACHE();
    void thread_m_axi_input_V_AWID();
    void thread_m_axi_input_V_AWLEN();
    void thread_m_axi_input_V_AWLOCK();
    void thread_m_axi_input_V_AWPROT();
    void thread_m_axi_input_V_AWQOS();
    void thread_m_axi_input_V_AWREGION();
    void thread_m_axi_input_V_AWSIZE();
    void thread_m_axi_input_V_AWUSER();
    void thread_m_axi_input_V_AWVALID();
    void thread_m_axi_input_V_BREADY();
    void thread_m_axi_input_V_RREADY();
    void thread_m_axi_input_V_WDATA();
    void thread_m_axi_input_V_WID();
    void thread_m_axi_input_V_WLAST();
    void thread_m_axi_input_V_WSTRB();
    void thread_m_axi_input_V_WUSER();
    void thread_m_axi_input_V_WVALID();
    void thread_or_ln46_fu_291_p2();
    void thread_p_Result_1_fu_634_p2();
    void thread_p_Result_s_fu_502_p2();
    void thread_select_ln414_1_fu_432_p3();
    void thread_select_ln414_2_fu_323_p3();
    void thread_select_ln414_3_fu_460_p3();
    void thread_select_ln414_4_fu_364_p3();
    void thread_select_ln414_5_fu_508_p3();
    void thread_select_ln414_6_fu_372_p3();
    void thread_select_ln414_7_fu_529_p3();
    void thread_select_ln414_fu_427_p3();
    void thread_select_ln647_1_fu_597_p3();
    void thread_select_ln647_2_fu_603_p3();
    void thread_select_ln647_fu_590_p3();
    void thread_sext_ln414_fu_403_p1();
    void thread_sext_ln46_1_fu_278_p1();
    void thread_sext_ln46_fu_269_p1();
    void thread_shl_ln414_1_fu_466_p2();
    void thread_shl_ln414_2_fu_390_p2();
    void thread_shl_ln414_3_fu_535_p2();
    void thread_shl_ln414_4_fu_411_p2();
    void thread_shl_ln414_fu_335_p2();
    void thread_shl_ln_fu_183_p3();
    void thread_sub_ln414_1_fu_437_p2();
    void thread_sub_ln414_2_fu_358_p2();
    void thread_sub_ln414_3_fu_380_p2();
    void thread_sub_ln414_fu_317_p2();
    void thread_sub_ln647_1_fu_567_p2();
    void thread_sub_ln647_2_fu_586_p2();
    void thread_sub_ln647_3_fu_608_p2();
    void thread_sub_ln647_fu_582_p2();
    void thread_tmp_1_fu_306_p3();
    void thread_tmp_2_fu_451_p4();
    void thread_tmp_3_fu_347_p3();
    void thread_tmp_4_fu_520_p4();
    void thread_tmp_5_fu_396_p3();
    void thread_tmp_6_fu_560_p3();
    void thread_tmp_7_fu_573_p4();
    void thread_tmp_V_fu_297_p1();
    void thread_trunc_ln364_fu_640_p1();
    void thread_trunc_ln37_fu_227_p1();
    void thread_trunc_ln414_1_fu_354_p1();
    void thread_trunc_ln414_fu_313_p1();
    void thread_trunc_ln46_1_fu_261_p1();
    void thread_trunc_ln46_2_fu_265_p1();
    void thread_trunc_ln46_fu_257_p1();
    void thread_trunc_ln647_fu_423_p1();
    void thread_xor_ln414_fu_484_p2();
    void thread_zext_ln215_1_fu_195_p1();
    void thread_zext_ln215_2_fu_205_p1();
    void thread_zext_ln215_fu_191_p1();
    void thread_zext_ln414_1_fu_443_p1();
    void thread_zext_ln414_2_fu_447_p1();
    void thread_zext_ln414_3_fu_386_p1();
    void thread_zext_ln414_4_fu_513_p1();
    void thread_zext_ln414_5_fu_517_p1();
    void thread_zext_ln414_6_fu_407_p1();
    void thread_zext_ln414_fu_331_p1();
    void thread_zext_ln647_1_fu_618_p1();
    void thread_zext_ln647_fu_614_p1();
    void thread_zext_ln700_fu_644_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
