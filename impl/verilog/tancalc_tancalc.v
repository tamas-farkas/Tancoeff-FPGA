// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tancalc_tancalc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-fsgd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=758,HLS_SYN_TPT=none,HLS_SYN_MEM=60,HLS_SYN_DSP=0,HLS_SYN_FF=23072,HLS_SYN_LUT=59742,HLS_VERSION=2019_1}" *)

module tancalc_tancalc (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_pp0_stage0 = 19'd1024;
parameter    ap_ST_fsm_state16 = 19'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 19'd4096;
parameter    ap_ST_fsm_pp1_stage1 = 19'd8192;
parameter    ap_ST_fsm_state33 = 19'd16384;
parameter    ap_ST_fsm_state34 = 19'd32768;
parameter    ap_ST_fsm_state35 = 19'd65536;
parameter    ap_ST_fsm_state36 = 19'd131072;
parameter    ap_ST_fsm_state37 = 19'd262144;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (512 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_V;
wire   [63:0] output_V;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln134_reg_2024;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter3_reg;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter4_reg;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state2;
reg    gmem1_blk_n_W;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter7_reg;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state37;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire   [511:0] gmem1_WDATA;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [511:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [5:0] data_part_num_0_i24_reg_365;
reg   [6:0] data_num_assign_reg_376;
wire   [10:0] grp_popcntdata_fu_387_ap_return;
reg   [10:0] reg_432;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_state17_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
reg    ap_block_state19_io;
wire    ap_block_state21_pp1_stage0_iter2;
wire    ap_block_state23_pp1_stage0_iter3;
reg    ap_block_state25_pp1_stage0_iter4;
wire    ap_block_state27_pp1_stage0_iter5;
wire    ap_block_state29_pp1_stage0_iter6;
wire    ap_block_state31_pp1_stage0_iter7;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter5_reg;
wire    ap_block_state18_pp1_stage1_iter0;
reg    ap_block_state18_io;
wire    ap_block_state20_pp1_stage1_iter1;
wire    ap_block_state22_pp1_stage1_iter2;
wire    ap_block_state24_pp1_stage1_iter3;
reg    ap_block_state26_pp1_stage1_iter4;
wire    ap_block_state28_pp1_stage1_iter5;
wire    ap_block_state30_pp1_stage1_iter6;
wire    ap_block_state32_pp1_stage1_iter7;
reg    ap_block_state32_io;
reg    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter6_reg;
wire   [10:0] grp_popcntdata_fu_392_ap_return;
reg   [10:0] reg_436;
wire   [10:0] grp_popcntdata_fu_397_ap_return;
reg   [10:0] reg_440;
wire   [10:0] grp_popcntdata_fu_402_ap_return;
reg   [10:0] reg_444;
wire   [10:0] grp_popcntdata_fu_407_ap_return;
reg   [10:0] reg_448;
wire   [10:0] grp_popcntdata_fu_412_ap_return;
reg   [10:0] reg_452;
wire   [10:0] grp_popcntdata_fu_417_ap_return;
reg   [10:0] reg_456;
wire   [10:0] grp_popcntdata_fu_422_ap_return;
reg   [10:0] reg_460;
reg   [57:0] output_V3_reg_1874;
reg   [57:0] tmp_3_reg_1879;
wire   [58:0] p_cast_fu_494_p1;
reg   [58:0] p_cast_reg_1890;
wire   [2:0] cmpr_chunk_num_fu_503_p2;
reg   [2:0] cmpr_chunk_num_reg_1900;
wire    ap_CS_fsm_state3;
wire   [58:0] add_ln219_fu_527_p2;
reg   [58:0] add_ln219_reg_1905;
wire   [0:0] icmp_ln92_fu_497_p2;
wire   [0:0] icmp_ln27_fu_542_p2;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] data_part_num_fu_548_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] trunc_ln29_1_reg_1925;
reg   [3:0] trunc_ln29_1_reg_1925_pp0_iter1_reg;
reg   [3:0] trunc_ln29_1_reg_1925_pp0_iter2_reg;
reg   [3:0] trunc_ln29_1_reg_1925_pp0_iter3_reg;
wire   [0:0] trunc_ln30_fu_564_p1;
reg   [0:0] trunc_ln30_reg_1929;
reg   [0:0] trunc_ln30_reg_1929_pp0_iter1_reg;
reg   [511:0] temp_input_V_reg_1934;
wire   [511:0] trunc_ln364_fu_694_p1;
reg   [511:0] trunc_ln364_reg_1939;
wire   [11:0] zext_ln215_1_fu_830_p1;
reg   [11:0] zext_ln215_1_reg_1944;
wire    ap_CS_fsm_state16;
wire   [11:0] zext_ln215_4_fu_834_p1;
reg   [11:0] zext_ln215_4_reg_1949;
wire   [11:0] zext_ln215_7_fu_838_p1;
reg   [11:0] zext_ln215_7_reg_1954;
wire   [11:0] zext_ln215_10_fu_842_p1;
reg   [11:0] zext_ln215_10_reg_1959;
wire   [11:0] zext_ln215_13_fu_846_p1;
reg   [11:0] zext_ln215_13_reg_1964;
wire   [11:0] zext_ln215_16_fu_850_p1;
reg   [11:0] zext_ln215_16_reg_1969;
wire   [11:0] zext_ln215_19_fu_854_p1;
reg   [11:0] zext_ln215_19_reg_1974;
wire   [11:0] zext_ln215_22_fu_858_p1;
reg   [11:0] zext_ln215_22_reg_1979;
wire   [11:0] zext_ln215_25_fu_862_p1;
reg   [11:0] zext_ln215_25_reg_1984;
wire   [11:0] zext_ln215_28_fu_866_p1;
reg   [11:0] zext_ln215_28_reg_1989;
wire   [11:0] zext_ln215_31_fu_870_p1;
reg   [11:0] zext_ln215_31_reg_1994;
wire   [11:0] zext_ln215_34_fu_874_p1;
reg   [11:0] zext_ln215_34_reg_1999;
wire   [11:0] zext_ln215_37_fu_878_p1;
reg   [11:0] zext_ln215_37_reg_2004;
wire   [11:0] zext_ln215_40_fu_882_p1;
reg   [11:0] zext_ln215_40_reg_2009;
wire   [11:0] zext_ln215_43_fu_886_p1;
reg   [11:0] zext_ln215_43_reg_2014;
wire   [11:0] zext_ln215_46_fu_890_p1;
reg   [11:0] zext_ln215_46_reg_2019;
wire   [0:0] icmp_ln134_fu_894_p2;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter1_reg;
reg   [0:0] icmp_ln134_reg_2024_pp1_iter2_reg;
wire   [6:0] data_num_fu_900_p2;
reg   [6:0] data_num_reg_2028;
wire   [6:0] shl_ln137_fu_906_p2;
reg   [6:0] shl_ln137_reg_2033;
wire   [58:0] add_ln219_1_fu_916_p2;
reg   [58:0] add_ln219_1_reg_2038;
wire   [58:0] add_ln219_2_fu_940_p2;
reg   [58:0] add_ln219_2_reg_2049;
reg   [511:0] gmem0_addr_2_read_reg_2060;
wire   [1023:0] ref_local_0_V_fu_979_p3;
reg   [1023:0] ref_local_0_V_reg_2066;
wire   [1023:0] and_ln1355_fu_986_p2;
reg   [1023:0] and_ln1355_reg_2078;
wire   [1023:0] and_ln1355_1_fu_992_p2;
reg   [1023:0] and_ln1355_1_reg_2083;
wire   [1023:0] and_ln1355_2_fu_998_p2;
reg   [1023:0] and_ln1355_2_reg_2088;
wire   [1023:0] and_ln1355_3_fu_1004_p2;
reg   [1023:0] and_ln1355_3_reg_2093;
wire   [1023:0] and_ln1355_4_fu_1010_p2;
reg   [1023:0] and_ln1355_4_reg_2098;
wire   [1023:0] and_ln1355_5_fu_1016_p2;
reg   [1023:0] and_ln1355_5_reg_2103;
wire   [1023:0] and_ln1355_6_fu_1022_p2;
reg   [1023:0] and_ln1355_6_reg_2108;
wire   [1023:0] and_ln1355_7_fu_1028_p2;
reg   [1023:0] and_ln1355_7_reg_2113;
wire   [9:0] grp_popcnt_fu_427_ap_return;
reg   [9:0] refpop_local_0_V_reg_2118;
reg    ap_enable_reg_pp1_iter5;
wire   [1023:0] and_ln1355_8_fu_1058_p2;
reg   [1023:0] and_ln1355_8_reg_2123;
wire   [1023:0] and_ln1355_9_fu_1063_p2;
reg   [1023:0] and_ln1355_9_reg_2128;
wire   [1023:0] and_ln1355_10_fu_1068_p2;
reg   [1023:0] and_ln1355_10_reg_2133;
wire   [1023:0] and_ln1355_11_fu_1073_p2;
reg   [1023:0] and_ln1355_11_reg_2138;
wire   [1023:0] and_ln1355_12_fu_1078_p2;
reg   [1023:0] and_ln1355_12_reg_2143;
wire   [1023:0] and_ln1355_13_fu_1083_p2;
reg   [1023:0] and_ln1355_13_reg_2148;
wire   [1023:0] and_ln1355_14_fu_1088_p2;
reg   [1023:0] and_ln1355_14_reg_2153;
wire   [1023:0] and_ln1355_15_fu_1093_p2;
reg   [1023:0] and_ln1355_15_reg_2158;
wire   [11:0] zext_ln215_fu_1098_p1;
reg   [11:0] zext_ln215_reg_2163;
wire   [0:0] or_ln66_6_fu_1385_p2;
reg   [0:0] or_ln66_6_reg_2175;
wire   [0:0] or_ln66_14_fu_1673_p2;
reg   [0:0] or_ln66_14_reg_2180;
wire    ap_CS_fsm_state10;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_block_pp1_stage1_subdone;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [1023:0] grp_popcntdata_fu_387_x_V;
reg    grp_popcntdata_fu_387_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call36;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call36;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call36;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call36;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call36;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call36;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call36;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call36;
reg    ap_block_pp1_stage1_11001_ignoreCallOp291;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call36;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call36;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call36;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call36;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call36;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call36;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call36;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call36;
reg    ap_block_pp1_stage0_11001_ignoreCallOp307;
reg   [1023:0] grp_popcntdata_fu_392_x_V;
reg    grp_popcntdata_fu_392_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call43;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call43;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call43;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call43;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call43;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call43;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call43;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call43;
reg    ap_block_pp1_stage1_11001_ignoreCallOp292;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call43;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call43;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call43;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call43;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call43;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call43;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call43;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call43;
reg    ap_block_pp1_stage0_11001_ignoreCallOp308;
reg   [1023:0] grp_popcntdata_fu_397_x_V;
reg    grp_popcntdata_fu_397_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call49;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call49;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call49;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call49;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call49;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call49;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call49;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call49;
reg    ap_block_pp1_stage1_11001_ignoreCallOp293;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call49;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call49;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call49;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call49;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call49;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call49;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call49;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call49;
reg    ap_block_pp1_stage0_11001_ignoreCallOp309;
reg   [1023:0] grp_popcntdata_fu_402_x_V;
reg    grp_popcntdata_fu_402_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call57;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call57;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call57;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call57;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call57;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call57;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call57;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call57;
reg    ap_block_pp1_stage1_11001_ignoreCallOp294;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call57;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call57;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call57;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call57;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call57;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call57;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call57;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call57;
reg    ap_block_pp1_stage0_11001_ignoreCallOp310;
reg   [1023:0] grp_popcntdata_fu_407_x_V;
reg    grp_popcntdata_fu_407_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call65;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call65;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call65;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call65;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call65;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call65;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call65;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call65;
reg    ap_block_pp1_stage1_11001_ignoreCallOp295;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call65;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call65;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call65;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call65;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call65;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call65;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call65;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call65;
reg    ap_block_pp1_stage0_11001_ignoreCallOp311;
reg   [1023:0] grp_popcntdata_fu_412_x_V;
reg    grp_popcntdata_fu_412_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call73;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call73;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call73;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call73;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call73;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call73;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call73;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call73;
reg    ap_block_pp1_stage1_11001_ignoreCallOp296;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call73;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call73;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call73;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call73;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call73;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call73;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call73;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call73;
reg    ap_block_pp1_stage0_11001_ignoreCallOp312;
reg   [1023:0] grp_popcntdata_fu_417_x_V;
reg    grp_popcntdata_fu_417_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call81;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call81;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call81;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call81;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call81;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call81;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call81;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call81;
reg    ap_block_pp1_stage1_11001_ignoreCallOp297;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call81;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call81;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call81;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call81;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call81;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call81;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call81;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call81;
reg    ap_block_pp1_stage0_11001_ignoreCallOp313;
reg   [1023:0] grp_popcntdata_fu_422_x_V;
reg    grp_popcntdata_fu_422_ap_ce;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call89;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call89;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call89;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call89;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call89;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call89;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call89;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call89;
reg    ap_block_pp1_stage1_11001_ignoreCallOp298;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call89;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call89;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call89;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call89;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call89;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call89;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call89;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call89;
reg    ap_block_pp1_stage0_11001_ignoreCallOp314;
reg   [511:0] grp_popcnt_fu_427_x_V;
reg    grp_popcnt_fu_427_ap_ce;
wire    ap_block_state11_pp0_stage0_iter0_ignore_call6;
reg    ap_block_state12_pp0_stage0_iter1_ignore_call6;
wire    ap_block_state13_pp0_stage0_iter2_ignore_call6;
wire    ap_block_state14_pp0_stage0_iter3_ignore_call6;
wire    ap_block_state15_pp0_stage0_iter4_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp163;
wire    ap_block_state17_pp1_stage0_iter0_ignore_call34;
wire    ap_block_state19_pp1_stage0_iter1_ignore_call34;
wire    ap_block_state21_pp1_stage0_iter2_ignore_call34;
wire    ap_block_state23_pp1_stage0_iter3_ignore_call34;
reg    ap_block_state25_pp1_stage0_iter4_ignore_call34;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call34;
wire    ap_block_state29_pp1_stage0_iter6_ignore_call34;
wire    ap_block_state31_pp1_stage0_iter7_ignore_call34;
reg    ap_block_pp1_stage0_11001_ignoreCallOp273;
wire    ap_block_state18_pp1_stage1_iter0_ignore_call34;
wire    ap_block_state20_pp1_stage1_iter1_ignore_call34;
wire    ap_block_state22_pp1_stage1_iter2_ignore_call34;
wire    ap_block_state24_pp1_stage1_iter3_ignore_call34;
reg    ap_block_state26_pp1_stage1_iter4_ignore_call34;
wire    ap_block_state28_pp1_stage1_iter5_ignore_call34;
wire    ap_block_state30_pp1_stage1_iter6_ignore_call34;
wire    ap_block_state32_pp1_stage1_iter7_ignore_call34;
reg    ap_block_pp1_stage1_11001_ignoreCallOp290;
reg   [2:0] cmpr_chunk_num_assign_reg_354;
wire    ap_CS_fsm_state33;
reg   [6:0] ap_phi_mux_data_num_assign_phi_fu_380_p4;
wire   [63:0] empty_fu_484_p1;
wire   [63:0] zext_ln219_1_fu_532_p1;
wire   [63:0] zext_ln219_3_fu_921_p1;
wire   [63:0] zext_ln219_5_fu_945_p1;
reg    ap_block_pp1_stage1_01001;
reg   [1023:0] cmpr_local_15_V_fu_162;
wire   [1023:0] cmpr_local_0_V_fu_581_p3;
reg   [1023:0] cmpr_local_15_V_1_fu_166;
reg   [1023:0] cmpr_local_15_V_2_fu_170;
reg   [1023:0] cmpr_local_15_V_3_fu_174;
reg   [1023:0] cmpr_local_15_V_4_fu_178;
reg   [1023:0] cmpr_local_15_V_5_fu_182;
reg   [1023:0] cmpr_local_15_V_6_fu_186;
reg   [1023:0] cmpr_local_15_V_7_fu_190;
reg   [1023:0] cmpr_local_15_V_8_fu_194;
reg   [1023:0] cmpr_local_15_V_9_fu_198;
reg   [1023:0] cmpr_local_15_V_10_fu_202;
reg   [1023:0] cmpr_local_15_V_11_fu_206;
reg   [1023:0] cmpr_local_15_V_12_fu_210;
reg   [1023:0] cmpr_local_15_V_13_fu_214;
reg   [1023:0] cmpr_local_15_V_14_fu_218;
reg   [1023:0] cmpr_local_15_V_15_fu_222;
reg   [10:0] cmprpop_local_15_V_fu_226;
wire   [10:0] cmprpop_local_0_V_2_fu_698_p1;
reg   [10:0] cmprpop_local_15_V_1_fu_230;
reg   [10:0] cmprpop_local_15_V_2_fu_234;
reg   [10:0] cmprpop_local_15_V_3_fu_238;
reg   [10:0] cmprpop_local_15_V_4_fu_242;
reg   [10:0] cmprpop_local_15_V_5_fu_246;
reg   [10:0] cmprpop_local_15_V_6_fu_250;
reg   [10:0] cmprpop_local_15_V_7_fu_254;
reg   [10:0] cmprpop_local_15_V_8_fu_258;
reg   [10:0] cmprpop_local_15_V_9_fu_262;
reg   [10:0] cmprpop_local_15_V_10_fu_266;
reg   [10:0] cmprpop_local_15_V_11_fu_270;
reg   [10:0] cmprpop_local_15_V_12_fu_274;
reg   [10:0] cmprpop_local_15_V_13_fu_278;
reg   [10:0] cmprpop_local_15_V_14_fu_282;
reg   [10:0] cmprpop_local_15_V_15_fu_286;
wire   [1:0] trunc_ln93_fu_509_p1;
wire   [7:0] or_ln_fu_513_p4;
wire   [58:0] zext_ln219_fu_523_p1;
wire   [9:0] shl_ln1_fu_568_p3;
wire   [9:0] num_hi_fu_575_p2;
wire   [10:0] zext_ln647_fu_668_p1;
wire   [10:0] xor_ln647_fu_672_p2;
wire   [1023:0] zext_ln647_1_fu_678_p1;
wire   [1023:0] lshr_ln647_fu_682_p2;
wire   [1023:0] p_Result_s_fu_688_p2;
wire   [58:0] zext_ln219_2_fu_912_p1;
wire   [6:0] or_ln32_fu_931_p2;
wire   [58:0] zext_ln219_4_fu_936_p1;
wire   [11:0] add_ln1353_fu_1101_p2;
wire   [12:0] zext_ln215_2_fu_1106_p1;
wire   [12:0] zext_ln215_3_fu_1110_p1;
wire   [11:0] add_ln1353_1_fu_1120_p2;
wire   [12:0] zext_ln215_5_fu_1125_p1;
wire   [12:0] zext_ln215_6_fu_1129_p1;
wire   [11:0] add_ln1353_2_fu_1139_p2;
wire   [12:0] zext_ln215_8_fu_1144_p1;
wire   [12:0] zext_ln215_9_fu_1148_p1;
wire   [12:0] sub_ln1354_2_fu_1152_p2;
wire   [0:0] icmp_ln54_fu_1158_p2;
wire   [11:0] add_ln1353_3_fu_1170_p2;
wire   [12:0] zext_ln215_11_fu_1175_p1;
wire   [12:0] zext_ln215_12_fu_1179_p1;
wire   [12:0] sub_ln1354_3_fu_1183_p2;
wire   [0:0] icmp_ln54_1_fu_1189_p2;
wire   [11:0] add_ln1353_4_fu_1201_p2;
wire   [12:0] zext_ln215_14_fu_1206_p1;
wire   [12:0] zext_ln215_15_fu_1210_p1;
wire   [12:0] sub_ln1354_4_fu_1214_p2;
wire   [0:0] icmp_ln54_2_fu_1220_p2;
wire   [11:0] add_ln1353_5_fu_1232_p2;
wire   [12:0] zext_ln215_17_fu_1237_p1;
wire   [12:0] zext_ln215_18_fu_1241_p1;
wire   [12:0] sub_ln1354_5_fu_1245_p2;
wire   [0:0] icmp_ln54_3_fu_1251_p2;
wire   [11:0] add_ln1353_6_fu_1263_p2;
wire   [12:0] zext_ln215_20_fu_1268_p1;
wire   [12:0] zext_ln215_21_fu_1272_p1;
wire   [12:0] sub_ln1354_6_fu_1276_p2;
wire   [0:0] icmp_ln54_4_fu_1282_p2;
wire   [11:0] add_ln1353_7_fu_1294_p2;
wire   [12:0] zext_ln215_23_fu_1299_p1;
wire   [12:0] zext_ln215_24_fu_1303_p1;
wire   [12:0] sub_ln1354_7_fu_1307_p2;
wire   [0:0] icmp_ln54_5_fu_1313_p2;
wire   [12:0] sub_ln1354_fu_1114_p2;
wire   [0:0] icmp_ln54_13_fu_1325_p2;
wire   [12:0] sub_ln1354_1_fu_1133_p2;
wire   [0:0] icmp_ln54_14_fu_1337_p2;
wire   [0:0] xor_ln54_13_fu_1331_p2;
wire   [0:0] xor_ln54_14_fu_1343_p2;
wire   [0:0] xor_ln54_fu_1164_p2;
wire   [0:0] xor_ln54_1_fu_1195_p2;
wire   [0:0] or_ln66_1_fu_1355_p2;
wire   [0:0] or_ln66_fu_1349_p2;
wire   [0:0] xor_ln54_2_fu_1226_p2;
wire   [0:0] xor_ln54_3_fu_1257_p2;
wire   [0:0] xor_ln54_4_fu_1288_p2;
wire   [0:0] xor_ln54_5_fu_1319_p2;
wire   [0:0] or_ln66_4_fu_1373_p2;
wire   [0:0] or_ln66_3_fu_1367_p2;
wire   [0:0] or_ln66_5_fu_1379_p2;
wire   [0:0] or_ln66_2_fu_1361_p2;
wire   [11:0] add_ln1353_8_fu_1391_p2;
wire   [12:0] zext_ln215_26_fu_1395_p1;
wire   [12:0] zext_ln215_27_fu_1399_p1;
wire   [12:0] sub_ln1354_8_fu_1403_p2;
wire   [0:0] icmp_ln54_6_fu_1409_p2;
wire   [11:0] add_ln1353_9_fu_1421_p2;
wire   [12:0] zext_ln215_29_fu_1425_p1;
wire   [12:0] zext_ln215_30_fu_1429_p1;
wire   [12:0] sub_ln1354_9_fu_1433_p2;
wire   [0:0] icmp_ln54_7_fu_1439_p2;
wire   [11:0] add_ln1353_10_fu_1451_p2;
wire   [12:0] zext_ln215_32_fu_1455_p1;
wire   [12:0] zext_ln215_33_fu_1459_p1;
wire   [12:0] sub_ln1354_10_fu_1463_p2;
wire   [0:0] icmp_ln54_8_fu_1469_p2;
wire   [11:0] add_ln1353_11_fu_1481_p2;
wire   [12:0] zext_ln215_35_fu_1485_p1;
wire   [12:0] zext_ln215_36_fu_1489_p1;
wire   [12:0] sub_ln1354_11_fu_1493_p2;
wire   [0:0] icmp_ln54_9_fu_1499_p2;
wire   [11:0] add_ln1353_12_fu_1511_p2;
wire   [12:0] zext_ln215_38_fu_1515_p1;
wire   [12:0] zext_ln215_39_fu_1519_p1;
wire   [12:0] sub_ln1354_12_fu_1523_p2;
wire   [0:0] icmp_ln54_10_fu_1529_p2;
wire   [11:0] add_ln1353_13_fu_1541_p2;
wire   [12:0] zext_ln215_41_fu_1545_p1;
wire   [12:0] zext_ln215_42_fu_1549_p1;
wire   [12:0] sub_ln1354_13_fu_1553_p2;
wire   [0:0] icmp_ln54_11_fu_1559_p2;
wire   [11:0] add_ln1353_14_fu_1571_p2;
wire   [12:0] zext_ln215_44_fu_1575_p1;
wire   [12:0] zext_ln215_45_fu_1579_p1;
wire   [12:0] sub_ln1354_14_fu_1583_p2;
wire   [0:0] icmp_ln54_12_fu_1589_p2;
wire   [11:0] add_ln1353_15_fu_1601_p2;
wire   [12:0] zext_ln215_47_fu_1605_p1;
wire   [12:0] zext_ln215_48_fu_1609_p1;
wire   [12:0] sub_ln1354_15_fu_1613_p2;
wire   [0:0] icmp_ln66_fu_1619_p2;
wire   [0:0] xor_ln54_6_fu_1415_p2;
wire   [0:0] xor_ln54_7_fu_1445_p2;
wire   [0:0] xor_ln54_8_fu_1475_p2;
wire   [0:0] xor_ln54_9_fu_1505_p2;
wire   [0:0] or_ln66_8_fu_1637_p2;
wire   [0:0] or_ln66_7_fu_1631_p2;
wire   [0:0] xor_ln54_10_fu_1535_p2;
wire   [0:0] xor_ln54_11_fu_1565_p2;
wire   [0:0] xor_ln66_fu_1625_p2;
wire   [0:0] xor_ln54_12_fu_1595_p2;
wire   [0:0] or_ln66_11_fu_1655_p2;
wire   [0:0] or_ln66_10_fu_1649_p2;
wire   [0:0] or_ln66_12_fu_1661_p2;
wire   [0:0] or_ln66_9_fu_1643_p2;
wire   [0:0] or_ln66_13_fu_1667_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_992;
reg    ap_condition_994;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

tancalc_tancalc_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
tancalc_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_V(input_V),
    .output_V(output_V)
);

tancalc_tancalc_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
tancalc_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem0_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

tancalc_tancalc_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
tancalc_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(empty_fu_484_p1),
    .I_AWID(1'd0),
    .I_AWLEN(32'd256),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(gmem1_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd18446744073709551615),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

tancalc_popcntdata grp_popcntdata_fu_387(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_387_x_V),
    .ap_return(grp_popcntdata_fu_387_ap_return),
    .ap_ce(grp_popcntdata_fu_387_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_392(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_392_x_V),
    .ap_return(grp_popcntdata_fu_392_ap_return),
    .ap_ce(grp_popcntdata_fu_392_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_397(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_397_x_V),
    .ap_return(grp_popcntdata_fu_397_ap_return),
    .ap_ce(grp_popcntdata_fu_397_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_402(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_402_x_V),
    .ap_return(grp_popcntdata_fu_402_ap_return),
    .ap_ce(grp_popcntdata_fu_402_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_407(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_407_x_V),
    .ap_return(grp_popcntdata_fu_407_ap_return),
    .ap_ce(grp_popcntdata_fu_407_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_412(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_412_x_V),
    .ap_return(grp_popcntdata_fu_412_ap_return),
    .ap_ce(grp_popcntdata_fu_412_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_417(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_417_x_V),
    .ap_return(grp_popcntdata_fu_417_ap_return),
    .ap_ce(grp_popcntdata_fu_417_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_422(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcntdata_fu_422_x_V),
    .ap_return(grp_popcntdata_fu_422_ap_return),
    .ap_ce(grp_popcntdata_fu_422_ap_ce)
);

tancalc_popcnt grp_popcnt_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcnt_fu_427_x_V),
    .ap_return(grp_popcnt_fu_427_ap_return),
    .ap_ce(grp_popcnt_fu_427_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        cmpr_chunk_num_assign_reg_354 <= cmpr_chunk_num_reg_1900;
    end else if (((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        cmpr_chunk_num_assign_reg_354 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        data_num_assign_reg_376 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0))) begin
        data_num_assign_reg_376 <= data_num_reg_2028;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_542_p2 == 1'd0))) begin
        data_part_num_0_i24_reg_365 <= data_part_num_fu_548_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_part_num_0_i24_reg_365 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_fu_894_p2 == 1'd0))) begin
        add_ln219_1_reg_2038 <= add_ln219_1_fu_916_p2;
        shl_ln137_reg_2033[6 : 1] <= shl_ln137_fu_906_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024 == 1'd0))) begin
        add_ln219_2_reg_2049 <= add_ln219_2_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln92_fu_497_p2 == 1'd0))) begin
        add_ln219_reg_1905 <= add_ln219_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0))) begin
        and_ln1355_10_reg_2133[511 : 0] <= and_ln1355_10_fu_1068_p2[511 : 0];
        and_ln1355_11_reg_2138[511 : 0] <= and_ln1355_11_fu_1073_p2[511 : 0];
        and_ln1355_12_reg_2143[511 : 0] <= and_ln1355_12_fu_1078_p2[511 : 0];
        and_ln1355_13_reg_2148[511 : 0] <= and_ln1355_13_fu_1083_p2[511 : 0];
        and_ln1355_14_reg_2153[511 : 0] <= and_ln1355_14_fu_1088_p2[511 : 0];
        and_ln1355_15_reg_2158[511 : 0] <= and_ln1355_15_fu_1093_p2[511 : 0];
        and_ln1355_8_reg_2123[511 : 0] <= and_ln1355_8_fu_1058_p2[511 : 0];
        and_ln1355_9_reg_2128[511 : 0] <= and_ln1355_9_fu_1063_p2[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0))) begin
        and_ln1355_1_reg_2083[511 : 0] <= and_ln1355_1_fu_992_p2[511 : 0];
        and_ln1355_2_reg_2088[511 : 0] <= and_ln1355_2_fu_998_p2[511 : 0];
        and_ln1355_3_reg_2093[511 : 0] <= and_ln1355_3_fu_1004_p2[511 : 0];
        and_ln1355_4_reg_2098[511 : 0] <= and_ln1355_4_fu_1010_p2[511 : 0];
        and_ln1355_5_reg_2103[511 : 0] <= and_ln1355_5_fu_1016_p2[511 : 0];
        and_ln1355_6_reg_2108[511 : 0] <= and_ln1355_6_fu_1022_p2[511 : 0];
        and_ln1355_7_reg_2113[511 : 0] <= and_ln1355_7_fu_1028_p2[511 : 0];
        and_ln1355_reg_2078[511 : 0] <= and_ln1355_fu_986_p2[511 : 0];
        ref_local_0_V_reg_2066[511 : 0] <= ref_local_0_V_fu_979_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cmpr_chunk_num_reg_1900 <= cmpr_chunk_num_fu_503_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_10_fu_202[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_11_fu_206[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_12_fu_210[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_13_fu_214[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_14_fu_218[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_15_fu_222[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_1_fu_166[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_2_fu_170[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_3_fu_174[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_4_fu_178[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_5_fu_182[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_6_fu_186[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_7_fu_190[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_8_fu_194[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_9_fu_198[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        cmpr_local_15_V_fu_162[511 : 0] <= cmpr_local_0_V_fu_581_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_10_fu_266[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_11_fu_270[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_12_fu_274[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_13_fu_278[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_14_fu_282[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_15_fu_286[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_1_fu_230[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_2_fu_234[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_3_fu_238[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_4_fu_242[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_5_fu_246[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_6_fu_250[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_7_fu_254[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_8_fu_258[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_9_fu_262[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_1_reg_1925_pp0_iter3_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_15_V_fu_226[9 : 0] <= cmprpop_local_0_V_2_fu_698_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        data_num_reg_2028 <= data_num_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0))) begin
        gmem0_addr_2_read_reg_2060 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln134_reg_2024 <= icmp_ln134_fu_894_p2;
        icmp_ln134_reg_2024_pp1_iter1_reg <= icmp_ln134_reg_2024;
        icmp_ln134_reg_2024_pp1_iter2_reg <= icmp_ln134_reg_2024_pp1_iter1_reg;
        icmp_ln134_reg_2024_pp1_iter3_reg <= icmp_ln134_reg_2024_pp1_iter2_reg;
        icmp_ln134_reg_2024_pp1_iter4_reg <= icmp_ln134_reg_2024_pp1_iter3_reg;
        icmp_ln134_reg_2024_pp1_iter5_reg <= icmp_ln134_reg_2024_pp1_iter4_reg;
        icmp_ln134_reg_2024_pp1_iter6_reg <= icmp_ln134_reg_2024_pp1_iter5_reg;
        icmp_ln134_reg_2024_pp1_iter7_reg <= icmp_ln134_reg_2024_pp1_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter6_reg == 1'd0))) begin
        or_ln66_14_reg_2180 <= or_ln66_14_fu_1673_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter6_reg == 1'd0))) begin
        or_ln66_6_reg_2175 <= or_ln66_6_fu_1385_p2;
        zext_ln215_reg_2163[9 : 0] <= zext_ln215_fu_1098_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_V3_reg_1874 <= {{output_V[63:6]}};
        tmp_3_reg_1879 <= {{input_V[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_cast_reg_1890[57 : 0] <= p_cast_fu_494_p1[57 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0))) begin
        refpop_local_0_V_reg_2118 <= grp_popcnt_fu_427_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter6_reg == 1'd0)))) begin
        reg_432 <= grp_popcntdata_fu_387_ap_return;
        reg_436 <= grp_popcntdata_fu_392_ap_return;
        reg_440 <= grp_popcntdata_fu_397_ap_return;
        reg_444 <= grp_popcntdata_fu_402_ap_return;
        reg_448 <= grp_popcntdata_fu_407_ap_return;
        reg_452 <= grp_popcntdata_fu_412_ap_return;
        reg_456 <= grp_popcntdata_fu_417_ap_return;
        reg_460 <= grp_popcntdata_fu_422_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_input_V_reg_1934 <= gmem0_RDATA;
        trunc_ln29_1_reg_1925_pp0_iter1_reg <= trunc_ln29_1_reg_1925;
        trunc_ln30_reg_1929_pp0_iter1_reg <= trunc_ln30_reg_1929;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln27_fu_542_p2 == 1'd0))) begin
        trunc_ln29_1_reg_1925 <= {{data_part_num_0_i24_reg_365[4:1]}};
        trunc_ln30_reg_1929 <= trunc_ln30_fu_564_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        trunc_ln29_1_reg_1925_pp0_iter2_reg <= trunc_ln29_1_reg_1925_pp0_iter1_reg;
        trunc_ln29_1_reg_1925_pp0_iter3_reg <= trunc_ln29_1_reg_1925_pp0_iter2_reg;
        trunc_ln364_reg_1939 <= trunc_ln364_fu_694_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        zext_ln215_10_reg_1959[9 : 0] <= zext_ln215_10_fu_842_p1[9 : 0];
        zext_ln215_13_reg_1964[9 : 0] <= zext_ln215_13_fu_846_p1[9 : 0];
        zext_ln215_16_reg_1969[9 : 0] <= zext_ln215_16_fu_850_p1[9 : 0];
        zext_ln215_19_reg_1974[9 : 0] <= zext_ln215_19_fu_854_p1[9 : 0];
        zext_ln215_1_reg_1944[9 : 0] <= zext_ln215_1_fu_830_p1[9 : 0];
        zext_ln215_22_reg_1979[9 : 0] <= zext_ln215_22_fu_858_p1[9 : 0];
        zext_ln215_25_reg_1984[9 : 0] <= zext_ln215_25_fu_862_p1[9 : 0];
        zext_ln215_28_reg_1989[9 : 0] <= zext_ln215_28_fu_866_p1[9 : 0];
        zext_ln215_31_reg_1994[9 : 0] <= zext_ln215_31_fu_870_p1[9 : 0];
        zext_ln215_34_reg_1999[9 : 0] <= zext_ln215_34_fu_874_p1[9 : 0];
        zext_ln215_37_reg_2004[9 : 0] <= zext_ln215_37_fu_878_p1[9 : 0];
        zext_ln215_40_reg_2009[9 : 0] <= zext_ln215_40_fu_882_p1[9 : 0];
        zext_ln215_43_reg_2014[9 : 0] <= zext_ln215_43_fu_886_p1[9 : 0];
        zext_ln215_46_reg_2019[9 : 0] <= zext_ln215_46_fu_890_p1[9 : 0];
        zext_ln215_4_reg_1949[9 : 0] <= zext_ln215_4_fu_834_p1[9 : 0];
        zext_ln215_7_reg_1954[9 : 0] <= zext_ln215_7_fu_838_p1[9 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_542_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_fu_894_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0))) begin
        ap_phi_mux_data_num_assign_phi_fu_380_p4 = data_num_reg_2028;
    end else begin
        ap_phi_mux_data_num_assign_phi_fu_380_p4 = data_num_assign_reg_376;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0))) begin
        gmem0_ARADDR = zext_ln219_5_fu_945_p1;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024 == 1'd0))) begin
        gmem0_ARADDR = zext_ln219_3_fu_921_p1;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        gmem0_ARADDR = zext_ln219_1_fu_532_p1;
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024 == 1'd0)))) begin
        gmem0_ARLEN = 32'd1;
    end else if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        gmem0_ARLEN = 32'd32;
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024 == 1'd0)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln134_reg_2024 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024 == 1'd0) & (1'b0 == ap_block_pp1_stage1)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)) | ((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter7_reg == 1'd0))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln134_reg_2024_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage1))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp273) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp290) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp163) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_popcnt_fu_427_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_427_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0))) begin
        grp_popcnt_fu_427_x_V = gmem0_addr_2_read_reg_2060;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_popcnt_fu_427_x_V = trunc_ln364_reg_1939;
    end else begin
        grp_popcnt_fu_427_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp307) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp291) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_387_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_387_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_387_x_V = and_ln1355_8_reg_2123;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_387_x_V = and_ln1355_reg_2078;
        end else begin
            grp_popcntdata_fu_387_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_387_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp308) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp292) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_392_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_392_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_392_x_V = and_ln1355_9_reg_2128;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_392_x_V = and_ln1355_1_reg_2083;
        end else begin
            grp_popcntdata_fu_392_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_392_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp309) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp293) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_397_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_397_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_397_x_V = and_ln1355_10_reg_2133;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_397_x_V = and_ln1355_2_reg_2088;
        end else begin
            grp_popcntdata_fu_397_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_397_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp310) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp294) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_402_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_402_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_402_x_V = and_ln1355_11_reg_2138;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_402_x_V = and_ln1355_3_reg_2093;
        end else begin
            grp_popcntdata_fu_402_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_402_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp311) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp295) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_407_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_407_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_407_x_V = and_ln1355_12_reg_2143;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_407_x_V = and_ln1355_4_reg_2098;
        end else begin
            grp_popcntdata_fu_407_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_407_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp312) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp296) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_412_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_412_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_412_x_V = and_ln1355_13_reg_2148;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_412_x_V = and_ln1355_5_reg_2103;
        end else begin
            grp_popcntdata_fu_412_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_412_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp313) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp297) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_417_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_417_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_417_x_V = and_ln1355_14_reg_2153;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_417_x_V = and_ln1355_6_reg_2108;
        end else begin
            grp_popcntdata_fu_417_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_417_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp314) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001_ignoreCallOp298) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        grp_popcntdata_fu_422_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_422_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_reg_2024_pp1_iter5_reg == 1'd0)) begin
        if ((1'b1 == ap_condition_994)) begin
            grp_popcntdata_fu_422_x_V = and_ln1355_15_reg_2158;
        end else if ((1'b1 == ap_condition_992)) begin
            grp_popcntdata_fu_422_x_V = and_ln1355_7_reg_2113;
        end else begin
            grp_popcntdata_fu_422_x_V = 'bx;
        end
    end else begin
        grp_popcntdata_fu_422_x_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((gmem1_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln92_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln27_fu_542_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln27_fu_542_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln134_fu_894_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln134_fu_894_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_10_fu_1451_p2 = (zext_ln215_31_reg_1994 + zext_ln215_reg_2163);

assign add_ln1353_11_fu_1481_p2 = (zext_ln215_34_reg_1999 + zext_ln215_reg_2163);

assign add_ln1353_12_fu_1511_p2 = (zext_ln215_37_reg_2004 + zext_ln215_reg_2163);

assign add_ln1353_13_fu_1541_p2 = (zext_ln215_40_reg_2009 + zext_ln215_reg_2163);

assign add_ln1353_14_fu_1571_p2 = (zext_ln215_43_reg_2014 + zext_ln215_reg_2163);

assign add_ln1353_15_fu_1601_p2 = (zext_ln215_46_reg_2019 + zext_ln215_reg_2163);

assign add_ln1353_1_fu_1120_p2 = (zext_ln215_4_reg_1949 + zext_ln215_fu_1098_p1);

assign add_ln1353_2_fu_1139_p2 = (zext_ln215_7_reg_1954 + zext_ln215_fu_1098_p1);

assign add_ln1353_3_fu_1170_p2 = (zext_ln215_10_reg_1959 + zext_ln215_fu_1098_p1);

assign add_ln1353_4_fu_1201_p2 = (zext_ln215_13_reg_1964 + zext_ln215_fu_1098_p1);

assign add_ln1353_5_fu_1232_p2 = (zext_ln215_16_reg_1969 + zext_ln215_fu_1098_p1);

assign add_ln1353_6_fu_1263_p2 = (zext_ln215_19_reg_1974 + zext_ln215_fu_1098_p1);

assign add_ln1353_7_fu_1294_p2 = (zext_ln215_22_reg_1979 + zext_ln215_fu_1098_p1);

assign add_ln1353_8_fu_1391_p2 = (zext_ln215_25_reg_1984 + zext_ln215_reg_2163);

assign add_ln1353_9_fu_1421_p2 = (zext_ln215_28_reg_1989 + zext_ln215_reg_2163);

assign add_ln1353_fu_1101_p2 = (zext_ln215_1_reg_1944 + zext_ln215_fu_1098_p1);

assign add_ln219_1_fu_916_p2 = (p_cast_reg_1890 + zext_ln219_2_fu_912_p1);

assign add_ln219_2_fu_940_p2 = (p_cast_reg_1890 + zext_ln219_4_fu_936_p1);

assign add_ln219_fu_527_p2 = (p_cast_reg_1890 + zext_ln219_fu_523_p1);

assign and_ln1355_10_fu_1068_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_10_fu_202);

assign and_ln1355_11_fu_1073_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_11_fu_206);

assign and_ln1355_12_fu_1078_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_12_fu_210);

assign and_ln1355_13_fu_1083_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_13_fu_214);

assign and_ln1355_14_fu_1088_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_14_fu_218);

assign and_ln1355_15_fu_1093_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_15_fu_222);

assign and_ln1355_1_fu_992_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_1_fu_166);

assign and_ln1355_2_fu_998_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_2_fu_170);

assign and_ln1355_3_fu_1004_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_3_fu_174);

assign and_ln1355_4_fu_1010_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_4_fu_178);

assign and_ln1355_5_fu_1016_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_5_fu_182);

assign and_ln1355_6_fu_1022_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_6_fu_186);

assign and_ln1355_7_fu_1028_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_7_fu_190);

assign and_ln1355_8_fu_1058_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_8_fu_194);

assign and_ln1355_9_fu_1063_p2 = (ref_local_0_V_reg_2066 & cmpr_local_15_V_9_fu_198);

assign and_ln1355_fu_986_p2 = (ref_local_0_V_fu_979_p3 & cmpr_local_15_V_fu_162);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp163 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp273 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp307 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp308 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp309 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp310 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp311 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp312 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp313 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp314 = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state19_io) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp290 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp291 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp292 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp293 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp294 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp295 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp296 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp297 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_ignoreCallOp298 = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state32_io) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0)) | ((1'b1 == ap_block_state18_io) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter0_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1_ignore_call6 = (gmem0_RVALID == 1'b0);
end

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((gmem0_ARREADY == 1'b0) & (icmp_ln134_reg_2024 == 1'd0));
end

assign ap_block_state18_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((gmem0_ARREADY == 1'b0) & (icmp_ln134_reg_2024 == 1'd0));
end

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter1_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter2_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter2_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter3_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter3_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call34 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call36 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call43 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call49 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call57 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call65 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call73 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call81 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp1_stage0_iter4_ignore_call89 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call34 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call36 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call43 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call49 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call57 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call65 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call73 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call81 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp1_stage1_iter4_ignore_call89 = ((gmem0_RVALID == 1'b0) & (icmp_ln134_reg_2024_pp1_iter4_reg == 1'd0));
end

assign ap_block_state27_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage1_iter5_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter6_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter7_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_io = ((gmem1_WREADY == 1'b0) & (icmp_ln134_reg_2024_pp1_iter7_reg == 1'd0));
end

assign ap_block_state32_pp1_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call34 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call43 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call49 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call65 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call73 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter7_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_992 = ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1));
end

always @ (*) begin
    ap_condition_994 = ((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmpr_chunk_num_fu_503_p2 = (cmpr_chunk_num_assign_reg_354 + 3'd1);

assign cmpr_local_0_V_fu_581_p3 = {{512'd0}, {temp_input_V_reg_1934}};

assign cmprpop_local_0_V_2_fu_698_p1 = grp_popcnt_fu_427_ap_return;

assign data_num_fu_900_p2 = (ap_phi_mux_data_num_assign_phi_fu_380_p4 + 7'd1);

assign data_part_num_fu_548_p2 = (data_part_num_0_i24_reg_365 + 6'd1);

assign empty_fu_484_p1 = output_V3_reg_1874;

assign gmem1_WDATA = or_ln66_14_reg_2180;

assign icmp_ln134_fu_894_p2 = ((ap_phi_mux_data_num_assign_phi_fu_380_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_542_p2 = ((data_part_num_0_i24_reg_365 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln54_10_fu_1529_p2 = (($signed(zext_ln215_39_fu_1519_p1) < $signed(sub_ln1354_12_fu_1523_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_11_fu_1559_p2 = (($signed(zext_ln215_42_fu_1549_p1) < $signed(sub_ln1354_13_fu_1553_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_12_fu_1589_p2 = (($signed(zext_ln215_45_fu_1579_p1) < $signed(sub_ln1354_14_fu_1583_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_13_fu_1325_p2 = (($signed(zext_ln215_3_fu_1110_p1) < $signed(sub_ln1354_fu_1114_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_14_fu_1337_p2 = (($signed(zext_ln215_6_fu_1129_p1) < $signed(sub_ln1354_1_fu_1133_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_1_fu_1189_p2 = (($signed(zext_ln215_12_fu_1179_p1) < $signed(sub_ln1354_3_fu_1183_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_2_fu_1220_p2 = (($signed(zext_ln215_15_fu_1210_p1) < $signed(sub_ln1354_4_fu_1214_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_3_fu_1251_p2 = (($signed(zext_ln215_18_fu_1241_p1) < $signed(sub_ln1354_5_fu_1245_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_4_fu_1282_p2 = (($signed(zext_ln215_21_fu_1272_p1) < $signed(sub_ln1354_6_fu_1276_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_5_fu_1313_p2 = (($signed(zext_ln215_24_fu_1303_p1) < $signed(sub_ln1354_7_fu_1307_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_6_fu_1409_p2 = (($signed(zext_ln215_27_fu_1399_p1) < $signed(sub_ln1354_8_fu_1403_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_7_fu_1439_p2 = (($signed(zext_ln215_30_fu_1429_p1) < $signed(sub_ln1354_9_fu_1433_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_8_fu_1469_p2 = (($signed(zext_ln215_33_fu_1459_p1) < $signed(sub_ln1354_10_fu_1463_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_9_fu_1499_p2 = (($signed(zext_ln215_36_fu_1489_p1) < $signed(sub_ln1354_11_fu_1493_p2)) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_1158_p2 = (($signed(zext_ln215_9_fu_1148_p1) < $signed(sub_ln1354_2_fu_1152_p2)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_1619_p2 = (($signed(zext_ln215_48_fu_1609_p1) < $signed(sub_ln1354_15_fu_1613_p2)) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_497_p2 = ((cmpr_chunk_num_assign_reg_354 == 3'd4) ? 1'b1 : 1'b0);

assign lshr_ln647_fu_682_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln647_1_fu_678_p1;

assign num_hi_fu_575_p2 = (shl_ln1_fu_568_p3 | 10'd511);

assign or_ln32_fu_931_p2 = (shl_ln137_reg_2033 | 7'd1);

assign or_ln66_10_fu_1649_p2 = (xor_ln54_11_fu_1565_p2 | xor_ln54_10_fu_1535_p2);

assign or_ln66_11_fu_1655_p2 = (xor_ln66_fu_1625_p2 | xor_ln54_12_fu_1595_p2);

assign or_ln66_12_fu_1661_p2 = (or_ln66_11_fu_1655_p2 | or_ln66_10_fu_1649_p2);

assign or_ln66_13_fu_1667_p2 = (or_ln66_9_fu_1643_p2 | or_ln66_12_fu_1661_p2);

assign or_ln66_14_fu_1673_p2 = (or_ln66_6_reg_2175 | or_ln66_13_fu_1667_p2);

assign or_ln66_1_fu_1355_p2 = (xor_ln54_fu_1164_p2 | xor_ln54_1_fu_1195_p2);

assign or_ln66_2_fu_1361_p2 = (or_ln66_fu_1349_p2 | or_ln66_1_fu_1355_p2);

assign or_ln66_3_fu_1367_p2 = (xor_ln54_3_fu_1257_p2 | xor_ln54_2_fu_1226_p2);

assign or_ln66_4_fu_1373_p2 = (xor_ln54_5_fu_1319_p2 | xor_ln54_4_fu_1288_p2);

assign or_ln66_5_fu_1379_p2 = (or_ln66_4_fu_1373_p2 | or_ln66_3_fu_1367_p2);

assign or_ln66_6_fu_1385_p2 = (or_ln66_5_fu_1379_p2 | or_ln66_2_fu_1361_p2);

assign or_ln66_7_fu_1631_p2 = (xor_ln54_7_fu_1445_p2 | xor_ln54_6_fu_1415_p2);

assign or_ln66_8_fu_1637_p2 = (xor_ln54_9_fu_1505_p2 | xor_ln54_8_fu_1475_p2);

assign or_ln66_9_fu_1643_p2 = (or_ln66_8_fu_1637_p2 | or_ln66_7_fu_1631_p2);

assign or_ln66_fu_1349_p2 = (xor_ln54_14_fu_1343_p2 | xor_ln54_13_fu_1331_p2);

assign or_ln_fu_513_p4 = {{{{2'd2}, {trunc_ln93_fu_509_p1}}}, {4'd0}};

assign p_Result_s_fu_688_p2 = (lshr_ln647_fu_682_p2 & cmpr_local_0_V_fu_581_p3);

assign p_cast_fu_494_p1 = tmp_3_reg_1879;

assign ref_local_0_V_fu_979_p3 = {{512'd0}, {gmem0_addr_2_read_reg_2060}};

assign shl_ln137_fu_906_p2 = ap_phi_mux_data_num_assign_phi_fu_380_p4 << 7'd1;

assign shl_ln1_fu_568_p3 = {{trunc_ln30_reg_1929_pp0_iter1_reg}, {9'd0}};

assign sub_ln1354_10_fu_1463_p2 = (zext_ln215_32_fu_1455_p1 - zext_ln215_33_fu_1459_p1);

assign sub_ln1354_11_fu_1493_p2 = (zext_ln215_35_fu_1485_p1 - zext_ln215_36_fu_1489_p1);

assign sub_ln1354_12_fu_1523_p2 = (zext_ln215_38_fu_1515_p1 - zext_ln215_39_fu_1519_p1);

assign sub_ln1354_13_fu_1553_p2 = (zext_ln215_41_fu_1545_p1 - zext_ln215_42_fu_1549_p1);

assign sub_ln1354_14_fu_1583_p2 = (zext_ln215_44_fu_1575_p1 - zext_ln215_45_fu_1579_p1);

assign sub_ln1354_15_fu_1613_p2 = (zext_ln215_47_fu_1605_p1 - zext_ln215_48_fu_1609_p1);

assign sub_ln1354_1_fu_1133_p2 = (zext_ln215_5_fu_1125_p1 - zext_ln215_6_fu_1129_p1);

assign sub_ln1354_2_fu_1152_p2 = (zext_ln215_8_fu_1144_p1 - zext_ln215_9_fu_1148_p1);

assign sub_ln1354_3_fu_1183_p2 = (zext_ln215_11_fu_1175_p1 - zext_ln215_12_fu_1179_p1);

assign sub_ln1354_4_fu_1214_p2 = (zext_ln215_14_fu_1206_p1 - zext_ln215_15_fu_1210_p1);

assign sub_ln1354_5_fu_1245_p2 = (zext_ln215_17_fu_1237_p1 - zext_ln215_18_fu_1241_p1);

assign sub_ln1354_6_fu_1276_p2 = (zext_ln215_20_fu_1268_p1 - zext_ln215_21_fu_1272_p1);

assign sub_ln1354_7_fu_1307_p2 = (zext_ln215_23_fu_1299_p1 - zext_ln215_24_fu_1303_p1);

assign sub_ln1354_8_fu_1403_p2 = (zext_ln215_26_fu_1395_p1 - zext_ln215_27_fu_1399_p1);

assign sub_ln1354_9_fu_1433_p2 = (zext_ln215_29_fu_1425_p1 - zext_ln215_30_fu_1429_p1);

assign sub_ln1354_fu_1114_p2 = (zext_ln215_2_fu_1106_p1 - zext_ln215_3_fu_1110_p1);

assign trunc_ln30_fu_564_p1 = data_part_num_0_i24_reg_365[0:0];

assign trunc_ln364_fu_694_p1 = p_Result_s_fu_688_p2[511:0];

assign trunc_ln93_fu_509_p1 = cmpr_chunk_num_assign_reg_354[1:0];

assign xor_ln54_10_fu_1535_p2 = (icmp_ln54_10_fu_1529_p2 ^ 1'd1);

assign xor_ln54_11_fu_1565_p2 = (icmp_ln54_11_fu_1559_p2 ^ 1'd1);

assign xor_ln54_12_fu_1595_p2 = (icmp_ln54_12_fu_1589_p2 ^ 1'd1);

assign xor_ln54_13_fu_1331_p2 = (icmp_ln54_13_fu_1325_p2 ^ 1'd1);

assign xor_ln54_14_fu_1343_p2 = (icmp_ln54_14_fu_1337_p2 ^ 1'd1);

assign xor_ln54_1_fu_1195_p2 = (icmp_ln54_1_fu_1189_p2 ^ 1'd1);

assign xor_ln54_2_fu_1226_p2 = (icmp_ln54_2_fu_1220_p2 ^ 1'd1);

assign xor_ln54_3_fu_1257_p2 = (icmp_ln54_3_fu_1251_p2 ^ 1'd1);

assign xor_ln54_4_fu_1288_p2 = (icmp_ln54_4_fu_1282_p2 ^ 1'd1);

assign xor_ln54_5_fu_1319_p2 = (icmp_ln54_5_fu_1313_p2 ^ 1'd1);

assign xor_ln54_6_fu_1415_p2 = (icmp_ln54_6_fu_1409_p2 ^ 1'd1);

assign xor_ln54_7_fu_1445_p2 = (icmp_ln54_7_fu_1439_p2 ^ 1'd1);

assign xor_ln54_8_fu_1475_p2 = (icmp_ln54_8_fu_1469_p2 ^ 1'd1);

assign xor_ln54_9_fu_1505_p2 = (icmp_ln54_9_fu_1499_p2 ^ 1'd1);

assign xor_ln54_fu_1164_p2 = (icmp_ln54_fu_1158_p2 ^ 1'd1);

assign xor_ln647_fu_672_p2 = (zext_ln647_fu_668_p1 ^ 11'd1023);

assign xor_ln66_fu_1625_p2 = (icmp_ln66_fu_1619_p2 ^ 1'd1);

assign zext_ln215_10_fu_842_p1 = cmprpop_local_15_V_3_fu_238;

assign zext_ln215_11_fu_1175_p1 = add_ln1353_3_fu_1170_p2;

assign zext_ln215_12_fu_1179_p1 = reg_444;

assign zext_ln215_13_fu_846_p1 = cmprpop_local_15_V_4_fu_242;

assign zext_ln215_14_fu_1206_p1 = add_ln1353_4_fu_1201_p2;

assign zext_ln215_15_fu_1210_p1 = reg_448;

assign zext_ln215_16_fu_850_p1 = cmprpop_local_15_V_5_fu_246;

assign zext_ln215_17_fu_1237_p1 = add_ln1353_5_fu_1232_p2;

assign zext_ln215_18_fu_1241_p1 = reg_452;

assign zext_ln215_19_fu_854_p1 = cmprpop_local_15_V_6_fu_250;

assign zext_ln215_1_fu_830_p1 = cmprpop_local_15_V_fu_226;

assign zext_ln215_20_fu_1268_p1 = add_ln1353_6_fu_1263_p2;

assign zext_ln215_21_fu_1272_p1 = reg_456;

assign zext_ln215_22_fu_858_p1 = cmprpop_local_15_V_7_fu_254;

assign zext_ln215_23_fu_1299_p1 = add_ln1353_7_fu_1294_p2;

assign zext_ln215_24_fu_1303_p1 = reg_460;

assign zext_ln215_25_fu_862_p1 = cmprpop_local_15_V_8_fu_258;

assign zext_ln215_26_fu_1395_p1 = add_ln1353_8_fu_1391_p2;

assign zext_ln215_27_fu_1399_p1 = reg_432;

assign zext_ln215_28_fu_866_p1 = cmprpop_local_15_V_9_fu_262;

assign zext_ln215_29_fu_1425_p1 = add_ln1353_9_fu_1421_p2;

assign zext_ln215_2_fu_1106_p1 = add_ln1353_fu_1101_p2;

assign zext_ln215_30_fu_1429_p1 = reg_436;

assign zext_ln215_31_fu_870_p1 = cmprpop_local_15_V_10_fu_266;

assign zext_ln215_32_fu_1455_p1 = add_ln1353_10_fu_1451_p2;

assign zext_ln215_33_fu_1459_p1 = reg_440;

assign zext_ln215_34_fu_874_p1 = cmprpop_local_15_V_11_fu_270;

assign zext_ln215_35_fu_1485_p1 = add_ln1353_11_fu_1481_p2;

assign zext_ln215_36_fu_1489_p1 = reg_444;

assign zext_ln215_37_fu_878_p1 = cmprpop_local_15_V_12_fu_274;

assign zext_ln215_38_fu_1515_p1 = add_ln1353_12_fu_1511_p2;

assign zext_ln215_39_fu_1519_p1 = reg_448;

assign zext_ln215_3_fu_1110_p1 = reg_432;

assign zext_ln215_40_fu_882_p1 = cmprpop_local_15_V_13_fu_278;

assign zext_ln215_41_fu_1545_p1 = add_ln1353_13_fu_1541_p2;

assign zext_ln215_42_fu_1549_p1 = reg_452;

assign zext_ln215_43_fu_886_p1 = cmprpop_local_15_V_14_fu_282;

assign zext_ln215_44_fu_1575_p1 = add_ln1353_14_fu_1571_p2;

assign zext_ln215_45_fu_1579_p1 = reg_456;

assign zext_ln215_46_fu_890_p1 = cmprpop_local_15_V_15_fu_286;

assign zext_ln215_47_fu_1605_p1 = add_ln1353_15_fu_1601_p2;

assign zext_ln215_48_fu_1609_p1 = reg_460;

assign zext_ln215_4_fu_834_p1 = cmprpop_local_15_V_1_fu_230;

assign zext_ln215_5_fu_1125_p1 = add_ln1353_1_fu_1120_p2;

assign zext_ln215_6_fu_1129_p1 = reg_436;

assign zext_ln215_7_fu_838_p1 = cmprpop_local_15_V_2_fu_234;

assign zext_ln215_8_fu_1144_p1 = add_ln1353_2_fu_1139_p2;

assign zext_ln215_9_fu_1148_p1 = reg_440;

assign zext_ln215_fu_1098_p1 = refpop_local_0_V_reg_2118;

assign zext_ln219_1_fu_532_p1 = add_ln219_reg_1905;

assign zext_ln219_2_fu_912_p1 = shl_ln137_fu_906_p2;

assign zext_ln219_3_fu_921_p1 = add_ln219_1_reg_2038;

assign zext_ln219_4_fu_936_p1 = or_ln32_fu_931_p2;

assign zext_ln219_5_fu_945_p1 = add_ln219_2_reg_2049;

assign zext_ln219_fu_523_p1 = or_ln_fu_513_p4;

assign zext_ln647_1_fu_678_p1 = xor_ln647_fu_672_p2;

assign zext_ln647_fu_668_p1 = num_hi_fu_575_p2;

always @ (posedge ap_clk) begin
    p_cast_reg_1890[58] <= 1'b0;
    zext_ln215_1_reg_1944[11:10] <= 2'b00;
    zext_ln215_4_reg_1949[11:10] <= 2'b00;
    zext_ln215_7_reg_1954[11:10] <= 2'b00;
    zext_ln215_10_reg_1959[11:10] <= 2'b00;
    zext_ln215_13_reg_1964[11:10] <= 2'b00;
    zext_ln215_16_reg_1969[11:10] <= 2'b00;
    zext_ln215_19_reg_1974[11:10] <= 2'b00;
    zext_ln215_22_reg_1979[11:10] <= 2'b00;
    zext_ln215_25_reg_1984[11:10] <= 2'b00;
    zext_ln215_28_reg_1989[11:10] <= 2'b00;
    zext_ln215_31_reg_1994[11:10] <= 2'b00;
    zext_ln215_34_reg_1999[11:10] <= 2'b00;
    zext_ln215_37_reg_2004[11:10] <= 2'b00;
    zext_ln215_40_reg_2009[11:10] <= 2'b00;
    zext_ln215_43_reg_2014[11:10] <= 2'b00;
    zext_ln215_46_reg_2019[11:10] <= 2'b00;
    shl_ln137_reg_2033[0] <= 1'b0;
    ref_local_0_V_reg_2066[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_reg_2078[1023:512] <= 512'b
    and_ln1355_1_reg_2083[1023:512] <= 512'b
    and_ln1355_2_reg_2088[1023:512] <= 512'b
    and_ln1355_3_reg_2093[1023:512] <= 512'b
    and_ln1355_4_reg_2098[1023:512] <= 512'b
    and_ln1355_5_reg_2103[1023:512] <= 512'b
    and_ln1355_6_reg_2108[1023:512] <= 512'b
    and_ln1355_7_reg_2113[1023:512] <= 512'b
    and_ln1355_8_reg_2123[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_9_reg_2128[1023:512] <= 512'b
    and_ln1355_10_reg_2133[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_11_reg_2138[1023:512] <= 512'b
    and_ln1355_12_reg_2143[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_13_reg_2148[1023:512] <= 512'b
    and_ln1355_14_reg_2153[1023:512] <= 512'b
    and_ln1355_15_reg_2158[1023:512] <= 512'b
    zext_ln215_reg_2163[11:10] <= 2'b00;
    cmpr_local_15_V_fu_162[1023:512] <= 512'b
    cmpr_local_15_V_1_fu_166[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    cmpr_local_15_V_2_fu_170[1023:512] <= 512'b
    cmpr_local_15_V_3_fu_174[1023:512] <= 512'b
    cmpr_local_15_V_4_fu_178[1023:512] <= 512'b
    cmpr_local_15_V_5_fu_182[1023:512] <= 512'b
    cmpr_local_15_V_6_fu_186[1023:512] <= 512'b
    cmpr_local_15_V_7_fu_190[1023:512] <= 512'b
    cmpr_local_15_V_8_fu_194[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    cmpr_local_15_V_9_fu_198[1023:512] <= 512'b
    cmpr_local_15_V_10_fu_202[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    cmpr_local_15_V_11_fu_206[1023:512] <= 512'b
    cmpr_local_15_V_12_fu_210[1023:512] <= 512'b
    cmpr_local_15_V_13_fu_214[1023:512] <= 512'b
    cmpr_local_15_V_14_fu_218[1023:512] <= 512'b
    cmpr_local_15_V_15_fu_222[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    cmprpop_local_15_V_fu_226[10] <= 1'b0;
    cmprpop_local_15_V_1_fu_230[10] <= 1'b0;
    cmprpop_local_15_V_2_fu_234[10] <= 1'b0;
    cmprpop_local_15_V_3_fu_238[10] <= 1'b0;
    cmprpop_local_15_V_4_fu_242[10] <= 1'b0;
    cmprpop_local_15_V_5_fu_246[10] <= 1'b0;
    cmprpop_local_15_V_6_fu_250[10] <= 1'b0;
    cmprpop_local_15_V_7_fu_254[10] <= 1'b0;
    cmprpop_local_15_V_8_fu_258[10] <= 1'b0;
    cmprpop_local_15_V_9_fu_262[10] <= 1'b0;
    cmprpop_local_15_V_10_fu_266[10] <= 1'b0;
    cmprpop_local_15_V_11_fu_270[10] <= 1'b0;
    cmprpop_local_15_V_12_fu_274[10] <= 1'b0;
    cmprpop_local_15_V_13_fu_278[10] <= 1'b0;
    cmprpop_local_15_V_14_fu_282[10] <= 1'b0;
    cmprpop_local_15_V_15_fu_286[10] <= 1'b0;
end

endmodule //tancalc_tancalc
