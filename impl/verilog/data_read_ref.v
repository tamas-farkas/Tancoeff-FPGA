// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module data_read_ref (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_input_V_AWVALID,
        m_axi_input_V_AWREADY,
        m_axi_input_V_AWADDR,
        m_axi_input_V_AWID,
        m_axi_input_V_AWLEN,
        m_axi_input_V_AWSIZE,
        m_axi_input_V_AWBURST,
        m_axi_input_V_AWLOCK,
        m_axi_input_V_AWCACHE,
        m_axi_input_V_AWPROT,
        m_axi_input_V_AWQOS,
        m_axi_input_V_AWREGION,
        m_axi_input_V_AWUSER,
        m_axi_input_V_WVALID,
        m_axi_input_V_WREADY,
        m_axi_input_V_WDATA,
        m_axi_input_V_WSTRB,
        m_axi_input_V_WLAST,
        m_axi_input_V_WID,
        m_axi_input_V_WUSER,
        m_axi_input_V_ARVALID,
        m_axi_input_V_ARREADY,
        m_axi_input_V_ARADDR,
        m_axi_input_V_ARID,
        m_axi_input_V_ARLEN,
        m_axi_input_V_ARSIZE,
        m_axi_input_V_ARBURST,
        m_axi_input_V_ARLOCK,
        m_axi_input_V_ARCACHE,
        m_axi_input_V_ARPROT,
        m_axi_input_V_ARQOS,
        m_axi_input_V_ARREGION,
        m_axi_input_V_ARUSER,
        m_axi_input_V_RVALID,
        m_axi_input_V_RREADY,
        m_axi_input_V_RDATA,
        m_axi_input_V_RLAST,
        m_axi_input_V_RID,
        m_axi_input_V_RUSER,
        m_axi_input_V_RRESP,
        m_axi_input_V_BVALID,
        m_axi_input_V_BREADY,
        m_axi_input_V_BRESP,
        m_axi_input_V_BID,
        m_axi_input_V_BUSER,
        ap_ce,
        input_V_offset,
        input_V_offset1,
        cmpr_local_0_V_read,
        cmpr_local_1_V_read,
        cmpr_local_2_V_read,
        cmpr_local_3_V_read,
        cmpr_local_4_V_read,
        cmpr_local_5_V_read,
        cmpr_local_6_V_read,
        cmpr_local_7_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        input_V_blk_n_AR,
        input_V_blk_n_R
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_input_V_AWVALID;
input   m_axi_input_V_AWREADY;
output  [63:0] m_axi_input_V_AWADDR;
output  [0:0] m_axi_input_V_AWID;
output  [31:0] m_axi_input_V_AWLEN;
output  [2:0] m_axi_input_V_AWSIZE;
output  [1:0] m_axi_input_V_AWBURST;
output  [1:0] m_axi_input_V_AWLOCK;
output  [3:0] m_axi_input_V_AWCACHE;
output  [2:0] m_axi_input_V_AWPROT;
output  [3:0] m_axi_input_V_AWQOS;
output  [3:0] m_axi_input_V_AWREGION;
output  [0:0] m_axi_input_V_AWUSER;
output   m_axi_input_V_WVALID;
input   m_axi_input_V_WREADY;
output  [511:0] m_axi_input_V_WDATA;
output  [63:0] m_axi_input_V_WSTRB;
output   m_axi_input_V_WLAST;
output  [0:0] m_axi_input_V_WID;
output  [0:0] m_axi_input_V_WUSER;
output   m_axi_input_V_ARVALID;
input   m_axi_input_V_ARREADY;
output  [63:0] m_axi_input_V_ARADDR;
output  [0:0] m_axi_input_V_ARID;
output  [31:0] m_axi_input_V_ARLEN;
output  [2:0] m_axi_input_V_ARSIZE;
output  [1:0] m_axi_input_V_ARBURST;
output  [1:0] m_axi_input_V_ARLOCK;
output  [3:0] m_axi_input_V_ARCACHE;
output  [2:0] m_axi_input_V_ARPROT;
output  [3:0] m_axi_input_V_ARQOS;
output  [3:0] m_axi_input_V_ARREGION;
output  [0:0] m_axi_input_V_ARUSER;
input   m_axi_input_V_RVALID;
output   m_axi_input_V_RREADY;
input  [511:0] m_axi_input_V_RDATA;
input   m_axi_input_V_RLAST;
input  [0:0] m_axi_input_V_RID;
input  [0:0] m_axi_input_V_RUSER;
input  [1:0] m_axi_input_V_RRESP;
input   m_axi_input_V_BVALID;
output   m_axi_input_V_BREADY;
input  [1:0] m_axi_input_V_BRESP;
input  [0:0] m_axi_input_V_BID;
input  [0:0] m_axi_input_V_BUSER;
input   ap_ce;
input  [57:0] input_V_offset;
input  [5:0] input_V_offset1;
input  [1023:0] cmpr_local_0_V_read;
input  [1023:0] cmpr_local_1_V_read;
input  [1023:0] cmpr_local_2_V_read;
input  [1023:0] cmpr_local_3_V_read;
input  [1023:0] cmpr_local_4_V_read;
input  [1023:0] cmpr_local_5_V_read;
input  [1023:0] cmpr_local_6_V_read;
input  [1023:0] cmpr_local_7_V_read;
output  [10:0] ap_return_0;
output  [10:0] ap_return_1;
output  [10:0] ap_return_2;
output  [10:0] ap_return_3;
output  [10:0] ap_return_4;
output  [10:0] ap_return_5;
output  [10:0] ap_return_6;
output  [10:0] ap_return_7;
output  [10:0] ap_return_8;
output   input_V_blk_n_AR;
output   input_V_blk_n_R;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_input_V_ARVALID;
reg[63:0] m_axi_input_V_ARADDR;
reg m_axi_input_V_RREADY;
reg input_V_blk_n_AR;
reg input_V_blk_n_R;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_sig_ioackin_m_axi_input_V_ARREADY;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
reg    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage1;
wire   [58:0] sum_fu_203_p2;
reg   [58:0] sum_reg_626;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_11001;
wire   [58:0] sum3_fu_223_p2;
reg   [58:0] sum3_reg_631;
wire   [511:0] tmp_504_fu_239_p1;
reg   [511:0] tmp_504_reg_642;
reg   [511:0] tmp_504_reg_642_pp0_iter1_reg;
reg   [511:0] tmp_504_reg_642_pp0_iter2_reg;
reg   [511:0] tmp_504_reg_642_pp0_iter3_reg;
wire   [511:0] tmp_505_fu_243_p1;
reg   [511:0] tmp_505_reg_647;
reg   [511:0] tmp_505_reg_647_pp0_iter1_reg;
reg   [511:0] tmp_505_reg_647_pp0_iter2_reg;
reg   [511:0] tmp_505_reg_647_pp0_iter3_reg;
wire   [511:0] tmp_506_fu_247_p1;
reg   [511:0] tmp_506_reg_652;
reg   [511:0] tmp_506_reg_652_pp0_iter1_reg;
reg   [511:0] tmp_506_reg_652_pp0_iter2_reg;
reg   [511:0] tmp_506_reg_652_pp0_iter3_reg;
wire   [511:0] tmp_507_fu_251_p1;
reg   [511:0] tmp_507_reg_657;
reg   [511:0] tmp_507_reg_657_pp0_iter1_reg;
reg   [511:0] tmp_507_reg_657_pp0_iter2_reg;
reg   [511:0] tmp_507_reg_657_pp0_iter3_reg;
wire   [511:0] tmp_508_fu_255_p1;
reg   [511:0] tmp_508_reg_662;
reg   [511:0] tmp_508_reg_662_pp0_iter1_reg;
reg   [511:0] tmp_508_reg_662_pp0_iter2_reg;
reg   [511:0] tmp_508_reg_662_pp0_iter3_reg;
wire   [511:0] tmp_509_fu_259_p1;
reg   [511:0] tmp_509_reg_667;
reg   [511:0] tmp_509_reg_667_pp0_iter1_reg;
reg   [511:0] tmp_509_reg_667_pp0_iter2_reg;
reg   [511:0] tmp_509_reg_667_pp0_iter3_reg;
wire   [511:0] tmp_510_fu_263_p1;
reg   [511:0] tmp_510_reg_672;
reg   [511:0] tmp_510_reg_672_pp0_iter1_reg;
reg   [511:0] tmp_510_reg_672_pp0_iter2_reg;
reg   [511:0] tmp_510_reg_672_pp0_iter3_reg;
wire   [511:0] tmp_511_fu_267_p1;
reg   [511:0] tmp_511_reg_677;
reg   [511:0] tmp_511_reg_677_pp0_iter1_reg;
reg   [511:0] tmp_511_reg_677_pp0_iter2_reg;
reg   [511:0] tmp_511_reg_677_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_reg_682;
reg   [511:0] p_Result_5_1_reg_682_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_reg_682_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_reg_682_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_reg_682_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_1_reg_687;
reg   [511:0] p_Result_5_1_1_reg_687_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_1_reg_687_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_1_reg_687_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_1_reg_687_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_2_reg_692;
reg   [511:0] p_Result_5_1_2_reg_692_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_2_reg_692_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_2_reg_692_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_2_reg_692_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_3_reg_697;
reg   [511:0] p_Result_5_1_3_reg_697_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_3_reg_697_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_3_reg_697_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_3_reg_697_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_4_reg_702;
reg   [511:0] p_Result_5_1_4_reg_702_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_4_reg_702_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_4_reg_702_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_4_reg_702_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_5_reg_707;
reg   [511:0] p_Result_5_1_5_reg_707_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_5_reg_707_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_5_reg_707_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_5_reg_707_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_6_reg_712;
reg   [511:0] p_Result_5_1_6_reg_712_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_6_reg_712_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_6_reg_712_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_6_reg_712_pp0_iter4_reg;
reg   [511:0] p_Result_5_1_7_reg_717;
reg   [511:0] p_Result_5_1_7_reg_717_pp0_iter1_reg;
reg   [511:0] p_Result_5_1_7_reg_717_pp0_iter2_reg;
reg   [511:0] p_Result_5_1_7_reg_717_pp0_iter3_reg;
reg   [511:0] p_Result_5_1_7_reg_717_pp0_iter4_reg;
reg   [511:0] input_V_addr_read_reg_728;
wire   [511:0] this_assign_fu_361_p2;
reg   [511:0] this_assign_reg_741;
wire   [511:0] this_assign_0_0_1_fu_365_p2;
reg   [511:0] this_assign_0_0_1_reg_746;
wire   [511:0] this_assign_0_0_2_fu_369_p2;
reg   [511:0] this_assign_0_0_2_reg_751;
wire   [511:0] this_assign_0_0_3_fu_373_p2;
reg   [511:0] this_assign_0_0_3_reg_756;
wire   [511:0] this_assign_0_0_4_fu_377_p2;
reg   [511:0] this_assign_0_0_4_reg_761;
wire   [511:0] this_assign_0_0_5_fu_381_p2;
reg   [511:0] this_assign_0_0_5_reg_766;
wire   [511:0] this_assign_0_0_6_fu_385_p2;
reg   [511:0] this_assign_0_0_6_reg_771;
wire   [511:0] this_assign_0_0_7_fu_389_p2;
reg   [511:0] this_assign_0_0_7_reg_776;
reg   [511:0] input_V_addr_1_read_reg_781;
wire   [511:0] this_assign_1_0_1_fu_393_p2;
reg   [511:0] this_assign_1_0_1_reg_794;
wire   [511:0] this_assign_1_0_1_1_fu_397_p2;
reg   [511:0] this_assign_1_0_1_1_reg_799;
wire   [511:0] this_assign_1_0_1_2_fu_401_p2;
reg   [511:0] this_assign_1_0_1_2_reg_804;
wire   [511:0] this_assign_1_0_1_3_fu_405_p2;
reg   [511:0] this_assign_1_0_1_3_reg_809;
wire   [511:0] this_assign_1_0_1_4_fu_409_p2;
reg   [511:0] this_assign_1_0_1_4_reg_814;
wire   [511:0] this_assign_1_0_1_5_fu_413_p2;
reg   [511:0] this_assign_1_0_1_5_reg_819;
wire   [511:0] this_assign_1_0_1_6_fu_417_p2;
reg   [511:0] this_assign_1_0_1_6_reg_824;
wire   [511:0] this_assign_1_0_1_7_fu_421_p2;
reg   [511:0] this_assign_1_0_1_7_reg_829;
wire   [9:0] grp_popcnt_fu_150_ap_return;
reg   [9:0] op2_V_assign_reg_834;
reg   [9:0] andpop_local_V_assign_1_reg_839;
wire   [9:0] grp_popcnt_fu_155_ap_return;
reg   [9:0] andpop_local_V89_assign_1_reg_844;
wire   [9:0] grp_popcnt_fu_160_ap_return;
reg   [9:0] andpop_local_V9_assign_1_reg_849;
wire   [9:0] grp_popcnt_fu_165_ap_return;
reg   [9:0] andpop_local_V10_assign_1_reg_854;
wire   [9:0] grp_popcnt_fu_170_ap_return;
reg   [9:0] andpop_local_V11_assign_1_reg_859;
wire   [9:0] grp_popcnt_fu_175_ap_return;
reg   [9:0] andpop_local_V12_assign_1_reg_864;
wire   [9:0] grp_popcnt_fu_180_ap_return;
reg   [9:0] andpop_local_V13_assign_1_reg_869;
wire   [9:0] grp_popcnt_fu_185_ap_return;
reg   [9:0] andpop_local_V14_assign_1_reg_874;
wire   [9:0] grp_popcnt_fu_190_ap_return;
reg   [9:0] op2_V_assign_0_1_reg_879;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage0_subdone;
reg   [1023:0] ap_port_reg_cmpr_local_0_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_1_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_2_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_3_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_4_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_5_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_6_V_read;
reg   [1023:0] ap_port_reg_cmpr_local_7_V_read;
reg   [511:0] grp_popcnt_fu_150_x_V;
reg    grp_popcnt_fu_150_ap_ce;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call18;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call18;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call18;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call18;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call18;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call18;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call18;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call18;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call18;
reg    ap_block_pp0_stage1_11001_ignoreCallOp72;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call18;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call18;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call18;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call18;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call18;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call18;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call18;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call18;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call18;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call18;
reg    ap_block_pp0_stage0_11001_ignoreCallOp82;
reg   [511:0] grp_popcnt_fu_155_x_V;
reg    grp_popcnt_fu_155_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call24;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call24;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call24;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call24;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call24;
reg    ap_block_pp0_stage0_11001_ignoreCallOp84;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call24;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call24;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call24;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call24;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call24;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call24;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call24;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call24;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call24;
reg    ap_block_pp0_stage1_11001_ignoreCallOp102;
reg   [511:0] grp_popcnt_fu_160_x_V;
reg    grp_popcnt_fu_160_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call27;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call27;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call27;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call27;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call27;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call27;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call27;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call27;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call27;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call27;
reg    ap_block_pp0_stage0_11001_ignoreCallOp85;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call27;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call27;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call27;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call27;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call27;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call27;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call27;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call27;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call27;
reg    ap_block_pp0_stage1_11001_ignoreCallOp103;
reg   [511:0] grp_popcnt_fu_165_x_V;
reg    grp_popcnt_fu_165_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call30;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call30;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call30;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call30;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call30;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call30;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call30;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call30;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call30;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call30;
reg    ap_block_pp0_stage0_11001_ignoreCallOp86;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call30;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call30;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call30;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call30;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call30;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call30;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call30;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call30;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call30;
reg    ap_block_pp0_stage1_11001_ignoreCallOp104;
reg   [511:0] grp_popcnt_fu_170_x_V;
reg    grp_popcnt_fu_170_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call33;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call33;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call33;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call33;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call33;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call33;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call33;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call33;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call33;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call33;
reg    ap_block_pp0_stage0_11001_ignoreCallOp87;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call33;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call33;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call33;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call33;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call33;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call33;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call33;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call33;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call33;
reg    ap_block_pp0_stage1_11001_ignoreCallOp105;
reg   [511:0] grp_popcnt_fu_175_x_V;
reg    grp_popcnt_fu_175_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call36;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call36;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call36;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call36;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call36;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call36;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call36;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call36;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call36;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call36;
reg    ap_block_pp0_stage0_11001_ignoreCallOp88;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call36;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call36;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call36;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call36;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call36;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call36;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call36;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call36;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call36;
reg    ap_block_pp0_stage1_11001_ignoreCallOp106;
reg   [511:0] grp_popcnt_fu_180_x_V;
reg    grp_popcnt_fu_180_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call39;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call39;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call39;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call39;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call39;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call39;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call39;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call39;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call39;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call39;
reg    ap_block_pp0_stage0_11001_ignoreCallOp89;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call39;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call39;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call39;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call39;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call39;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call39;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call39;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call39;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call39;
reg    ap_block_pp0_stage1_11001_ignoreCallOp107;
reg   [511:0] grp_popcnt_fu_185_x_V;
reg    grp_popcnt_fu_185_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call42;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call42;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call42;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call42;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call42;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call42;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call42;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call42;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call42;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call42;
reg    ap_block_pp0_stage0_11001_ignoreCallOp90;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call42;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call42;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call42;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call42;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call42;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call42;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call42;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call42;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call42;
reg    ap_block_pp0_stage1_11001_ignoreCallOp108;
reg   [511:0] grp_popcnt_fu_190_x_V;
reg    grp_popcnt_fu_190_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call51;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call51;
wire    ap_block_state5_pp0_stage0_iter2_ignore_call51;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call51;
reg    ap_block_state9_pp0_stage0_iter4_ignore_call51;
wire    ap_block_state11_pp0_stage0_iter5_ignore_call51;
wire    ap_block_state13_pp0_stage0_iter6_ignore_call51;
wire    ap_block_state15_pp0_stage0_iter7_ignore_call51;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call51;
wire    ap_block_state19_pp0_stage0_iter9_ignore_call51;
reg    ap_block_pp0_stage0_11001_ignoreCallOp91;
wire    ap_block_state2_pp0_stage1_iter0_ignore_call51;
wire    ap_block_state4_pp0_stage1_iter1_ignore_call51;
wire    ap_block_state6_pp0_stage1_iter2_ignore_call51;
wire    ap_block_state8_pp0_stage1_iter3_ignore_call51;
reg    ap_block_state10_pp0_stage1_iter4_ignore_call51;
wire    ap_block_state12_pp0_stage1_iter5_ignore_call51;
wire    ap_block_state14_pp0_stage1_iter6_ignore_call51;
wire    ap_block_state16_pp0_stage1_iter7_ignore_call51;
wire    ap_block_state18_pp0_stage1_iter8_ignore_call51;
reg    ap_block_pp0_stage1_11001_ignoreCallOp109;
wire   [63:0] sum_cast_fu_229_p1;
wire   [63:0] sum3_cast_fu_351_p1;
reg    ap_reg_ioackin_m_axi_input_V_ARREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
wire   [58:0] input_V_offset_cast1_cast_fu_195_p1;
wire   [58:0] input_V_offset_cast9_fu_199_p1;
wire   [6:0] input_V_offset_cast_fu_209_p1;
wire   [6:0] sum_1_fu_213_p2;
wire   [58:0] sum_1_cast_cast_fu_219_p1;
wire   [10:0] andpop_local_V_trunc2_ext_fu_434_p1;
wire   [10:0] andpop_local_V_trunc_ext_fu_431_p1;
wire   [10:0] andpop_local_V89_trunc3_ext_fu_447_p1;
wire   [10:0] andpop_local_V89_trunc_ext_fu_444_p1;
wire   [10:0] andpop_local_V9_trunc4_ext_fu_460_p1;
wire   [10:0] andpop_local_V9_trunc_ext_fu_457_p1;
wire   [10:0] andpop_local_V10_trunc5_ext_fu_473_p1;
wire   [10:0] andpop_local_V10_trunc_ext_fu_470_p1;
wire   [10:0] andpop_local_V11_trunc6_ext_fu_486_p1;
wire   [10:0] andpop_local_V11_trunc_ext_fu_483_p1;
wire   [10:0] andpop_local_V12_trunc7_ext_fu_499_p1;
wire   [10:0] andpop_local_V12_trunc_ext_fu_496_p1;
wire   [10:0] andpop_local_V13_trunc8_ext_fu_512_p1;
wire   [10:0] andpop_local_V13_trunc_ext_fu_509_p1;
wire   [10:0] op2_V_assign_0_1_ext_fu_425_p1;
wire   [10:0] tmp_30_1_trunc_ext_fu_428_p1;
wire   [10:0] tmp1_fu_522_p2;
wire   [10:0] tmp2_fu_528_p3;
wire   [10:0] tmp5_fu_541_p2;
wire   [10:0] tmp_fu_535_p2;
wire   [10:0] tmp3_fu_547_p2;
wire   [10:0] andpop_local_V14_trunc9_ext_fu_562_p1;
wire   [10:0] andpop_local_V14_trunc_ext_fu_559_p1;
wire   [10:0] tmp_30_1_7_fu_553_p2;
wire   [10:0] andpop_local_V_fu_438_p2;
wire   [10:0] andpop_local_V1_fu_451_p2;
wire   [10:0] andpop_local_V9_fu_464_p2;
wire   [10:0] andpop_local_V2_fu_477_p2;
wire   [10:0] andpop_local_V3_fu_490_p2;
wire   [10:0] andpop_local_V4_fu_503_p2;
wire   [10:0] andpop_local_V5_fu_516_p2;
wire   [10:0] andpop_local_V6_fu_566_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to8;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to9;
wire    ap_enable_pp0;
reg    ap_condition_784;
reg    ap_condition_794;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_reg_ioackin_m_axi_input_V_ARREADY = 1'b0;
end

popcnt grp_popcnt_fu_150(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_150_x_V),
    .ap_return(grp_popcnt_fu_150_ap_return),
    .ap_ce(grp_popcnt_fu_150_ap_ce)
);

popcnt grp_popcnt_fu_155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_155_x_V),
    .ap_return(grp_popcnt_fu_155_ap_return),
    .ap_ce(grp_popcnt_fu_155_ap_ce)
);

popcnt grp_popcnt_fu_160(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_160_x_V),
    .ap_return(grp_popcnt_fu_160_ap_return),
    .ap_ce(grp_popcnt_fu_160_ap_ce)
);

popcnt grp_popcnt_fu_165(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_165_x_V),
    .ap_return(grp_popcnt_fu_165_ap_return),
    .ap_ce(grp_popcnt_fu_165_ap_ce)
);

popcnt grp_popcnt_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_170_x_V),
    .ap_return(grp_popcnt_fu_170_ap_return),
    .ap_ce(grp_popcnt_fu_170_ap_ce)
);

popcnt grp_popcnt_fu_175(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_175_x_V),
    .ap_return(grp_popcnt_fu_175_ap_return),
    .ap_ce(grp_popcnt_fu_175_ap_ce)
);

popcnt grp_popcnt_fu_180(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_180_x_V),
    .ap_return(grp_popcnt_fu_180_ap_return),
    .ap_ce(grp_popcnt_fu_180_ap_ce)
);

popcnt grp_popcnt_fu_185(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_185_x_V),
    .ap_return(grp_popcnt_fu_185_ap_return),
    .ap_ce(grp_popcnt_fu_185_ap_ce)
);

popcnt grp_popcnt_fu_190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(grp_popcnt_fu_190_x_V),
    .ap_return(grp_popcnt_fu_190_ap_return),
    .ap_ce(grp_popcnt_fu_190_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_input_V_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_input_V_ARREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage1_01001) & (m_axi_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (m_axi_input_V_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_input_V_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        andpop_local_V10_assign_1_reg_854 <= grp_popcnt_fu_165_ap_return;
        andpop_local_V11_assign_1_reg_859 <= grp_popcnt_fu_170_ap_return;
        andpop_local_V12_assign_1_reg_864 <= grp_popcnt_fu_175_ap_return;
        andpop_local_V13_assign_1_reg_869 <= grp_popcnt_fu_180_ap_return;
        andpop_local_V14_assign_1_reg_874 <= grp_popcnt_fu_185_ap_return;
        andpop_local_V89_assign_1_reg_844 <= grp_popcnt_fu_155_ap_return;
        andpop_local_V9_assign_1_reg_849 <= grp_popcnt_fu_160_ap_return;
        andpop_local_V_assign_1_reg_839 <= grp_popcnt_fu_150_ap_return;
        op2_V_assign_0_1_reg_879 <= grp_popcnt_fu_190_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_port_reg_cmpr_local_0_V_read <= cmpr_local_0_V_read;
        ap_port_reg_cmpr_local_1_V_read <= cmpr_local_1_V_read;
        ap_port_reg_cmpr_local_2_V_read <= cmpr_local_2_V_read;
        ap_port_reg_cmpr_local_3_V_read <= cmpr_local_3_V_read;
        ap_port_reg_cmpr_local_4_V_read <= cmpr_local_4_V_read;
        ap_port_reg_cmpr_local_5_V_read <= cmpr_local_5_V_read;
        ap_port_reg_cmpr_local_6_V_read <= cmpr_local_6_V_read;
        ap_port_reg_cmpr_local_7_V_read <= cmpr_local_7_V_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_V_addr_1_read_reg_781 <= m_axi_input_V_RDATA;
        p_Result_5_1_1_reg_687 <= {{ap_port_reg_cmpr_local_1_V_read[1023:512]}};
        p_Result_5_1_1_reg_687_pp0_iter1_reg <= p_Result_5_1_1_reg_687;
        p_Result_5_1_1_reg_687_pp0_iter2_reg <= p_Result_5_1_1_reg_687_pp0_iter1_reg;
        p_Result_5_1_1_reg_687_pp0_iter3_reg <= p_Result_5_1_1_reg_687_pp0_iter2_reg;
        p_Result_5_1_1_reg_687_pp0_iter4_reg <= p_Result_5_1_1_reg_687_pp0_iter3_reg;
        p_Result_5_1_2_reg_692 <= {{ap_port_reg_cmpr_local_2_V_read[1023:512]}};
        p_Result_5_1_2_reg_692_pp0_iter1_reg <= p_Result_5_1_2_reg_692;
        p_Result_5_1_2_reg_692_pp0_iter2_reg <= p_Result_5_1_2_reg_692_pp0_iter1_reg;
        p_Result_5_1_2_reg_692_pp0_iter3_reg <= p_Result_5_1_2_reg_692_pp0_iter2_reg;
        p_Result_5_1_2_reg_692_pp0_iter4_reg <= p_Result_5_1_2_reg_692_pp0_iter3_reg;
        p_Result_5_1_3_reg_697 <= {{ap_port_reg_cmpr_local_3_V_read[1023:512]}};
        p_Result_5_1_3_reg_697_pp0_iter1_reg <= p_Result_5_1_3_reg_697;
        p_Result_5_1_3_reg_697_pp0_iter2_reg <= p_Result_5_1_3_reg_697_pp0_iter1_reg;
        p_Result_5_1_3_reg_697_pp0_iter3_reg <= p_Result_5_1_3_reg_697_pp0_iter2_reg;
        p_Result_5_1_3_reg_697_pp0_iter4_reg <= p_Result_5_1_3_reg_697_pp0_iter3_reg;
        p_Result_5_1_4_reg_702 <= {{ap_port_reg_cmpr_local_4_V_read[1023:512]}};
        p_Result_5_1_4_reg_702_pp0_iter1_reg <= p_Result_5_1_4_reg_702;
        p_Result_5_1_4_reg_702_pp0_iter2_reg <= p_Result_5_1_4_reg_702_pp0_iter1_reg;
        p_Result_5_1_4_reg_702_pp0_iter3_reg <= p_Result_5_1_4_reg_702_pp0_iter2_reg;
        p_Result_5_1_4_reg_702_pp0_iter4_reg <= p_Result_5_1_4_reg_702_pp0_iter3_reg;
        p_Result_5_1_5_reg_707 <= {{ap_port_reg_cmpr_local_5_V_read[1023:512]}};
        p_Result_5_1_5_reg_707_pp0_iter1_reg <= p_Result_5_1_5_reg_707;
        p_Result_5_1_5_reg_707_pp0_iter2_reg <= p_Result_5_1_5_reg_707_pp0_iter1_reg;
        p_Result_5_1_5_reg_707_pp0_iter3_reg <= p_Result_5_1_5_reg_707_pp0_iter2_reg;
        p_Result_5_1_5_reg_707_pp0_iter4_reg <= p_Result_5_1_5_reg_707_pp0_iter3_reg;
        p_Result_5_1_6_reg_712 <= {{ap_port_reg_cmpr_local_6_V_read[1023:512]}};
        p_Result_5_1_6_reg_712_pp0_iter1_reg <= p_Result_5_1_6_reg_712;
        p_Result_5_1_6_reg_712_pp0_iter2_reg <= p_Result_5_1_6_reg_712_pp0_iter1_reg;
        p_Result_5_1_6_reg_712_pp0_iter3_reg <= p_Result_5_1_6_reg_712_pp0_iter2_reg;
        p_Result_5_1_6_reg_712_pp0_iter4_reg <= p_Result_5_1_6_reg_712_pp0_iter3_reg;
        p_Result_5_1_7_reg_717 <= {{ap_port_reg_cmpr_local_7_V_read[1023:512]}};
        p_Result_5_1_7_reg_717_pp0_iter1_reg <= p_Result_5_1_7_reg_717;
        p_Result_5_1_7_reg_717_pp0_iter2_reg <= p_Result_5_1_7_reg_717_pp0_iter1_reg;
        p_Result_5_1_7_reg_717_pp0_iter3_reg <= p_Result_5_1_7_reg_717_pp0_iter2_reg;
        p_Result_5_1_7_reg_717_pp0_iter4_reg <= p_Result_5_1_7_reg_717_pp0_iter3_reg;
        p_Result_5_1_reg_682 <= {{ap_port_reg_cmpr_local_0_V_read[1023:512]}};
        p_Result_5_1_reg_682_pp0_iter1_reg <= p_Result_5_1_reg_682;
        p_Result_5_1_reg_682_pp0_iter2_reg <= p_Result_5_1_reg_682_pp0_iter1_reg;
        p_Result_5_1_reg_682_pp0_iter3_reg <= p_Result_5_1_reg_682_pp0_iter2_reg;
        p_Result_5_1_reg_682_pp0_iter4_reg <= p_Result_5_1_reg_682_pp0_iter3_reg;
        this_assign_0_0_1_reg_746 <= this_assign_0_0_1_fu_365_p2;
        this_assign_0_0_2_reg_751 <= this_assign_0_0_2_fu_369_p2;
        this_assign_0_0_3_reg_756 <= this_assign_0_0_3_fu_373_p2;
        this_assign_0_0_4_reg_761 <= this_assign_0_0_4_fu_377_p2;
        this_assign_0_0_5_reg_766 <= this_assign_0_0_5_fu_381_p2;
        this_assign_0_0_6_reg_771 <= this_assign_0_0_6_fu_385_p2;
        this_assign_0_0_7_reg_776 <= this_assign_0_0_7_fu_389_p2;
        this_assign_reg_741 <= this_assign_fu_361_p2;
        tmp_504_reg_642 <= tmp_504_fu_239_p1;
        tmp_504_reg_642_pp0_iter1_reg <= tmp_504_reg_642;
        tmp_504_reg_642_pp0_iter2_reg <= tmp_504_reg_642_pp0_iter1_reg;
        tmp_504_reg_642_pp0_iter3_reg <= tmp_504_reg_642_pp0_iter2_reg;
        tmp_505_reg_647 <= tmp_505_fu_243_p1;
        tmp_505_reg_647_pp0_iter1_reg <= tmp_505_reg_647;
        tmp_505_reg_647_pp0_iter2_reg <= tmp_505_reg_647_pp0_iter1_reg;
        tmp_505_reg_647_pp0_iter3_reg <= tmp_505_reg_647_pp0_iter2_reg;
        tmp_506_reg_652 <= tmp_506_fu_247_p1;
        tmp_506_reg_652_pp0_iter1_reg <= tmp_506_reg_652;
        tmp_506_reg_652_pp0_iter2_reg <= tmp_506_reg_652_pp0_iter1_reg;
        tmp_506_reg_652_pp0_iter3_reg <= tmp_506_reg_652_pp0_iter2_reg;
        tmp_507_reg_657 <= tmp_507_fu_251_p1;
        tmp_507_reg_657_pp0_iter1_reg <= tmp_507_reg_657;
        tmp_507_reg_657_pp0_iter2_reg <= tmp_507_reg_657_pp0_iter1_reg;
        tmp_507_reg_657_pp0_iter3_reg <= tmp_507_reg_657_pp0_iter2_reg;
        tmp_508_reg_662 <= tmp_508_fu_255_p1;
        tmp_508_reg_662_pp0_iter1_reg <= tmp_508_reg_662;
        tmp_508_reg_662_pp0_iter2_reg <= tmp_508_reg_662_pp0_iter1_reg;
        tmp_508_reg_662_pp0_iter3_reg <= tmp_508_reg_662_pp0_iter2_reg;
        tmp_509_reg_667 <= tmp_509_fu_259_p1;
        tmp_509_reg_667_pp0_iter1_reg <= tmp_509_reg_667;
        tmp_509_reg_667_pp0_iter2_reg <= tmp_509_reg_667_pp0_iter1_reg;
        tmp_509_reg_667_pp0_iter3_reg <= tmp_509_reg_667_pp0_iter2_reg;
        tmp_510_reg_672 <= tmp_510_fu_263_p1;
        tmp_510_reg_672_pp0_iter1_reg <= tmp_510_reg_672;
        tmp_510_reg_672_pp0_iter2_reg <= tmp_510_reg_672_pp0_iter1_reg;
        tmp_510_reg_672_pp0_iter3_reg <= tmp_510_reg_672_pp0_iter2_reg;
        tmp_511_reg_677 <= tmp_511_fu_267_p1;
        tmp_511_reg_677_pp0_iter1_reg <= tmp_511_reg_677;
        tmp_511_reg_677_pp0_iter2_reg <= tmp_511_reg_677_pp0_iter1_reg;
        tmp_511_reg_677_pp0_iter3_reg <= tmp_511_reg_677_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        input_V_addr_read_reg_728 <= m_axi_input_V_RDATA;
        sum3_reg_631 <= sum3_fu_223_p2;
        sum_reg_626 <= sum_fu_203_p2;
        this_assign_1_0_1_1_reg_799 <= this_assign_1_0_1_1_fu_397_p2;
        this_assign_1_0_1_2_reg_804 <= this_assign_1_0_1_2_fu_401_p2;
        this_assign_1_0_1_3_reg_809 <= this_assign_1_0_1_3_fu_405_p2;
        this_assign_1_0_1_4_reg_814 <= this_assign_1_0_1_4_fu_409_p2;
        this_assign_1_0_1_5_reg_819 <= this_assign_1_0_1_5_fu_413_p2;
        this_assign_1_0_1_6_reg_824 <= this_assign_1_0_1_6_fu_417_p2;
        this_assign_1_0_1_7_reg_829 <= this_assign_1_0_1_7_fu_421_p2;
        this_assign_1_0_1_reg_794 <= this_assign_1_0_1_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        op2_V_assign_reg_834 <= grp_popcnt_fu_150_ap_return;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to9 = 1'b1;
    end else begin
        ap_idle_pp0_1to9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to8 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_input_V_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_input_V_ARREADY = m_axi_input_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_input_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp72) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp82) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_150_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_150_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_popcnt_fu_150_x_V = this_assign_reg_741;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_popcnt_fu_150_x_V = input_V_addr_read_reg_728;
    end else begin
        grp_popcnt_fu_150_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp102) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp84) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_155_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_155_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_155_x_V = this_assign_1_0_1_reg_794;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_155_x_V = this_assign_0_0_1_reg_746;
        end else begin
            grp_popcnt_fu_155_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_155_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp103) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp85) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_160_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_160_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_160_x_V = this_assign_1_0_1_1_reg_799;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_160_x_V = this_assign_0_0_2_reg_751;
        end else begin
            grp_popcnt_fu_160_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_160_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp104) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp86) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_165_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_165_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_165_x_V = this_assign_1_0_1_2_reg_804;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_165_x_V = this_assign_0_0_3_reg_756;
        end else begin
            grp_popcnt_fu_165_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_165_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp105) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp87) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_170_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_170_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_170_x_V = this_assign_1_0_1_3_reg_809;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_170_x_V = this_assign_0_0_4_reg_761;
        end else begin
            grp_popcnt_fu_170_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_170_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp106) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp88) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_175_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_175_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_175_x_V = this_assign_1_0_1_4_reg_814;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_175_x_V = this_assign_0_0_5_reg_766;
        end else begin
            grp_popcnt_fu_175_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_175_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp107) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp89) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_180_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_180_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_180_x_V = this_assign_1_0_1_5_reg_819;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_180_x_V = this_assign_0_0_6_reg_771;
        end else begin
            grp_popcnt_fu_180_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_180_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp108) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp90) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_185_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_185_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_185_x_V = this_assign_1_0_1_6_reg_824;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_185_x_V = this_assign_0_0_7_reg_776;
        end else begin
            grp_popcnt_fu_185_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_185_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (((1'b0 == ap_block_pp0_stage1_11001_ignoreCallOp109) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp91) & (1'b1 == ap_CS_fsm_pp0_stage0))))) begin
        grp_popcnt_fu_190_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_190_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            grp_popcnt_fu_190_x_V = this_assign_1_0_1_7_reg_829;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_popcnt_fu_190_x_V = input_V_addr_1_read_reg_781;
        end else begin
            grp_popcnt_fu_190_x_V = 'bx;
        end
    end else begin
        grp_popcnt_fu_190_x_V = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_V_blk_n_AR = m_axi_input_V_ARREADY;
    end else begin
        input_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_V_blk_n_R = m_axi_input_V_RVALID;
    end else begin
        input_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_input_V_ARREADY == 1'b0) & (1'b1 == ap_ce))) begin
        if ((1'b1 == ap_condition_794)) begin
            m_axi_input_V_ARADDR = sum3_cast_fu_351_p1;
        end else if ((1'b1 == ap_condition_784)) begin
            m_axi_input_V_ARADDR = sum_cast_fu_229_p1;
        end else begin
            m_axi_input_V_ARADDR = 'bx;
        end
    end else begin
        m_axi_input_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_m_axi_input_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        m_axi_input_V_ARVALID = 1'b1;
    end else begin
        m_axi_input_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        m_axi_input_V_RREADY = 1'b1;
    end else begin
        m_axi_input_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to9 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign andpop_local_V10_trunc5_ext_fu_473_p1 = grp_popcnt_fu_170_ap_return;

assign andpop_local_V10_trunc_ext_fu_470_p1 = andpop_local_V10_assign_1_reg_854;

assign andpop_local_V11_trunc6_ext_fu_486_p1 = grp_popcnt_fu_175_ap_return;

assign andpop_local_V11_trunc_ext_fu_483_p1 = andpop_local_V11_assign_1_reg_859;

assign andpop_local_V12_trunc7_ext_fu_499_p1 = grp_popcnt_fu_180_ap_return;

assign andpop_local_V12_trunc_ext_fu_496_p1 = andpop_local_V12_assign_1_reg_864;

assign andpop_local_V13_trunc8_ext_fu_512_p1 = grp_popcnt_fu_185_ap_return;

assign andpop_local_V13_trunc_ext_fu_509_p1 = andpop_local_V13_assign_1_reg_869;

assign andpop_local_V14_trunc9_ext_fu_562_p1 = grp_popcnt_fu_190_ap_return;

assign andpop_local_V14_trunc_ext_fu_559_p1 = andpop_local_V14_assign_1_reg_874;

assign andpop_local_V1_fu_451_p2 = (andpop_local_V89_trunc3_ext_fu_447_p1 + andpop_local_V89_trunc_ext_fu_444_p1);

assign andpop_local_V2_fu_477_p2 = (andpop_local_V10_trunc5_ext_fu_473_p1 + andpop_local_V10_trunc_ext_fu_470_p1);

assign andpop_local_V3_fu_490_p2 = (andpop_local_V11_trunc6_ext_fu_486_p1 + andpop_local_V11_trunc_ext_fu_483_p1);

assign andpop_local_V4_fu_503_p2 = (andpop_local_V12_trunc7_ext_fu_499_p1 + andpop_local_V12_trunc_ext_fu_496_p1);

assign andpop_local_V5_fu_516_p2 = (andpop_local_V13_trunc8_ext_fu_512_p1 + andpop_local_V13_trunc_ext_fu_509_p1);

assign andpop_local_V6_fu_566_p2 = (andpop_local_V14_trunc9_ext_fu_562_p1 + andpop_local_V14_trunc_ext_fu_559_p1);

assign andpop_local_V89_trunc3_ext_fu_447_p1 = grp_popcnt_fu_160_ap_return;

assign andpop_local_V89_trunc_ext_fu_444_p1 = andpop_local_V89_assign_1_reg_844;

assign andpop_local_V9_fu_464_p2 = (andpop_local_V9_trunc4_ext_fu_460_p1 + andpop_local_V9_trunc_ext_fu_457_p1);

assign andpop_local_V9_trunc4_ext_fu_460_p1 = grp_popcnt_fu_165_ap_return;

assign andpop_local_V9_trunc_ext_fu_457_p1 = andpop_local_V9_assign_1_reg_849;

assign andpop_local_V_fu_438_p2 = (andpop_local_V_trunc2_ext_fu_434_p1 + andpop_local_V_trunc_ext_fu_431_p1);

assign andpop_local_V_trunc2_ext_fu_434_p1 = grp_popcnt_fu_155_ap_return;

assign andpop_local_V_trunc_ext_fu_431_p1 = andpop_local_V_assign_1_reg_839;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp82 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp84 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp85 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp86 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp87 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp88 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp89 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp90 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp91 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp102 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp103 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp104 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp105 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp106 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp107 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp108 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp109 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_ignoreCallOp72 = (((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_input_V_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call18 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call24 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call27 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call30 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call33 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call36 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call39 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call42 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter4_ignore_call51 = (m_axi_input_V_RVALID == 1'b0);
end

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9_ignore_call51 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call18 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call24 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call27 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call30 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call33 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call36 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call39 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call42 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call51 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call36 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call42 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3_ignore_call51 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call18 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call24 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call27 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call30 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call33 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call36 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call39 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call42 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter4_ignore_call51 = (m_axi_input_V_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_784 = ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_794 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = tmp_30_1_7_fu_553_p2;

assign ap_return_1 = andpop_local_V_fu_438_p2;

assign ap_return_2 = andpop_local_V1_fu_451_p2;

assign ap_return_3 = andpop_local_V9_fu_464_p2;

assign ap_return_4 = andpop_local_V2_fu_477_p2;

assign ap_return_5 = andpop_local_V3_fu_490_p2;

assign ap_return_6 = andpop_local_V4_fu_503_p2;

assign ap_return_7 = andpop_local_V5_fu_516_p2;

assign ap_return_8 = andpop_local_V6_fu_566_p2;

assign input_V_offset_cast1_cast_fu_195_p1 = input_V_offset1;

assign input_V_offset_cast9_fu_199_p1 = input_V_offset;

assign input_V_offset_cast_fu_209_p1 = input_V_offset1;

assign m_axi_input_V_ARBURST = 2'd0;

assign m_axi_input_V_ARCACHE = 4'd0;

assign m_axi_input_V_ARID = 1'd0;

assign m_axi_input_V_ARLEN = 32'd1;

assign m_axi_input_V_ARLOCK = 2'd0;

assign m_axi_input_V_ARPROT = 3'd0;

assign m_axi_input_V_ARQOS = 4'd0;

assign m_axi_input_V_ARREGION = 4'd0;

assign m_axi_input_V_ARSIZE = 3'd0;

assign m_axi_input_V_ARUSER = 1'd0;

assign m_axi_input_V_AWADDR = 64'd0;

assign m_axi_input_V_AWBURST = 2'd0;

assign m_axi_input_V_AWCACHE = 4'd0;

assign m_axi_input_V_AWID = 1'd0;

assign m_axi_input_V_AWLEN = 32'd0;

assign m_axi_input_V_AWLOCK = 2'd0;

assign m_axi_input_V_AWPROT = 3'd0;

assign m_axi_input_V_AWQOS = 4'd0;

assign m_axi_input_V_AWREGION = 4'd0;

assign m_axi_input_V_AWSIZE = 3'd0;

assign m_axi_input_V_AWUSER = 1'd0;

assign m_axi_input_V_AWVALID = 1'b0;

assign m_axi_input_V_BREADY = 1'b0;

assign m_axi_input_V_WDATA = 512'd0;

assign m_axi_input_V_WID = 1'd0;

assign m_axi_input_V_WLAST = 1'b0;

assign m_axi_input_V_WSTRB = 64'd0;

assign m_axi_input_V_WUSER = 1'd0;

assign m_axi_input_V_WVALID = 1'b0;

assign op2_V_assign_0_1_ext_fu_425_p1 = op2_V_assign_0_1_reg_879;

assign sum3_cast_fu_351_p1 = sum3_reg_631;

assign sum3_fu_223_p2 = (sum_1_cast_cast_fu_219_p1 + input_V_offset_cast9_fu_199_p1);

assign sum_1_cast_cast_fu_219_p1 = sum_1_fu_213_p2;

assign sum_1_fu_213_p2 = (7'd1 + input_V_offset_cast_fu_209_p1);

assign sum_cast_fu_229_p1 = sum_reg_626;

assign sum_fu_203_p2 = (input_V_offset_cast1_cast_fu_195_p1 + input_V_offset_cast9_fu_199_p1);

assign this_assign_0_0_1_fu_365_p2 = (tmp_505_reg_647_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_2_fu_369_p2 = (tmp_506_reg_652_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_3_fu_373_p2 = (tmp_507_reg_657_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_4_fu_377_p2 = (tmp_508_reg_662_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_5_fu_381_p2 = (tmp_509_reg_667_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_6_fu_385_p2 = (tmp_510_reg_672_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_0_0_7_fu_389_p2 = (tmp_511_reg_677_pp0_iter3_reg & input_V_addr_read_reg_728);

assign this_assign_1_0_1_1_fu_397_p2 = (p_Result_5_1_1_reg_687_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_2_fu_401_p2 = (p_Result_5_1_2_reg_692_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_3_fu_405_p2 = (p_Result_5_1_3_reg_697_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_4_fu_409_p2 = (p_Result_5_1_4_reg_702_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_5_fu_413_p2 = (p_Result_5_1_5_reg_707_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_6_fu_417_p2 = (p_Result_5_1_6_reg_712_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_7_fu_421_p2 = (p_Result_5_1_7_reg_717_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_1_0_1_fu_393_p2 = (p_Result_5_1_reg_682_pp0_iter4_reg & input_V_addr_1_read_reg_781);

assign this_assign_fu_361_p2 = (tmp_504_reg_642_pp0_iter3_reg & input_V_addr_read_reg_728);

assign tmp1_fu_522_p2 = (op2_V_assign_0_1_ext_fu_425_p1 + tmp_30_1_trunc_ext_fu_428_p1);

assign tmp2_fu_528_p3 = {{op2_V_assign_0_1_reg_879}, {1'd0}};

assign tmp3_fu_547_p2 = (tmp2_fu_528_p3 + tmp5_fu_541_p2);

assign tmp5_fu_541_p2 = (op2_V_assign_0_1_ext_fu_425_p1 + tmp2_fu_528_p3);

assign tmp_30_1_7_fu_553_p2 = (tmp_fu_535_p2 + tmp3_fu_547_p2);

assign tmp_30_1_trunc_ext_fu_428_p1 = op2_V_assign_reg_834;

assign tmp_504_fu_239_p1 = ap_port_reg_cmpr_local_0_V_read[511:0];

assign tmp_505_fu_243_p1 = ap_port_reg_cmpr_local_1_V_read[511:0];

assign tmp_506_fu_247_p1 = ap_port_reg_cmpr_local_2_V_read[511:0];

assign tmp_507_fu_251_p1 = ap_port_reg_cmpr_local_3_V_read[511:0];

assign tmp_508_fu_255_p1 = ap_port_reg_cmpr_local_4_V_read[511:0];

assign tmp_509_fu_259_p1 = ap_port_reg_cmpr_local_5_V_read[511:0];

assign tmp_510_fu_263_p1 = ap_port_reg_cmpr_local_6_V_read[511:0];

assign tmp_511_fu_267_p1 = ap_port_reg_cmpr_local_7_V_read[511:0];

assign tmp_fu_535_p2 = (tmp1_fu_522_p2 + tmp2_fu_528_p3);

endmodule //data_read_ref
