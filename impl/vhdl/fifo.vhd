-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fifo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_line_0_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_0_V_V_empty_n : IN STD_LOGIC;
    input_line_0_V_V_read : OUT STD_LOGIC;
    input_line_1_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_1_V_V_empty_n : IN STD_LOGIC;
    input_line_1_V_V_read : OUT STD_LOGIC;
    input_line_2_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_2_V_V_empty_n : IN STD_LOGIC;
    input_line_2_V_V_read : OUT STD_LOGIC;
    input_line_3_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_3_V_V_empty_n : IN STD_LOGIC;
    input_line_3_V_V_read : OUT STD_LOGIC;
    input_line_4_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_4_V_V_empty_n : IN STD_LOGIC;
    input_line_4_V_V_read : OUT STD_LOGIC;
    input_line_5_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_5_V_V_empty_n : IN STD_LOGIC;
    input_line_5_V_V_read : OUT STD_LOGIC;
    input_line_6_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_6_V_V_empty_n : IN STD_LOGIC;
    input_line_6_V_V_read : OUT STD_LOGIC;
    input_line_7_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    input_line_7_V_V_empty_n : IN STD_LOGIC;
    input_line_7_V_V_read : OUT STD_LOGIC;
    m_axi_output_V_AWVALID : OUT STD_LOGIC;
    m_axi_output_V_AWREADY : IN STD_LOGIC;
    m_axi_output_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_WVALID : OUT STD_LOGIC;
    m_axi_output_V_WREADY : IN STD_LOGIC;
    m_axi_output_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_output_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_WLAST : OUT STD_LOGIC;
    m_axi_output_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_ARVALID : OUT STD_LOGIC;
    m_axi_output_V_ARREADY : IN STD_LOGIC;
    m_axi_output_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RVALID : IN STD_LOGIC;
    m_axi_output_V_RREADY : OUT STD_LOGIC;
    m_axi_output_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_output_V_RLAST : IN STD_LOGIC;
    m_axi_output_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_BVALID : IN STD_LOGIC;
    m_axi_output_V_BREADY : OUT STD_LOGIC;
    m_axi_output_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_V_offset_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    output_V_offset_empty_n : IN STD_LOGIC;
    output_V_offset_read : OUT STD_LOGIC );
end;


architecture behav of fifo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_280 : STD_LOGIC_VECTOR (9 downto 0) := "1010000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_line_0_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_flatten_i_reg_429 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_reg_438 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_tmp_503_phi_fu_275_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_line_1_V_V_blk_n : STD_LOGIC;
    signal input_line_2_V_V_blk_n : STD_LOGIC;
    signal input_line_3_V_V_blk_n : STD_LOGIC;
    signal input_line_4_V_V_blk_n : STD_LOGIC;
    signal input_line_5_V_V_blk_n : STD_LOGIC;
    signal input_line_6_V_V_blk_n : STD_LOGIC;
    signal input_line_7_V_V_blk_n : STD_LOGIC;
    signal output_V_blk_n_AW : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_503_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp_503_reg_272_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_503_reg_272_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal output_V_offset_blk_n : STD_LOGIC;
    signal indvar_flatten_i_reg_250 : STD_LOGIC_VECTOR (9 downto 0);
    signal buffer_num_i_reg_261 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op69_read_state3 : BOOLEAN;
    signal ap_predicate_op71_read_state3 : BOOLEAN;
    signal ap_predicate_op73_read_state3 : BOOLEAN;
    signal ap_predicate_op75_read_state3 : BOOLEAN;
    signal ap_predicate_op77_read_state3 : BOOLEAN;
    signal ap_predicate_op79_read_state3 : BOOLEAN;
    signal ap_predicate_op81_read_state3 : BOOLEAN;
    signal ap_predicate_op83_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_output_V_AWREADY : STD_LOGIC;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_output_V_WREADY : STD_LOGIC;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_503_reg_272_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_reg_272_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_reg_272_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_503_reg_272_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_V_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_i_fu_334_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_cast_i_reg_424 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal exitcond_flatten_i_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_i_fu_349_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_502_fu_369_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal buffer_num_fu_373_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_i_fu_392_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum_i_reg_487 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter1_tmp_503_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_temp_V_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_temp_V_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_temp_V_reg_302 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_cast_i_fu_402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_output_V_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_output_V_WREADY : STD_LOGIC := '0';
    signal data_num_fu_112 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_num_1_fu_382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_324_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal exitcond3_i_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_num_mid2_i_fu_361_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_cast_i_25_fu_388_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_560 : BOOLEAN;
    signal ap_condition_181 : BOOLEAN;
    signal ap_condition_175 : BOOLEAN;
    signal ap_condition_169 : BOOLEAN;
    signal ap_condition_163 : BOOLEAN;
    signal ap_condition_157 : BOOLEAN;
    signal ap_condition_151 : BOOLEAN;
    signal ap_condition_145 : BOOLEAN;
    signal ap_condition_139 : BOOLEAN;
    signal ap_condition_382 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_output_V_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_output_V_AWREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_503_reg_272 = ap_const_lv1_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_output_V_AWREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (m_axi_output_V_AWREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_output_V_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_output_V_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_output_V_WREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter2_reg = ap_const_lv1_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_output_V_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (m_axi_output_V_WREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_output_V_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_temp_V_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_382)) then
                if ((ap_const_boolean_1 = ap_condition_139)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_0_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_145)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_1_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_151)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_2_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_157)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_3_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_163)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_4_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_169)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_5_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_175)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_6_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_condition_181)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= input_line_7_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_temp_V_reg_302 <= ap_phi_reg_pp0_iter1_temp_V_reg_302;
                end if;
            end if; 
        end if;
    end process;

    buffer_num_i_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_i_fu_343_p2 = ap_const_lv1_0))) then 
                buffer_num_i_reg_261 <= buffer_num_fu_373_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                buffer_num_i_reg_261 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    data_num_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1))) then 
                data_num_fu_112 <= data_num_1_fu_382_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                data_num_fu_112 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_i_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_i_fu_343_p2 = ap_const_lv1_0))) then 
                indvar_flatten_i_reg_250 <= indvar_flatten_next_i_fu_349_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_i_reg_250 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    tmp_503_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_382)) then
                if (((tmp_502_reg_438 = ap_const_lv3_7) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_7_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_6) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_6_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_5) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_5_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_4) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_4_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_3) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_3_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_2) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_2_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_1) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_1_V_V_empty_n, others=>'-');
                elsif (((tmp_502_reg_438 = ap_const_lv3_0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
                    tmp_503_reg_272 <= (0=>input_line_0_V_V_empty_n, others=>'-');
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    tmp_503_reg_272 <= ap_phi_reg_pp0_iter1_tmp_503_reg_272;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_temp_V_reg_302 <= ap_phi_reg_pp0_iter0_temp_V_reg_302;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_i_reg_429 <= exitcond_flatten_i_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1))) then
                sum_i_reg_487 <= sum_i_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                temp_V_reg_302 <= ap_phi_reg_pp0_iter2_temp_V_reg_302;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_i_fu_343_p2 = ap_const_lv1_0))) then
                tmp_502_reg_438 <= tmp_502_fu_369_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_503_reg_272_pp0_iter2_reg <= tmp_503_reg_272;
                tmp_503_reg_272_pp0_iter3_reg <= tmp_503_reg_272_pp0_iter2_reg;
                tmp_503_reg_272_pp0_iter4_reg <= tmp_503_reg_272_pp0_iter3_reg;
                tmp_503_reg_272_pp0_iter5_reg <= tmp_503_reg_272_pp0_iter4_reg;
                tmp_503_reg_272_pp0_iter6_reg <= tmp_503_reg_272_pp0_iter5_reg;
                tmp_503_reg_272_pp0_iter7_reg <= tmp_503_reg_272_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    tmp_cast_i_reg_424(57 downto 0) <= tmp_cast_i_fu_334_p1(57 downto 0);
            end if;
        end if;
    end process;
    tmp_cast_i_reg_424(58) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, output_V_offset_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, exitcond_flatten_i_fu_343_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_i_fu_343_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_flatten_i_fu_343_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(input_line_0_V_V_empty_n, input_line_1_V_V_empty_n, input_line_2_V_V_empty_n, input_line_3_V_V_empty_n, input_line_4_V_V_empty_n, input_line_5_V_V_empty_n, input_line_6_V_V_empty_n, input_line_7_V_V_empty_n, m_axi_output_V_BVALID, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, tmp_503_reg_272_pp0_iter7_reg, ap_predicate_op69_read_state3, ap_predicate_op71_read_state3, ap_predicate_op73_read_state3, ap_predicate_op75_read_state3, ap_predicate_op77_read_state3, ap_predicate_op79_read_state3, ap_predicate_op81_read_state3, ap_predicate_op83_read_state3)
    begin
                ap_block_pp0_stage0_01001 <= (((m_axi_output_V_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((input_line_7_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op83_read_state3 = ap_const_boolean_1)) or ((input_line_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state3 = ap_const_boolean_1)) or ((input_line_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op79_read_state3 = ap_const_boolean_1)) or ((input_line_2_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state3 = ap_const_boolean_1)) or ((input_line_3_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state3 = ap_const_boolean_1)) or ((input_line_4_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op73_read_state3 = ap_const_boolean_1)) or ((input_line_5_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op71_read_state3 = ap_const_boolean_1)) or ((input_line_6_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(input_line_0_V_V_empty_n, input_line_1_V_V_empty_n, input_line_2_V_V_empty_n, input_line_3_V_V_empty_n, input_line_4_V_V_empty_n, input_line_5_V_V_empty_n, input_line_6_V_V_empty_n, input_line_7_V_V_empty_n, m_axi_output_V_BVALID, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, tmp_503_reg_272_pp0_iter7_reg, ap_predicate_op69_read_state3, ap_predicate_op71_read_state3, ap_predicate_op73_read_state3, ap_predicate_op75_read_state3, ap_predicate_op77_read_state3, ap_predicate_op79_read_state3, ap_predicate_op81_read_state3, ap_predicate_op83_read_state3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_output_V_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((input_line_7_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op83_read_state3 = ap_const_boolean_1)) or ((input_line_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state3 = ap_const_boolean_1)) or ((input_line_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op79_read_state3 = ap_const_boolean_1)) or ((input_line_2_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state3 = ap_const_boolean_1)) or ((input_line_3_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state3 = ap_const_boolean_1)) or ((input_line_4_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op73_read_state3 = ap_const_boolean_1)) or ((input_line_5_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op71_read_state3 = ap_const_boolean_1)) or ((input_line_6_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(input_line_0_V_V_empty_n, input_line_1_V_V_empty_n, input_line_2_V_V_empty_n, input_line_3_V_V_empty_n, input_line_4_V_V_empty_n, input_line_5_V_V_empty_n, input_line_6_V_V_empty_n, input_line_7_V_V_empty_n, m_axi_output_V_BVALID, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, tmp_503_reg_272_pp0_iter7_reg, ap_predicate_op69_read_state3, ap_predicate_op71_read_state3, ap_predicate_op73_read_state3, ap_predicate_op75_read_state3, ap_predicate_op77_read_state3, ap_predicate_op79_read_state3, ap_predicate_op81_read_state3, ap_predicate_op83_read_state3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_output_V_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((input_line_7_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op83_read_state3 = ap_const_boolean_1)) or ((input_line_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state3 = ap_const_boolean_1)) or ((input_line_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op79_read_state3 = ap_const_boolean_1)) or ((input_line_2_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state3 = ap_const_boolean_1)) or ((input_line_3_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state3 = ap_const_boolean_1)) or ((input_line_4_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op73_read_state3 = ap_const_boolean_1)) or ((input_line_5_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op71_read_state3 = ap_const_boolean_1)) or ((input_line_6_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, output_V_offset_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage0_iter8_assign_proc : process(m_axi_output_V_BVALID, tmp_503_reg_272_pp0_iter7_reg)
    begin
                ap_block_state10_pp0_stage0_iter8 <= ((m_axi_output_V_BVALID = ap_const_logic_0) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(input_line_0_V_V_empty_n, input_line_1_V_V_empty_n, input_line_2_V_V_empty_n, input_line_3_V_V_empty_n, input_line_4_V_V_empty_n, input_line_5_V_V_empty_n, input_line_6_V_V_empty_n, input_line_7_V_V_empty_n, ap_predicate_op69_read_state3, ap_predicate_op71_read_state3, ap_predicate_op73_read_state3, ap_predicate_op75_read_state3, ap_predicate_op77_read_state3, ap_predicate_op79_read_state3, ap_predicate_op81_read_state3, ap_predicate_op83_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((input_line_7_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op83_read_state3 = ap_const_boolean_1)) or ((input_line_0_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state3 = ap_const_boolean_1)) or ((input_line_1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op79_read_state3 = ap_const_boolean_1)) or ((input_line_2_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op77_read_state3 = ap_const_boolean_1)) or ((input_line_3_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op75_read_state3 = ap_const_boolean_1)) or ((input_line_4_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op73_read_state3 = ap_const_boolean_1)) or ((input_line_5_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op71_read_state3 = ap_const_boolean_1)) or ((input_line_6_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op69_read_state3 = ap_const_boolean_1)));
    end process;


    ap_block_state4_io_assign_proc : process(tmp_503_reg_272, ap_sig_ioackin_m_axi_output_V_AWREADY)
    begin
                ap_block_state4_io <= ((ap_sig_ioackin_m_axi_output_V_AWREADY = ap_const_logic_0) and (tmp_503_reg_272 = ap_const_lv1_1));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(tmp_503_reg_272_pp0_iter2_reg, ap_sig_ioackin_m_axi_output_V_WREADY)
    begin
                ap_block_state5_io <= ((ap_sig_ioackin_m_axi_output_V_WREADY = ap_const_logic_0) and (tmp_503_reg_272_pp0_iter2_reg = ap_const_lv1_1));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_139_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_139 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_145_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_145 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_1) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_151_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_151 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_2) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_157_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_157 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_3) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_163_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_163 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_4) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_169_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_169 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_5) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_175_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_175 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_6) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_181_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_condition_181 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_7) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_382_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_382 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_560_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429)
    begin
                ap_condition_560 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_flatten_i_fu_343_p2)
    begin
        if ((exitcond_flatten_i_fu_343_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_tmp_503_phi_fu_275_p16_assign_proc : process(input_line_0_V_V_empty_n, input_line_1_V_V_empty_n, input_line_2_V_V_empty_n, input_line_3_V_V_empty_n, input_line_4_V_V_empty_n, input_line_5_V_V_empty_n, input_line_6_V_V_empty_n, input_line_7_V_V_empty_n, tmp_502_reg_438, ap_phi_reg_pp0_iter1_tmp_503_reg_272, ap_condition_560)
    begin
        if ((ap_const_boolean_1 = ap_condition_560)) then
            if ((tmp_502_reg_438 = ap_const_lv3_7)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_7_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_6)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_6_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_5)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_5_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_4)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_4_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_3)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_3_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_2)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_2_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_1)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_1_V_V_empty_n, others=>'-');
            elsif ((tmp_502_reg_438 = ap_const_lv3_0)) then 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= (0=>input_line_0_V_V_empty_n, others=>'-');
            else 
                ap_phi_mux_tmp_503_phi_fu_275_p16 <= ap_phi_reg_pp0_iter1_tmp_503_reg_272;
            end if;
        else 
            ap_phi_mux_tmp_503_phi_fu_275_p16 <= ap_phi_reg_pp0_iter1_tmp_503_reg_272;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_temp_V_reg_302 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_tmp_503_reg_272 <= "X";

    ap_predicate_op69_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op69_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_6) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op71_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op71_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_5) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op73_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op73_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_4) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op75_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op75_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_3) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op77_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op77_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_2) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op79_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op79_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_1) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op81_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op81_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_predicate_op83_read_state3_assign_proc : process(exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
                ap_predicate_op83_read_state3 <= ((ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_7) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_output_V_AWREADY_assign_proc : process(m_axi_output_V_AWREADY, ap_reg_ioackin_m_axi_output_V_AWREADY)
    begin
        if ((ap_reg_ioackin_m_axi_output_V_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_output_V_AWREADY <= m_axi_output_V_AWREADY;
        else 
            ap_sig_ioackin_m_axi_output_V_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_output_V_WREADY_assign_proc : process(m_axi_output_V_WREADY, ap_reg_ioackin_m_axi_output_V_WREADY)
    begin
        if ((ap_reg_ioackin_m_axi_output_V_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_output_V_WREADY <= m_axi_output_V_WREADY;
        else 
            ap_sig_ioackin_m_axi_output_V_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    buffer_num_fu_373_p2 <= std_logic_vector(unsigned(buffer_num_mid2_i_fu_361_p3) + unsigned(ap_const_lv4_1));
    buffer_num_mid2_i_fu_361_p3 <= 
        ap_const_lv4_0 when (exitcond3_i_fu_355_p2(0) = '1') else 
        buffer_num_i_reg_261;
    data_num_1_fu_382_p2 <= std_logic_vector(unsigned(data_num_fu_112) + unsigned(ap_const_lv16_1));
    exitcond3_i_fu_355_p2 <= "1" when (buffer_num_i_reg_261 = ap_const_lv4_8) else "0";
    exitcond_flatten_i_fu_343_p2 <= "1" when (indvar_flatten_i_reg_250 = ap_const_lv10_280) else "0";
    indvar_flatten_next_i_fu_349_p2 <= std_logic_vector(unsigned(indvar_flatten_i_reg_250) + unsigned(ap_const_lv10_1));

    input_line_0_V_V_blk_n_assign_proc : process(input_line_0_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_502_reg_438 = ap_const_lv3_0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_0_V_V_blk_n <= input_line_0_V_V_empty_n;
        else 
            input_line_0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_0_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op81_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op81_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_0_V_V_read <= ap_const_logic_1;
        else 
            input_line_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_1_V_V_blk_n_assign_proc : process(input_line_1_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_1_V_V_blk_n <= input_line_1_V_V_empty_n;
        else 
            input_line_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_1_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op79_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op79_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_1_V_V_read <= ap_const_logic_1;
        else 
            input_line_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_2_V_V_blk_n_assign_proc : process(input_line_2_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_2_V_V_blk_n <= input_line_2_V_V_empty_n;
        else 
            input_line_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_2_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op77_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_2_V_V_read <= ap_const_logic_1;
        else 
            input_line_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_3_V_V_blk_n_assign_proc : process(input_line_3_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_3_V_V_blk_n <= input_line_3_V_V_empty_n;
        else 
            input_line_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_3_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op75_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op75_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_3_V_V_read <= ap_const_logic_1;
        else 
            input_line_3_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_4_V_V_blk_n_assign_proc : process(input_line_4_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_4_V_V_blk_n <= input_line_4_V_V_empty_n;
        else 
            input_line_4_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_4_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op73_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_4_V_V_read <= ap_const_logic_1;
        else 
            input_line_4_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_5_V_V_blk_n_assign_proc : process(input_line_5_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_5_V_V_blk_n <= input_line_5_V_V_empty_n;
        else 
            input_line_5_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_5_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op71_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op71_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_5_V_V_read <= ap_const_logic_1;
        else 
            input_line_5_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_6_V_V_blk_n_assign_proc : process(input_line_6_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_6_V_V_blk_n <= input_line_6_V_V_empty_n;
        else 
            input_line_6_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_6_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op69_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op69_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_6_V_V_read <= ap_const_logic_1;
        else 
            input_line_6_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    input_line_7_V_V_blk_n_assign_proc : process(input_line_7_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_flatten_i_reg_429, tmp_502_reg_438, ap_phi_mux_tmp_503_phi_fu_275_p16)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_tmp_503_phi_fu_275_p16 = ap_const_lv1_1) and (tmp_502_reg_438 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten_i_reg_429 = ap_const_lv1_0))) then 
            input_line_7_V_V_blk_n <= input_line_7_V_V_empty_n;
        else 
            input_line_7_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_line_7_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op83_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op83_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_line_7_V_V_read <= ap_const_logic_1;
        else 
            input_line_7_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_output_V_ARADDR <= ap_const_lv64_0;
    m_axi_output_V_ARBURST <= ap_const_lv2_0;
    m_axi_output_V_ARCACHE <= ap_const_lv4_0;
    m_axi_output_V_ARID <= ap_const_lv1_0;
    m_axi_output_V_ARLEN <= ap_const_lv32_0;
    m_axi_output_V_ARLOCK <= ap_const_lv2_0;
    m_axi_output_V_ARPROT <= ap_const_lv3_0;
    m_axi_output_V_ARQOS <= ap_const_lv4_0;
    m_axi_output_V_ARREGION <= ap_const_lv4_0;
    m_axi_output_V_ARSIZE <= ap_const_lv3_0;
    m_axi_output_V_ARUSER <= ap_const_lv1_0;
    m_axi_output_V_ARVALID <= ap_const_logic_0;
    m_axi_output_V_AWADDR <= sum_cast_i_fu_402_p1;
    m_axi_output_V_AWBURST <= ap_const_lv2_0;
    m_axi_output_V_AWCACHE <= ap_const_lv4_0;
    m_axi_output_V_AWID <= ap_const_lv1_0;
    m_axi_output_V_AWLEN <= ap_const_lv32_1;
    m_axi_output_V_AWLOCK <= ap_const_lv2_0;
    m_axi_output_V_AWPROT <= ap_const_lv3_0;
    m_axi_output_V_AWQOS <= ap_const_lv4_0;
    m_axi_output_V_AWREGION <= ap_const_lv4_0;
    m_axi_output_V_AWSIZE <= ap_const_lv3_0;
    m_axi_output_V_AWUSER <= ap_const_lv1_0;

    m_axi_output_V_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter2, tmp_503_reg_272, ap_reg_ioackin_m_axi_output_V_AWREADY, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_m_axi_output_V_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_503_reg_272 = ap_const_lv1_1))) then 
            m_axi_output_V_AWVALID <= ap_const_logic_1;
        else 
            m_axi_output_V_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_output_V_BREADY_assign_proc : process(ap_enable_reg_pp0_iter8, tmp_503_reg_272_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1))) then 
            m_axi_output_V_BREADY <= ap_const_logic_1;
        else 
            m_axi_output_V_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_output_V_RREADY <= ap_const_logic_0;
    m_axi_output_V_WDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(temp_V_reg_302),512));
    m_axi_output_V_WID <= ap_const_lv1_0;
    m_axi_output_V_WLAST <= ap_const_logic_0;
    m_axi_output_V_WSTRB <= ap_const_lv64_FFFFFFFFFFFFFFFF;
    m_axi_output_V_WUSER <= ap_const_lv1_0;

    m_axi_output_V_WVALID_assign_proc : process(ap_enable_reg_pp0_iter3, tmp_503_reg_272_pp0_iter2_reg, ap_block_pp0_stage0_01001, ap_reg_ioackin_m_axi_output_V_WREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_m_axi_output_V_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter2_reg = ap_const_lv1_1))) then 
            m_axi_output_V_WVALID <= ap_const_logic_1;
        else 
            m_axi_output_V_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    output_V_blk_n_AW_assign_proc : process(m_axi_output_V_AWREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, tmp_503_reg_272)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (tmp_503_reg_272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            output_V_blk_n_AW <= m_axi_output_V_AWREADY;
        else 
            output_V_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    output_V_blk_n_B_assign_proc : process(m_axi_output_V_BVALID, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, tmp_503_reg_272_pp0_iter7_reg)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            output_V_blk_n_B <= m_axi_output_V_BVALID;
        else 
            output_V_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    output_V_blk_n_W_assign_proc : process(m_axi_output_V_WREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, tmp_503_reg_272_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_503_reg_272_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            output_V_blk_n_W <= m_axi_output_V_WREADY;
        else 
            output_V_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    output_V_offset_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, output_V_offset_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_V_offset_blk_n <= output_V_offset_empty_n;
        else 
            output_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_V_offset_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, output_V_offset_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (output_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            output_V_offset_read <= ap_const_logic_1;
        else 
            output_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    sum_cast_i_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_i_reg_487),64));
    sum_i_fu_392_p2 <= std_logic_vector(unsigned(tmp_cast_i_reg_424) + unsigned(tmp_cast_i_25_fu_388_p1));
    tmp_502_fu_369_p1 <= buffer_num_mid2_i_fu_361_p3(3 - 1 downto 0);
    tmp_cast_i_25_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(data_num_fu_112),59));
    tmp_cast_i_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_324_p4),59));
    tmp_fu_324_p4 <= output_V_offset_dout(63 downto 6);
end behav;
