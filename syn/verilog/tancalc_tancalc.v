// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tancalc_tancalc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-fsgd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=751,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=26250,HLS_SYN_LUT=103777,HLS_VERSION=2019_1}" *)

module tancalc_tancalc (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_pp0_stage0 = 25'd512;
parameter    ap_ST_fsm_state15 = 25'd1024;
parameter    ap_ST_fsm_state16 = 25'd2048;
parameter    ap_ST_fsm_state17 = 25'd4096;
parameter    ap_ST_fsm_state18 = 25'd8192;
parameter    ap_ST_fsm_state19 = 25'd16384;
parameter    ap_ST_fsm_state20 = 25'd32768;
parameter    ap_ST_fsm_state21 = 25'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 25'd131072;
parameter    ap_ST_fsm_state29 = 25'd262144;
parameter    ap_ST_fsm_state30 = 25'd524288;
parameter    ap_ST_fsm_state31 = 25'd1048576;
parameter    ap_ST_fsm_state32 = 25'd2097152;
parameter    ap_ST_fsm_state33 = 25'd4194304;
parameter    ap_ST_fsm_state34 = 25'd8388608;
parameter    ap_ST_fsm_state35 = 25'd16777216;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_V;
wire   [63:0] output_r;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state15;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln93_fu_613_p2;
reg    gmem1_blk_n_W;
wire    ap_CS_fsm_state30;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state35;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
reg   [31:0] gmem0_ARLEN;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [511:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [31:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [5:0] data_part_num_0_i_reg_405;
reg   [7:0] data_part_num_0_reg_416;
reg   [63:0] gmem1_addr_reg_2957;
wire   [58:0] p_cast_fu_598_p1;
reg   [58:0] p_cast_reg_2963;
reg   [63:0] gmem0_addr_reg_2968;
wire   [2:0] cmpr_chunk_num_fu_619_p2;
reg   [2:0] cmpr_chunk_num_reg_2977;
reg    ap_block_state2_io;
wire   [58:0] add_ln219_fu_643_p2;
reg   [58:0] add_ln219_reg_2982;
wire   [0:0] icmp_ln27_fu_658_p2;
reg   [0:0] icmp_ln27_reg_2993;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln27_reg_2993_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_2993_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_2993_pp0_iter3_reg;
wire   [5:0] data_part_num_fu_664_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] trunc_ln29_2_reg_3002;
reg   [3:0] trunc_ln29_2_reg_3002_pp0_iter1_reg;
reg   [3:0] trunc_ln29_2_reg_3002_pp0_iter2_reg;
reg   [3:0] trunc_ln29_2_reg_3002_pp0_iter3_reg;
wire   [0:0] trunc_ln30_fu_680_p1;
reg   [0:0] trunc_ln30_reg_3022;
reg   [0:0] trunc_ln30_reg_3022_pp0_iter1_reg;
reg   [511:0] temp_input_V_reg_3027;
wire   [511:0] trunc_ln364_1_fu_810_p1;
reg   [511:0] trunc_ln364_1_reg_3032;
wire   [11:0] zext_ln215_1_fu_1490_p1;
reg   [11:0] zext_ln215_1_reg_3037;
wire    ap_CS_fsm_state21;
wire   [11:0] zext_ln215_4_fu_1494_p1;
reg   [11:0] zext_ln215_4_reg_3042;
wire   [11:0] zext_ln215_5_fu_1498_p1;
reg   [11:0] zext_ln215_5_reg_3047;
wire   [11:0] zext_ln215_8_fu_1502_p1;
reg   [11:0] zext_ln215_8_reg_3052;
wire   [11:0] zext_ln215_9_fu_1506_p1;
reg   [11:0] zext_ln215_9_reg_3057;
wire   [11:0] zext_ln215_12_fu_1510_p1;
reg   [11:0] zext_ln215_12_reg_3062;
wire   [11:0] zext_ln215_13_fu_1514_p1;
reg   [11:0] zext_ln215_13_reg_3067;
wire   [11:0] zext_ln215_16_fu_1518_p1;
reg   [11:0] zext_ln215_16_reg_3072;
wire   [11:0] zext_ln215_17_fu_1522_p1;
reg   [11:0] zext_ln215_17_reg_3077;
wire   [11:0] zext_ln215_20_fu_1526_p1;
reg   [11:0] zext_ln215_20_reg_3082;
wire   [11:0] zext_ln215_21_fu_1530_p1;
reg   [11:0] zext_ln215_21_reg_3087;
wire   [11:0] zext_ln215_24_fu_1534_p1;
reg   [11:0] zext_ln215_24_reg_3092;
wire   [11:0] zext_ln215_25_fu_1538_p1;
reg   [11:0] zext_ln215_25_reg_3097;
wire   [11:0] zext_ln215_28_fu_1542_p1;
reg   [11:0] zext_ln215_28_reg_3102;
wire   [11:0] zext_ln215_29_fu_1546_p1;
reg   [11:0] zext_ln215_29_reg_3107;
wire   [11:0] zext_ln215_32_fu_1550_p1;
reg   [11:0] zext_ln215_32_reg_3112;
wire   [0:0] icmp_ln96_fu_1554_p2;
reg   [0:0] icmp_ln96_reg_3117;
wire    ap_block_state22_pp1_stage0_iter0;
reg    ap_block_state23_pp1_stage0_iter1;
wire    ap_block_state24_pp1_stage0_iter2;
wire    ap_block_state25_pp1_stage0_iter3;
wire    ap_block_state26_pp1_stage0_iter4;
wire    ap_block_state27_pp1_stage0_iter5;
wire    ap_block_state28_pp1_stage0_iter6;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln96_reg_3117_pp1_iter1_reg;
reg   [0:0] icmp_ln96_reg_3117_pp1_iter2_reg;
reg   [0:0] icmp_ln96_reg_3117_pp1_iter3_reg;
wire   [7:0] data_part_num_1_fu_1560_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [1:0] trunc_ln98_1_reg_3126;
reg   [1:0] trunc_ln98_1_reg_3126_pp1_iter1_reg;
reg   [1:0] trunc_ln98_1_reg_3126_pp1_iter2_reg;
reg   [1:0] trunc_ln98_1_reg_3126_pp1_iter3_reg;
wire   [0:0] trunc_ln99_fu_1576_p1;
reg   [0:0] trunc_ln99_reg_3135;
reg   [0:0] trunc_ln99_reg_3135_pp1_iter1_reg;
reg   [511:0] temp_input_V_1_reg_3140;
wire   [511:0] trunc_ln364_fu_1638_p1;
reg   [511:0] trunc_ln364_reg_3145;
wire   [0:0] icmp_ln321_fu_1642_p2;
reg   [0:0] icmp_ln321_reg_3150;
reg   [0:0] icmp_ln321_reg_3150_pp1_iter3_reg;
wire   [0:0] icmp_ln321_1_fu_1647_p2;
reg   [0:0] icmp_ln321_1_reg_3156;
reg   [0:0] icmp_ln321_1_reg_3156_pp1_iter3_reg;
wire   [0:0] icmp_ln321_2_fu_1652_p2;
reg   [0:0] icmp_ln321_2_reg_3163;
reg   [0:0] icmp_ln321_2_reg_3163_pp1_iter3_reg;
wire   [0:0] icmp_ln114_fu_1729_p2;
reg   [0:0] icmp_ln114_reg_3171;
reg   [0:0] icmp_ln114_reg_3171_pp1_iter3_reg;
reg   [0:0] icmp_ln114_reg_3171_pp1_iter4_reg;
reg   [0:0] icmp_ln114_reg_3171_pp1_iter5_reg;
wire   [1023:0] and_ln1355_fu_1796_p2;
reg   [1023:0] and_ln1355_reg_3175;
wire   [1023:0] and_ln1355_1_fu_1802_p2;
reg   [1023:0] and_ln1355_1_reg_3180;
wire   [1023:0] and_ln1355_2_fu_1808_p2;
reg   [1023:0] and_ln1355_2_reg_3185;
wire   [1023:0] and_ln1355_3_fu_1814_p2;
reg   [1023:0] and_ln1355_3_reg_3190;
wire   [1023:0] and_ln1355_4_fu_1820_p2;
reg   [1023:0] and_ln1355_4_reg_3195;
wire   [1023:0] and_ln1355_5_fu_1826_p2;
reg   [1023:0] and_ln1355_5_reg_3200;
wire   [1023:0] and_ln1355_6_fu_1832_p2;
reg   [1023:0] and_ln1355_6_reg_3205;
wire   [1023:0] and_ln1355_7_fu_1838_p2;
reg   [1023:0] and_ln1355_7_reg_3210;
wire   [1023:0] and_ln1355_8_fu_1844_p2;
reg   [1023:0] and_ln1355_8_reg_3215;
wire   [1023:0] and_ln1355_9_fu_1850_p2;
reg   [1023:0] and_ln1355_9_reg_3220;
wire   [1023:0] and_ln1355_10_fu_1856_p2;
reg   [1023:0] and_ln1355_10_reg_3225;
wire   [1023:0] and_ln1355_11_fu_1862_p2;
reg   [1023:0] and_ln1355_11_reg_3230;
wire   [1023:0] and_ln1355_12_fu_1868_p2;
reg   [1023:0] and_ln1355_12_reg_3235;
wire   [1023:0] and_ln1355_13_fu_1874_p2;
reg   [1023:0] and_ln1355_13_reg_3240;
wire   [1023:0] and_ln1355_14_fu_1880_p2;
reg   [1023:0] and_ln1355_14_reg_3245;
wire   [1023:0] and_ln1355_15_fu_1886_p2;
reg   [1023:0] and_ln1355_15_reg_3250;
wire   [10:0] grp_popcntdata_fu_427_ap_return;
reg   [10:0] op2_V_assign_2_reg_3255;
wire   [10:0] tmp_4_fu_1991_p6;
reg   [10:0] tmp_4_reg_3260;
wire   [10:0] grp_popcntdata_fu_432_ap_return;
reg   [10:0] op2_V_assign_2_0_1_reg_3265;
wire   [10:0] grp_popcntdata_fu_437_ap_return;
reg   [10:0] op2_V_assign_2_0_2_reg_3270;
wire   [10:0] grp_popcntdata_fu_442_ap_return;
reg   [10:0] op2_V_assign_2_0_3_reg_3275;
wire   [10:0] grp_popcntdata_fu_447_ap_return;
reg   [10:0] op2_V_assign_2_0_4_reg_3280;
wire   [10:0] grp_popcntdata_fu_452_ap_return;
reg   [10:0] op2_V_assign_2_0_5_reg_3285;
wire   [10:0] grp_popcntdata_fu_457_ap_return;
reg   [10:0] op2_V_assign_2_0_6_reg_3290;
wire   [10:0] grp_popcntdata_fu_462_ap_return;
reg   [10:0] op2_V_assign_2_0_7_reg_3295;
wire   [10:0] grp_popcntdata_fu_467_ap_return;
reg   [10:0] op2_V_assign_2_0_8_reg_3300;
wire   [10:0] grp_popcntdata_fu_472_ap_return;
reg   [10:0] op2_V_assign_2_0_9_reg_3305;
wire   [10:0] grp_popcntdata_fu_477_ap_return;
reg   [10:0] op2_V_assign_2_0_s_reg_3310;
wire   [10:0] grp_popcntdata_fu_482_ap_return;
reg   [10:0] op2_V_assign_2_0_10_reg_3315;
wire   [10:0] grp_popcntdata_fu_487_ap_return;
reg   [10:0] op2_V_assign_2_0_11_reg_3320;
wire   [10:0] grp_popcntdata_fu_492_ap_return;
reg   [10:0] op2_V_assign_2_0_12_reg_3325;
wire   [10:0] grp_popcntdata_fu_497_ap_return;
reg   [10:0] op2_V_assign_2_0_13_reg_3330;
wire   [10:0] grp_popcntdata_fu_502_ap_return;
reg   [10:0] op2_V_assign_2_0_14_reg_3335;
wire   [0:0] icmp_ln129_fu_2315_p2;
reg   [0:0] icmp_ln129_reg_3340;
wire   [0:0] icmp_ln129_1_fu_2321_p2;
reg   [0:0] icmp_ln129_1_reg_3345;
wire   [0:0] icmp_ln129_2_fu_2327_p2;
reg   [0:0] icmp_ln129_2_reg_3350;
wire   [2:0] add_ln129_5_fu_2561_p2;
reg   [2:0] add_ln129_5_reg_3355;
wire   [2:0] add_ln129_9_fu_2587_p2;
reg   [2:0] add_ln129_9_reg_3360;
wire   [2:0] add_ln129_13_fu_2619_p2;
reg   [2:0] add_ln129_13_reg_3365;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state22;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    grp_popcntdata_fu_427_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call19;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call19;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call19;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call19;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call19;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call19;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call19;
reg    ap_block_pp1_stage0_11001_ignoreCallOp337;
reg    grp_popcntdata_fu_432_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call27;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call27;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call27;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call27;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call27;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call27;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call27;
reg    ap_block_pp1_stage0_11001_ignoreCallOp338;
reg    grp_popcntdata_fu_437_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call33;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call33;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call33;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call33;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call33;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call33;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call33;
reg    ap_block_pp1_stage0_11001_ignoreCallOp339;
reg    grp_popcntdata_fu_442_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call39;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call39;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call39;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call39;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call39;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call39;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call39;
reg    ap_block_pp1_stage0_11001_ignoreCallOp340;
reg    grp_popcntdata_fu_447_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call45;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call45;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call45;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call45;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call45;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call45;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call45;
reg    ap_block_pp1_stage0_11001_ignoreCallOp341;
reg    grp_popcntdata_fu_452_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call51;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call51;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call51;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call51;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call51;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call51;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call51;
reg    ap_block_pp1_stage0_11001_ignoreCallOp342;
reg    grp_popcntdata_fu_457_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call57;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call57;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call57;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call57;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call57;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call57;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call57;
reg    ap_block_pp1_stage0_11001_ignoreCallOp343;
reg    grp_popcntdata_fu_462_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call63;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call63;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call63;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call63;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call63;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call63;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call63;
reg    ap_block_pp1_stage0_11001_ignoreCallOp344;
reg    grp_popcntdata_fu_467_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call69;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call69;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call69;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call69;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call69;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call69;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call69;
reg    ap_block_pp1_stage0_11001_ignoreCallOp345;
reg    grp_popcntdata_fu_472_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call75;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call75;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call75;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call75;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call75;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call75;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call75;
reg    ap_block_pp1_stage0_11001_ignoreCallOp346;
reg    grp_popcntdata_fu_477_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call81;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call81;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call81;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call81;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call81;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call81;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call81;
reg    ap_block_pp1_stage0_11001_ignoreCallOp347;
reg    grp_popcntdata_fu_482_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call87;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call87;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call87;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call87;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call87;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call87;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call87;
reg    ap_block_pp1_stage0_11001_ignoreCallOp348;
reg    grp_popcntdata_fu_487_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call93;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call93;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call93;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call93;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call93;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call93;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call93;
reg    ap_block_pp1_stage0_11001_ignoreCallOp349;
reg    grp_popcntdata_fu_492_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call99;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call99;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call99;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call99;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call99;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call99;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call99;
reg    ap_block_pp1_stage0_11001_ignoreCallOp350;
reg    grp_popcntdata_fu_497_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call105;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call105;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call105;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call105;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call105;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call105;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call105;
reg    ap_block_pp1_stage0_11001_ignoreCallOp351;
reg    grp_popcntdata_fu_502_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call111;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call111;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call111;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call111;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call111;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call111;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call111;
reg    ap_block_pp1_stage0_11001_ignoreCallOp352;
reg   [511:0] grp_popcnt_fu_507_x_V;
wire   [9:0] grp_popcnt_fu_507_ap_return;
reg    grp_popcnt_fu_507_ap_ce;
wire    ap_block_state22_pp1_stage0_iter0_ignore_call23;
reg    ap_block_state23_pp1_stage0_iter1_ignore_call23;
wire    ap_block_state24_pp1_stage0_iter2_ignore_call23;
wire    ap_block_state25_pp1_stage0_iter3_ignore_call23;
wire    ap_block_state26_pp1_stage0_iter4_ignore_call23;
wire    ap_block_state27_pp1_stage0_iter5_ignore_call23;
wire    ap_block_state28_pp1_stage0_iter6_ignore_call23;
reg    ap_block_pp1_stage0_11001_ignoreCallOp336;
wire    ap_block_state10_pp0_stage0_iter0_ignore_call22;
reg    ap_block_state11_pp0_stage0_iter1_ignore_call22;
wire    ap_block_state12_pp0_stage0_iter2_ignore_call22;
wire    ap_block_state13_pp0_stage0_iter3_ignore_call22;
wire    ap_block_state14_pp0_stage0_iter4_ignore_call22;
reg    ap_block_pp0_stage0_11001_ignoreCallOp171;
reg   [2:0] cmpr_chunk_num_0_reg_394;
wire    ap_CS_fsm_state29;
wire   [63:0] empty_fu_574_p1;
wire   [63:0] empty_9_fu_594_p1;
wire   [63:0] zext_ln219_1_fu_648_p1;
reg   [31:0] result_0_fu_178;
wire   [31:0] add_ln129_15_fu_2699_p2;
reg   [1023:0] p_Val2_s_fu_182;
wire   [1023:0] p_Result_s_fu_697_p3;
reg   [1023:0] p_Val2_1_fu_186;
reg   [1023:0] p_Val2_2_fu_190;
reg   [1023:0] p_Val2_3_fu_194;
reg   [1023:0] p_Val2_4_fu_198;
reg   [1023:0] p_Val2_5_fu_202;
reg   [1023:0] p_Val2_6_fu_206;
reg   [1023:0] p_Val2_7_fu_210;
reg   [1023:0] p_Val2_8_fu_214;
reg   [1023:0] p_Val2_9_fu_218;
reg   [1023:0] p_Val2_10_fu_222;
reg   [1023:0] p_Val2_11_fu_226;
reg   [1023:0] p_Val2_12_fu_230;
reg   [1023:0] p_Val2_13_fu_234;
reg   [1023:0] p_Val2_14_fu_238;
reg   [1023:0] p_Val2_15_fu_242;
reg   [10:0] cmprpop_local_0_0899_fu_246;
wire   [10:0] cmprpop_local_0_2_fu_818_p18;
reg   [10:0] cmprpop_local_1_0900_fu_250;
wire   [10:0] cmprpop_local_1_2_fu_855_p18;
reg   [10:0] cmprpop_local_2_0901_fu_254;
wire   [10:0] cmprpop_local_2_2_fu_892_p18;
reg   [10:0] cmprpop_local_3_0902_fu_258;
wire   [10:0] cmprpop_local_3_2_fu_929_p18;
reg   [10:0] cmprpop_local_4_0903_fu_262;
wire   [10:0] cmprpop_local_4_2_fu_966_p18;
reg   [10:0] cmprpop_local_5_0904_fu_266;
wire   [10:0] cmprpop_local_5_2_fu_1003_p18;
reg   [10:0] cmprpop_local_6_0905_fu_270;
wire   [10:0] cmprpop_local_6_2_fu_1040_p18;
reg   [10:0] cmprpop_local_7_0906_fu_274;
wire   [10:0] cmprpop_local_7_2_fu_1077_p18;
reg   [10:0] cmprpop_local_8_0907_fu_278;
wire   [10:0] cmprpop_local_8_2_fu_1114_p18;
reg   [10:0] cmprpop_local_9_0908_fu_282;
wire   [10:0] cmprpop_local_9_2_fu_1151_p18;
reg   [10:0] cmprpop_local_10_0909_fu_286;
wire   [10:0] cmprpop_local_10_2_fu_1188_p18;
reg   [10:0] cmprpop_local_11_0910_fu_290;
wire   [10:0] cmprpop_local_11_2_fu_1225_p18;
reg   [10:0] cmprpop_local_12_0911_fu_294;
wire   [10:0] cmprpop_local_12_2_fu_1262_p18;
reg   [10:0] cmprpop_local_13_0912_fu_298;
wire   [10:0] cmprpop_local_13_2_fu_1299_p18;
reg   [10:0] cmprpop_local_14_0913_fu_302;
wire   [10:0] cmprpop_local_14_2_fu_1336_p18;
reg   [10:0] cmprpop_local_15_0914_fu_306;
wire   [10:0] cmprpop_local_15_2_fu_1373_p18;
reg   [1023:0] ref_local_3_V_1_fu_310;
wire   [1023:0] ref_local_3_V_20_fu_1721_p3;
reg   [1023:0] ref_local_3_V_2_fu_314;
wire   [1023:0] ref_local_3_V_19_fu_1713_p3;
reg   [1023:0] ref_local_3_V_8_fu_318;
wire   [1023:0] ref_local_3_V_17_fu_1697_p3;
reg   [1023:0] ref_local_3_V_04_fu_322;
wire   [1023:0] ref_local_3_V_14_fu_1673_p3;
reg   [10:0] refpop_local_3_V_1_fu_326;
wire   [10:0] refpop_local_3_V_22_fu_1984_p3;
reg   [10:0] refpop_local_3_V_2_fu_330;
wire   [10:0] refpop_local_3_V_21_fu_1977_p3;
reg   [10:0] refpop_local_3_V_9_fu_334;
wire   [10:0] refpop_local_3_V_19_fu_1963_p3;
reg   [10:0] refpop_local_3_V_08_fu_338;
wire   [10:0] refpop_local_3_V_16_fu_1942_p3;
wire   [61:0] output3_fu_564_p4;
wire   [57:0] input_V1_fu_584_p4;
wire   [1:0] trunc_ln94_fu_625_p1;
wire   [7:0] or_ln_fu_629_p4;
wire   [58:0] zext_ln219_fu_639_p1;
wire   [9:0] shl_ln_fu_684_p3;
wire   [9:0] num_hi_fu_691_p2;
wire   [10:0] zext_ln647_2_fu_784_p1;
wire   [10:0] xor_ln647_1_fu_788_p2;
wire   [1023:0] zext_ln647_3_fu_794_p1;
wire   [1023:0] lshr_ln647_1_fu_798_p2;
wire   [1023:0] p_Result_1_fu_804_p2;
wire   [10:0] zext_ln35_fu_814_p1;
wire   [9:0] shl_ln1_fu_1592_p3;
wire   [9:0] num_hi_1_fu_1599_p2;
wire   [10:0] zext_ln647_fu_1612_p1;
wire   [10:0] xor_ln647_fu_1616_p2;
wire   [1023:0] zext_ln647_1_fu_1622_p1;
wire   [1023:0] p_Result_2_fu_1605_p3;
wire   [1023:0] lshr_ln647_fu_1626_p2;
wire   [1023:0] p_Result_3_fu_1632_p2;
wire   [1023:0] ref_local_3_V_fu_1657_p3;
wire   [1023:0] ref_local_3_V_13_fu_1665_p3;
wire   [1023:0] ref_local_3_V_15_fu_1681_p3;
wire   [1023:0] ref_local_3_V_16_fu_1689_p3;
wire   [1023:0] ref_local_3_V_18_fu_1705_p3;
wire   [1023:0] tmp_3_fu_1783_p1;
wire   [1023:0] tmp_3_fu_1783_p2;
wire   [1023:0] tmp_3_fu_1783_p3;
wire   [1023:0] tmp_3_fu_1783_p4;
wire   [1023:0] tmp_3_fu_1783_p6;
wire   [10:0] refpop_local_3_V_23_fu_1924_p1;
wire   [10:0] refpop_local_3_V_14_fu_1928_p3;
wire   [10:0] refpop_local_3_V_15_fu_1935_p3;
wire   [10:0] refpop_local_3_V_17_fu_1949_p3;
wire   [10:0] refpop_local_3_V_18_fu_1956_p3;
wire   [10:0] refpop_local_3_V_20_fu_1970_p3;
wire   [10:0] tmp_4_fu_1991_p1;
wire   [10:0] tmp_4_fu_1991_p2;
wire   [10:0] tmp_4_fu_1991_p3;
wire   [10:0] tmp_4_fu_1991_p4;
wire   [11:0] zext_ln215_fu_2024_p1;
wire   [11:0] add_ln1353_fu_2027_p2;
wire   [12:0] zext_ln215_2_fu_2032_p1;
wire   [12:0] zext_ln215_3_fu_2036_p1;
wire   [11:0] add_ln1353_1_fu_2045_p2;
wire   [12:0] zext_ln215_6_fu_2050_p1;
wire   [12:0] zext_ln215_7_fu_2054_p1;
wire   [11:0] add_ln1353_2_fu_2063_p2;
wire   [12:0] zext_ln215_10_fu_2068_p1;
wire   [12:0] zext_ln215_11_fu_2072_p1;
wire   [11:0] add_ln1353_3_fu_2081_p2;
wire   [12:0] zext_ln215_14_fu_2086_p1;
wire   [12:0] zext_ln215_15_fu_2090_p1;
wire   [11:0] add_ln1353_4_fu_2099_p2;
wire   [12:0] zext_ln215_18_fu_2104_p1;
wire   [12:0] zext_ln215_19_fu_2108_p1;
wire   [11:0] add_ln1353_5_fu_2117_p2;
wire   [12:0] zext_ln215_22_fu_2122_p1;
wire   [12:0] zext_ln215_23_fu_2126_p1;
wire   [11:0] add_ln1353_6_fu_2135_p2;
wire   [12:0] zext_ln215_26_fu_2140_p1;
wire   [12:0] zext_ln215_27_fu_2144_p1;
wire   [11:0] add_ln1353_7_fu_2153_p2;
wire   [12:0] zext_ln215_30_fu_2158_p1;
wire   [12:0] zext_ln215_31_fu_2162_p1;
wire   [11:0] add_ln1353_8_fu_2171_p2;
wire   [12:0] zext_ln215_33_fu_2176_p1;
wire   [12:0] zext_ln215_34_fu_2180_p1;
wire   [11:0] add_ln1353_9_fu_2189_p2;
wire   [12:0] zext_ln215_35_fu_2194_p1;
wire   [12:0] zext_ln215_36_fu_2198_p1;
wire   [11:0] add_ln1353_10_fu_2207_p2;
wire   [12:0] zext_ln215_37_fu_2212_p1;
wire   [12:0] zext_ln215_38_fu_2216_p1;
wire   [11:0] add_ln1353_11_fu_2225_p2;
wire   [12:0] zext_ln215_39_fu_2230_p1;
wire   [12:0] zext_ln215_40_fu_2234_p1;
wire   [11:0] add_ln1353_12_fu_2243_p2;
wire   [12:0] zext_ln215_41_fu_2248_p1;
wire   [12:0] zext_ln215_42_fu_2252_p1;
wire   [11:0] add_ln1353_13_fu_2261_p2;
wire   [12:0] zext_ln215_43_fu_2266_p1;
wire   [12:0] zext_ln215_44_fu_2270_p1;
wire   [11:0] add_ln1353_14_fu_2279_p2;
wire   [12:0] zext_ln215_45_fu_2284_p1;
wire   [12:0] zext_ln215_46_fu_2288_p1;
wire   [11:0] add_ln1353_15_fu_2297_p2;
wire   [12:0] zext_ln215_47_fu_2302_p1;
wire   [12:0] zext_ln215_48_fu_2306_p1;
wire   [12:0] sub_ln1354_fu_2039_p2;
wire   [12:0] sub_ln1354_1_fu_2057_p2;
wire   [12:0] sub_ln1354_2_fu_2075_p2;
wire   [12:0] sub_ln1354_3_fu_2093_p2;
wire   [0:0] icmp_ln129_3_fu_2333_p2;
wire   [0:0] xor_ln129_3_fu_2339_p2;
wire   [12:0] sub_ln1354_4_fu_2111_p2;
wire   [0:0] icmp_ln129_4_fu_2349_p2;
wire   [0:0] xor_ln129_4_fu_2355_p2;
wire   [12:0] sub_ln1354_5_fu_2129_p2;
wire   [0:0] icmp_ln129_5_fu_2365_p2;
wire   [0:0] xor_ln129_5_fu_2371_p2;
wire   [12:0] sub_ln1354_6_fu_2147_p2;
wire   [0:0] icmp_ln129_6_fu_2381_p2;
wire   [0:0] xor_ln129_6_fu_2387_p2;
wire   [12:0] sub_ln1354_7_fu_2165_p2;
wire   [0:0] icmp_ln129_7_fu_2397_p2;
wire   [0:0] xor_ln129_7_fu_2403_p2;
wire   [12:0] sub_ln1354_8_fu_2183_p2;
wire   [0:0] icmp_ln129_8_fu_2413_p2;
wire   [0:0] xor_ln129_8_fu_2419_p2;
wire   [12:0] sub_ln1354_9_fu_2201_p2;
wire   [0:0] icmp_ln129_9_fu_2429_p2;
wire   [0:0] xor_ln129_9_fu_2435_p2;
wire   [12:0] sub_ln1354_10_fu_2219_p2;
wire   [0:0] icmp_ln129_10_fu_2445_p2;
wire   [0:0] xor_ln129_10_fu_2451_p2;
wire   [12:0] sub_ln1354_11_fu_2237_p2;
wire   [0:0] icmp_ln129_11_fu_2461_p2;
wire   [0:0] xor_ln129_11_fu_2467_p2;
wire   [12:0] sub_ln1354_12_fu_2255_p2;
wire   [0:0] icmp_ln129_12_fu_2477_p2;
wire   [0:0] xor_ln129_12_fu_2483_p2;
wire   [12:0] sub_ln1354_13_fu_2273_p2;
wire   [0:0] icmp_ln129_13_fu_2493_p2;
wire   [0:0] xor_ln129_13_fu_2499_p2;
wire   [12:0] sub_ln1354_14_fu_2291_p2;
wire   [0:0] icmp_ln129_14_fu_2509_p2;
wire   [0:0] xor_ln129_14_fu_2515_p2;
wire   [12:0] sub_ln1354_15_fu_2309_p2;
wire   [0:0] icmp_ln129_15_fu_2525_p2;
wire   [0:0] xor_ln129_15_fu_2531_p2;
wire   [1:0] zext_ln129_4_fu_2361_p1;
wire   [1:0] zext_ln129_3_fu_2345_p1;
wire   [1:0] add_ln129_3_fu_2541_p2;
wire   [1:0] zext_ln129_6_fu_2393_p1;
wire   [1:0] zext_ln129_5_fu_2377_p1;
wire   [1:0] add_ln129_4_fu_2551_p2;
wire   [2:0] zext_ln129_17_fu_2547_p1;
wire   [2:0] zext_ln129_18_fu_2557_p1;
wire   [1:0] zext_ln129_8_fu_2425_p1;
wire   [1:0] zext_ln129_7_fu_2409_p1;
wire   [1:0] add_ln129_7_fu_2567_p2;
wire   [1:0] zext_ln129_10_fu_2457_p1;
wire   [1:0] zext_ln129_9_fu_2441_p1;
wire   [1:0] add_ln129_8_fu_2577_p2;
wire   [2:0] zext_ln129_20_fu_2573_p1;
wire   [2:0] zext_ln129_21_fu_2583_p1;
wire   [1:0] zext_ln129_12_fu_2489_p1;
wire   [1:0] zext_ln129_11_fu_2473_p1;
wire   [1:0] add_ln129_10_fu_2593_p2;
wire   [1:0] zext_ln129_15_fu_2537_p1;
wire   [1:0] zext_ln129_14_fu_2521_p1;
wire   [1:0] zext_ln129_13_fu_2505_p1;
wire   [1:0] add_ln129_11_fu_2603_p2;
wire   [1:0] add_ln129_12_fu_2609_p2;
wire   [2:0] zext_ln129_23_fu_2599_p1;
wire   [2:0] zext_ln129_24_fu_2615_p1;
wire   [0:0] xor_ln129_fu_2625_p2;
wire   [0:0] xor_ln129_1_fu_2634_p2;
wire   [0:0] xor_ln129_2_fu_2643_p2;
wire   [31:0] zext_ln129_fu_2630_p1;
wire   [1:0] zext_ln129_2_fu_2648_p1;
wire   [1:0] zext_ln129_1_fu_2639_p1;
wire   [1:0] add_ln129_1_fu_2658_p2;
wire   [31:0] add_ln129_fu_2652_p2;
wire   [31:0] zext_ln129_16_fu_2664_p1;
wire   [31:0] add_ln129_2_fu_2668_p2;
wire   [31:0] zext_ln129_19_fu_2674_p1;
wire   [3:0] zext_ln129_22_fu_2683_p1;
wire   [3:0] zext_ln129_25_fu_2686_p1;
wire   [3:0] add_ln129_14_fu_2689_p2;
wire   [31:0] add_ln129_6_fu_2677_p2;
wire   [31:0] zext_ln129_26_fu_2695_p1;
reg   [24:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
end

tancalc_tancalc_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
tancalc_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .input_V(input_V),
    .output_r(output_r)
);

tancalc_tancalc_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
tancalc_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(gmem0_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

tancalc_tancalc_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
tancalc_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(gmem1_addr_reg_2957),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(result_0_fu_178),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

tancalc_popcntdata grp_popcntdata_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_reg_3175),
    .ap_return(grp_popcntdata_fu_427_ap_return),
    .ap_ce(grp_popcntdata_fu_427_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_1_reg_3180),
    .ap_return(grp_popcntdata_fu_432_ap_return),
    .ap_ce(grp_popcntdata_fu_432_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_437(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_2_reg_3185),
    .ap_return(grp_popcntdata_fu_437_ap_return),
    .ap_ce(grp_popcntdata_fu_437_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_442(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_3_reg_3190),
    .ap_return(grp_popcntdata_fu_442_ap_return),
    .ap_ce(grp_popcntdata_fu_442_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_447(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_4_reg_3195),
    .ap_return(grp_popcntdata_fu_447_ap_return),
    .ap_ce(grp_popcntdata_fu_447_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_5_reg_3200),
    .ap_return(grp_popcntdata_fu_452_ap_return),
    .ap_ce(grp_popcntdata_fu_452_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_457(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_6_reg_3205),
    .ap_return(grp_popcntdata_fu_457_ap_return),
    .ap_ce(grp_popcntdata_fu_457_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_7_reg_3210),
    .ap_return(grp_popcntdata_fu_462_ap_return),
    .ap_ce(grp_popcntdata_fu_462_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_467(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_8_reg_3215),
    .ap_return(grp_popcntdata_fu_467_ap_return),
    .ap_ce(grp_popcntdata_fu_467_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_9_reg_3220),
    .ap_return(grp_popcntdata_fu_472_ap_return),
    .ap_ce(grp_popcntdata_fu_472_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_477(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_10_reg_3225),
    .ap_return(grp_popcntdata_fu_477_ap_return),
    .ap_ce(grp_popcntdata_fu_477_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_482(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_11_reg_3230),
    .ap_return(grp_popcntdata_fu_482_ap_return),
    .ap_ce(grp_popcntdata_fu_482_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_487(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_12_reg_3235),
    .ap_return(grp_popcntdata_fu_487_ap_return),
    .ap_ce(grp_popcntdata_fu_487_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_492(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_13_reg_3240),
    .ap_return(grp_popcntdata_fu_492_ap_return),
    .ap_ce(grp_popcntdata_fu_492_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_14_reg_3245),
    .ap_return(grp_popcntdata_fu_497_ap_return),
    .ap_ce(grp_popcntdata_fu_497_ap_ce)
);

tancalc_popcntdata grp_popcntdata_fu_502(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(and_ln1355_15_reg_3250),
    .ap_return(grp_popcntdata_fu_502_ap_return),
    .ap_ce(grp_popcntdata_fu_502_ap_ce)
);

tancalc_popcnt grp_popcnt_fu_507(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x_V(grp_popcnt_fu_507_x_V),
    .ap_return(grp_popcnt_fu_507_ap_return),
    .ap_ce(grp_popcnt_fu_507_ap_ce)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U3(
    .din0(zext_ln35_fu_814_p1),
    .din1(cmprpop_local_0_0899_fu_246),
    .din2(cmprpop_local_0_0899_fu_246),
    .din3(cmprpop_local_0_0899_fu_246),
    .din4(cmprpop_local_0_0899_fu_246),
    .din5(cmprpop_local_0_0899_fu_246),
    .din6(cmprpop_local_0_0899_fu_246),
    .din7(cmprpop_local_0_0899_fu_246),
    .din8(cmprpop_local_0_0899_fu_246),
    .din9(cmprpop_local_0_0899_fu_246),
    .din10(cmprpop_local_0_0899_fu_246),
    .din11(cmprpop_local_0_0899_fu_246),
    .din12(cmprpop_local_0_0899_fu_246),
    .din13(cmprpop_local_0_0899_fu_246),
    .din14(cmprpop_local_0_0899_fu_246),
    .din15(cmprpop_local_0_0899_fu_246),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_0_2_fu_818_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U4(
    .din0(cmprpop_local_1_0900_fu_250),
    .din1(zext_ln35_fu_814_p1),
    .din2(cmprpop_local_1_0900_fu_250),
    .din3(cmprpop_local_1_0900_fu_250),
    .din4(cmprpop_local_1_0900_fu_250),
    .din5(cmprpop_local_1_0900_fu_250),
    .din6(cmprpop_local_1_0900_fu_250),
    .din7(cmprpop_local_1_0900_fu_250),
    .din8(cmprpop_local_1_0900_fu_250),
    .din9(cmprpop_local_1_0900_fu_250),
    .din10(cmprpop_local_1_0900_fu_250),
    .din11(cmprpop_local_1_0900_fu_250),
    .din12(cmprpop_local_1_0900_fu_250),
    .din13(cmprpop_local_1_0900_fu_250),
    .din14(cmprpop_local_1_0900_fu_250),
    .din15(cmprpop_local_1_0900_fu_250),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_1_2_fu_855_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U5(
    .din0(cmprpop_local_2_0901_fu_254),
    .din1(cmprpop_local_2_0901_fu_254),
    .din2(zext_ln35_fu_814_p1),
    .din3(cmprpop_local_2_0901_fu_254),
    .din4(cmprpop_local_2_0901_fu_254),
    .din5(cmprpop_local_2_0901_fu_254),
    .din6(cmprpop_local_2_0901_fu_254),
    .din7(cmprpop_local_2_0901_fu_254),
    .din8(cmprpop_local_2_0901_fu_254),
    .din9(cmprpop_local_2_0901_fu_254),
    .din10(cmprpop_local_2_0901_fu_254),
    .din11(cmprpop_local_2_0901_fu_254),
    .din12(cmprpop_local_2_0901_fu_254),
    .din13(cmprpop_local_2_0901_fu_254),
    .din14(cmprpop_local_2_0901_fu_254),
    .din15(cmprpop_local_2_0901_fu_254),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_2_2_fu_892_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U6(
    .din0(cmprpop_local_3_0902_fu_258),
    .din1(cmprpop_local_3_0902_fu_258),
    .din2(cmprpop_local_3_0902_fu_258),
    .din3(zext_ln35_fu_814_p1),
    .din4(cmprpop_local_3_0902_fu_258),
    .din5(cmprpop_local_3_0902_fu_258),
    .din6(cmprpop_local_3_0902_fu_258),
    .din7(cmprpop_local_3_0902_fu_258),
    .din8(cmprpop_local_3_0902_fu_258),
    .din9(cmprpop_local_3_0902_fu_258),
    .din10(cmprpop_local_3_0902_fu_258),
    .din11(cmprpop_local_3_0902_fu_258),
    .din12(cmprpop_local_3_0902_fu_258),
    .din13(cmprpop_local_3_0902_fu_258),
    .din14(cmprpop_local_3_0902_fu_258),
    .din15(cmprpop_local_3_0902_fu_258),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_3_2_fu_929_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U7(
    .din0(cmprpop_local_4_0903_fu_262),
    .din1(cmprpop_local_4_0903_fu_262),
    .din2(cmprpop_local_4_0903_fu_262),
    .din3(cmprpop_local_4_0903_fu_262),
    .din4(zext_ln35_fu_814_p1),
    .din5(cmprpop_local_4_0903_fu_262),
    .din6(cmprpop_local_4_0903_fu_262),
    .din7(cmprpop_local_4_0903_fu_262),
    .din8(cmprpop_local_4_0903_fu_262),
    .din9(cmprpop_local_4_0903_fu_262),
    .din10(cmprpop_local_4_0903_fu_262),
    .din11(cmprpop_local_4_0903_fu_262),
    .din12(cmprpop_local_4_0903_fu_262),
    .din13(cmprpop_local_4_0903_fu_262),
    .din14(cmprpop_local_4_0903_fu_262),
    .din15(cmprpop_local_4_0903_fu_262),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_4_2_fu_966_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U8(
    .din0(cmprpop_local_5_0904_fu_266),
    .din1(cmprpop_local_5_0904_fu_266),
    .din2(cmprpop_local_5_0904_fu_266),
    .din3(cmprpop_local_5_0904_fu_266),
    .din4(cmprpop_local_5_0904_fu_266),
    .din5(zext_ln35_fu_814_p1),
    .din6(cmprpop_local_5_0904_fu_266),
    .din7(cmprpop_local_5_0904_fu_266),
    .din8(cmprpop_local_5_0904_fu_266),
    .din9(cmprpop_local_5_0904_fu_266),
    .din10(cmprpop_local_5_0904_fu_266),
    .din11(cmprpop_local_5_0904_fu_266),
    .din12(cmprpop_local_5_0904_fu_266),
    .din13(cmprpop_local_5_0904_fu_266),
    .din14(cmprpop_local_5_0904_fu_266),
    .din15(cmprpop_local_5_0904_fu_266),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_5_2_fu_1003_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U9(
    .din0(cmprpop_local_6_0905_fu_270),
    .din1(cmprpop_local_6_0905_fu_270),
    .din2(cmprpop_local_6_0905_fu_270),
    .din3(cmprpop_local_6_0905_fu_270),
    .din4(cmprpop_local_6_0905_fu_270),
    .din5(cmprpop_local_6_0905_fu_270),
    .din6(zext_ln35_fu_814_p1),
    .din7(cmprpop_local_6_0905_fu_270),
    .din8(cmprpop_local_6_0905_fu_270),
    .din9(cmprpop_local_6_0905_fu_270),
    .din10(cmprpop_local_6_0905_fu_270),
    .din11(cmprpop_local_6_0905_fu_270),
    .din12(cmprpop_local_6_0905_fu_270),
    .din13(cmprpop_local_6_0905_fu_270),
    .din14(cmprpop_local_6_0905_fu_270),
    .din15(cmprpop_local_6_0905_fu_270),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_6_2_fu_1040_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U10(
    .din0(cmprpop_local_7_0906_fu_274),
    .din1(cmprpop_local_7_0906_fu_274),
    .din2(cmprpop_local_7_0906_fu_274),
    .din3(cmprpop_local_7_0906_fu_274),
    .din4(cmprpop_local_7_0906_fu_274),
    .din5(cmprpop_local_7_0906_fu_274),
    .din6(cmprpop_local_7_0906_fu_274),
    .din7(zext_ln35_fu_814_p1),
    .din8(cmprpop_local_7_0906_fu_274),
    .din9(cmprpop_local_7_0906_fu_274),
    .din10(cmprpop_local_7_0906_fu_274),
    .din11(cmprpop_local_7_0906_fu_274),
    .din12(cmprpop_local_7_0906_fu_274),
    .din13(cmprpop_local_7_0906_fu_274),
    .din14(cmprpop_local_7_0906_fu_274),
    .din15(cmprpop_local_7_0906_fu_274),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_7_2_fu_1077_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U11(
    .din0(cmprpop_local_8_0907_fu_278),
    .din1(cmprpop_local_8_0907_fu_278),
    .din2(cmprpop_local_8_0907_fu_278),
    .din3(cmprpop_local_8_0907_fu_278),
    .din4(cmprpop_local_8_0907_fu_278),
    .din5(cmprpop_local_8_0907_fu_278),
    .din6(cmprpop_local_8_0907_fu_278),
    .din7(cmprpop_local_8_0907_fu_278),
    .din8(zext_ln35_fu_814_p1),
    .din9(cmprpop_local_8_0907_fu_278),
    .din10(cmprpop_local_8_0907_fu_278),
    .din11(cmprpop_local_8_0907_fu_278),
    .din12(cmprpop_local_8_0907_fu_278),
    .din13(cmprpop_local_8_0907_fu_278),
    .din14(cmprpop_local_8_0907_fu_278),
    .din15(cmprpop_local_8_0907_fu_278),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_8_2_fu_1114_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U12(
    .din0(cmprpop_local_9_0908_fu_282),
    .din1(cmprpop_local_9_0908_fu_282),
    .din2(cmprpop_local_9_0908_fu_282),
    .din3(cmprpop_local_9_0908_fu_282),
    .din4(cmprpop_local_9_0908_fu_282),
    .din5(cmprpop_local_9_0908_fu_282),
    .din6(cmprpop_local_9_0908_fu_282),
    .din7(cmprpop_local_9_0908_fu_282),
    .din8(cmprpop_local_9_0908_fu_282),
    .din9(zext_ln35_fu_814_p1),
    .din10(cmprpop_local_9_0908_fu_282),
    .din11(cmprpop_local_9_0908_fu_282),
    .din12(cmprpop_local_9_0908_fu_282),
    .din13(cmprpop_local_9_0908_fu_282),
    .din14(cmprpop_local_9_0908_fu_282),
    .din15(cmprpop_local_9_0908_fu_282),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_9_2_fu_1151_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U13(
    .din0(cmprpop_local_10_0909_fu_286),
    .din1(cmprpop_local_10_0909_fu_286),
    .din2(cmprpop_local_10_0909_fu_286),
    .din3(cmprpop_local_10_0909_fu_286),
    .din4(cmprpop_local_10_0909_fu_286),
    .din5(cmprpop_local_10_0909_fu_286),
    .din6(cmprpop_local_10_0909_fu_286),
    .din7(cmprpop_local_10_0909_fu_286),
    .din8(cmprpop_local_10_0909_fu_286),
    .din9(cmprpop_local_10_0909_fu_286),
    .din10(zext_ln35_fu_814_p1),
    .din11(cmprpop_local_10_0909_fu_286),
    .din12(cmprpop_local_10_0909_fu_286),
    .din13(cmprpop_local_10_0909_fu_286),
    .din14(cmprpop_local_10_0909_fu_286),
    .din15(cmprpop_local_10_0909_fu_286),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_10_2_fu_1188_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U14(
    .din0(cmprpop_local_11_0910_fu_290),
    .din1(cmprpop_local_11_0910_fu_290),
    .din2(cmprpop_local_11_0910_fu_290),
    .din3(cmprpop_local_11_0910_fu_290),
    .din4(cmprpop_local_11_0910_fu_290),
    .din5(cmprpop_local_11_0910_fu_290),
    .din6(cmprpop_local_11_0910_fu_290),
    .din7(cmprpop_local_11_0910_fu_290),
    .din8(cmprpop_local_11_0910_fu_290),
    .din9(cmprpop_local_11_0910_fu_290),
    .din10(cmprpop_local_11_0910_fu_290),
    .din11(zext_ln35_fu_814_p1),
    .din12(cmprpop_local_11_0910_fu_290),
    .din13(cmprpop_local_11_0910_fu_290),
    .din14(cmprpop_local_11_0910_fu_290),
    .din15(cmprpop_local_11_0910_fu_290),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_11_2_fu_1225_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U15(
    .din0(cmprpop_local_12_0911_fu_294),
    .din1(cmprpop_local_12_0911_fu_294),
    .din2(cmprpop_local_12_0911_fu_294),
    .din3(cmprpop_local_12_0911_fu_294),
    .din4(cmprpop_local_12_0911_fu_294),
    .din5(cmprpop_local_12_0911_fu_294),
    .din6(cmprpop_local_12_0911_fu_294),
    .din7(cmprpop_local_12_0911_fu_294),
    .din8(cmprpop_local_12_0911_fu_294),
    .din9(cmprpop_local_12_0911_fu_294),
    .din10(cmprpop_local_12_0911_fu_294),
    .din11(cmprpop_local_12_0911_fu_294),
    .din12(zext_ln35_fu_814_p1),
    .din13(cmprpop_local_12_0911_fu_294),
    .din14(cmprpop_local_12_0911_fu_294),
    .din15(cmprpop_local_12_0911_fu_294),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_12_2_fu_1262_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U16(
    .din0(cmprpop_local_13_0912_fu_298),
    .din1(cmprpop_local_13_0912_fu_298),
    .din2(cmprpop_local_13_0912_fu_298),
    .din3(cmprpop_local_13_0912_fu_298),
    .din4(cmprpop_local_13_0912_fu_298),
    .din5(cmprpop_local_13_0912_fu_298),
    .din6(cmprpop_local_13_0912_fu_298),
    .din7(cmprpop_local_13_0912_fu_298),
    .din8(cmprpop_local_13_0912_fu_298),
    .din9(cmprpop_local_13_0912_fu_298),
    .din10(cmprpop_local_13_0912_fu_298),
    .din11(cmprpop_local_13_0912_fu_298),
    .din12(cmprpop_local_13_0912_fu_298),
    .din13(zext_ln35_fu_814_p1),
    .din14(cmprpop_local_13_0912_fu_298),
    .din15(cmprpop_local_13_0912_fu_298),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_13_2_fu_1299_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U17(
    .din0(cmprpop_local_14_0913_fu_302),
    .din1(cmprpop_local_14_0913_fu_302),
    .din2(cmprpop_local_14_0913_fu_302),
    .din3(cmprpop_local_14_0913_fu_302),
    .din4(cmprpop_local_14_0913_fu_302),
    .din5(cmprpop_local_14_0913_fu_302),
    .din6(cmprpop_local_14_0913_fu_302),
    .din7(cmprpop_local_14_0913_fu_302),
    .din8(cmprpop_local_14_0913_fu_302),
    .din9(cmprpop_local_14_0913_fu_302),
    .din10(cmprpop_local_14_0913_fu_302),
    .din11(cmprpop_local_14_0913_fu_302),
    .din12(cmprpop_local_14_0913_fu_302),
    .din13(cmprpop_local_14_0913_fu_302),
    .din14(zext_ln35_fu_814_p1),
    .din15(cmprpop_local_14_0913_fu_302),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_14_2_fu_1336_p18)
);

tancalc_tancalc_mux_164_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 11 ),
    .din5_WIDTH( 11 ),
    .din6_WIDTH( 11 ),
    .din7_WIDTH( 11 ),
    .din8_WIDTH( 11 ),
    .din9_WIDTH( 11 ),
    .din10_WIDTH( 11 ),
    .din11_WIDTH( 11 ),
    .din12_WIDTH( 11 ),
    .din13_WIDTH( 11 ),
    .din14_WIDTH( 11 ),
    .din15_WIDTH( 11 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
tancalc_mux_164_11_1_1_U18(
    .din0(cmprpop_local_15_0914_fu_306),
    .din1(cmprpop_local_15_0914_fu_306),
    .din2(cmprpop_local_15_0914_fu_306),
    .din3(cmprpop_local_15_0914_fu_306),
    .din4(cmprpop_local_15_0914_fu_306),
    .din5(cmprpop_local_15_0914_fu_306),
    .din6(cmprpop_local_15_0914_fu_306),
    .din7(cmprpop_local_15_0914_fu_306),
    .din8(cmprpop_local_15_0914_fu_306),
    .din9(cmprpop_local_15_0914_fu_306),
    .din10(cmprpop_local_15_0914_fu_306),
    .din11(cmprpop_local_15_0914_fu_306),
    .din12(cmprpop_local_15_0914_fu_306),
    .din13(cmprpop_local_15_0914_fu_306),
    .din14(cmprpop_local_15_0914_fu_306),
    .din15(zext_ln35_fu_814_p1),
    .din16(trunc_ln29_2_reg_3002_pp0_iter3_reg),
    .dout(cmprpop_local_15_2_fu_1373_p18)
);

tancalc_tancalc_mux_42_1024_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 1024 ),
    .din2_WIDTH( 1024 ),
    .din3_WIDTH( 1024 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1024 ))
tancalc_mux_42_1024_1_1_U19(
    .din0(tmp_3_fu_1783_p1),
    .din1(tmp_3_fu_1783_p2),
    .din2(tmp_3_fu_1783_p3),
    .din3(tmp_3_fu_1783_p4),
    .din4(trunc_ln98_1_reg_3126_pp1_iter1_reg),
    .dout(tmp_3_fu_1783_p6)
);

tancalc_tancalc_mux_42_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
tancalc_mux_42_11_1_1_U20(
    .din0(tmp_4_fu_1991_p1),
    .din1(tmp_4_fu_1991_p2),
    .din2(tmp_4_fu_1991_p3),
    .din3(tmp_4_fu_1991_p4),
    .din4(trunc_ln98_1_reg_3126_pp1_iter3_reg),
    .dout(tmp_4_fu_1991_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state22)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if ((1'b1 == ap_CS_fsm_state21)) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        cmpr_chunk_num_0_reg_394 <= cmpr_chunk_num_reg_2977;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_chunk_num_0_reg_394 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_658_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_part_num_0_i_reg_405 <= data_part_num_fu_664_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_part_num_0_i_reg_405 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln96_fu_1554_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        data_part_num_0_reg_416 <= data_part_num_1_fu_1560_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        data_part_num_0_reg_416 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (icmp_ln114_reg_3171_pp1_iter5_reg == 1'd1))) begin
        result_0_fu_178 <= add_ln129_15_fu_2699_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        result_0_fu_178 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln114_reg_3171_pp1_iter4_reg == 1'd1))) begin
        add_ln129_13_reg_3365 <= add_ln129_13_fu_2619_p2;
        add_ln129_5_reg_3355 <= add_ln129_5_fu_2561_p2;
        add_ln129_9_reg_3360 <= add_ln129_9_fu_2587_p2;
        icmp_ln129_1_reg_3345 <= icmp_ln129_1_fu_2321_p2;
        icmp_ln129_2_reg_3350 <= icmp_ln129_2_fu_2327_p2;
        icmp_ln129_reg_3340 <= icmp_ln129_fu_2315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_613_p2 == 1'd0))) begin
        add_ln219_reg_2982 <= add_ln219_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln114_fu_1729_p2 == 1'd1))) begin
        and_ln1355_10_reg_3225[511 : 0] <= and_ln1355_10_fu_1856_p2[511 : 0];
        and_ln1355_11_reg_3230[511 : 0] <= and_ln1355_11_fu_1862_p2[511 : 0];
        and_ln1355_12_reg_3235[511 : 0] <= and_ln1355_12_fu_1868_p2[511 : 0];
        and_ln1355_13_reg_3240[511 : 0] <= and_ln1355_13_fu_1874_p2[511 : 0];
        and_ln1355_14_reg_3245[511 : 0] <= and_ln1355_14_fu_1880_p2[511 : 0];
        and_ln1355_15_reg_3250[511 : 0] <= and_ln1355_15_fu_1886_p2[511 : 0];
        and_ln1355_1_reg_3180[511 : 0] <= and_ln1355_1_fu_1802_p2[511 : 0];
        and_ln1355_2_reg_3185[511 : 0] <= and_ln1355_2_fu_1808_p2[511 : 0];
        and_ln1355_3_reg_3190[511 : 0] <= and_ln1355_3_fu_1814_p2[511 : 0];
        and_ln1355_4_reg_3195[511 : 0] <= and_ln1355_4_fu_1820_p2[511 : 0];
        and_ln1355_5_reg_3200[511 : 0] <= and_ln1355_5_fu_1826_p2[511 : 0];
        and_ln1355_6_reg_3205[511 : 0] <= and_ln1355_6_fu_1832_p2[511 : 0];
        and_ln1355_7_reg_3210[511 : 0] <= and_ln1355_7_fu_1838_p2[511 : 0];
        and_ln1355_8_reg_3215[511 : 0] <= and_ln1355_8_fu_1844_p2[511 : 0];
        and_ln1355_9_reg_3220[511 : 0] <= and_ln1355_9_fu_1850_p2[511 : 0];
        and_ln1355_reg_3175[511 : 0] <= and_ln1355_fu_1796_p2[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        cmpr_chunk_num_reg_2977 <= cmpr_chunk_num_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_2993_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        cmprpop_local_0_0899_fu_246 <= cmprpop_local_0_2_fu_818_p18;
        cmprpop_local_10_0909_fu_286 <= cmprpop_local_10_2_fu_1188_p18;
        cmprpop_local_11_0910_fu_290 <= cmprpop_local_11_2_fu_1225_p18;
        cmprpop_local_12_0911_fu_294 <= cmprpop_local_12_2_fu_1262_p18;
        cmprpop_local_13_0912_fu_298 <= cmprpop_local_13_2_fu_1299_p18;
        cmprpop_local_14_0913_fu_302 <= cmprpop_local_14_2_fu_1336_p18;
        cmprpop_local_15_0914_fu_306 <= cmprpop_local_15_2_fu_1373_p18;
        cmprpop_local_1_0900_fu_250 <= cmprpop_local_1_2_fu_855_p18;
        cmprpop_local_2_0901_fu_254 <= cmprpop_local_2_2_fu_892_p18;
        cmprpop_local_3_0902_fu_258 <= cmprpop_local_3_2_fu_929_p18;
        cmprpop_local_4_0903_fu_262 <= cmprpop_local_4_2_fu_966_p18;
        cmprpop_local_5_0904_fu_266 <= cmprpop_local_5_2_fu_1003_p18;
        cmprpop_local_6_0905_fu_270 <= cmprpop_local_6_2_fu_1040_p18;
        cmprpop_local_7_0906_fu_274 <= cmprpop_local_7_2_fu_1077_p18;
        cmprpop_local_8_0907_fu_278 <= cmprpop_local_8_2_fu_1114_p18;
        cmprpop_local_9_0908_fu_282 <= cmprpop_local_9_2_fu_1151_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem0_addr_reg_2968[57 : 0] <= empty_9_fu_594_p1[57 : 0];
        gmem1_addr_reg_2957[61 : 0] <= empty_fu_574_p1[61 : 0];
        p_cast_reg_2963[57 : 0] <= p_cast_fu_598_p1[57 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln114_reg_3171 <= icmp_ln114_fu_1729_p2;
        icmp_ln114_reg_3171_pp1_iter3_reg <= icmp_ln114_reg_3171;
        icmp_ln114_reg_3171_pp1_iter4_reg <= icmp_ln114_reg_3171_pp1_iter3_reg;
        icmp_ln114_reg_3171_pp1_iter5_reg <= icmp_ln114_reg_3171_pp1_iter4_reg;
        icmp_ln321_1_reg_3156 <= icmp_ln321_1_fu_1647_p2;
        icmp_ln321_1_reg_3156_pp1_iter3_reg <= icmp_ln321_1_reg_3156;
        icmp_ln321_2_reg_3163 <= icmp_ln321_2_fu_1652_p2;
        icmp_ln321_2_reg_3163_pp1_iter3_reg <= icmp_ln321_2_reg_3163;
        icmp_ln321_reg_3150 <= icmp_ln321_fu_1642_p2;
        icmp_ln321_reg_3150_pp1_iter3_reg <= icmp_ln321_reg_3150;
        icmp_ln96_reg_3117_pp1_iter2_reg <= icmp_ln96_reg_3117_pp1_iter1_reg;
        icmp_ln96_reg_3117_pp1_iter3_reg <= icmp_ln96_reg_3117_pp1_iter2_reg;
        trunc_ln364_reg_3145 <= trunc_ln364_fu_1638_p1;
        trunc_ln98_1_reg_3126_pp1_iter2_reg <= trunc_ln98_1_reg_3126_pp1_iter1_reg;
        trunc_ln98_1_reg_3126_pp1_iter3_reg <= trunc_ln98_1_reg_3126_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln27_reg_2993 <= icmp_ln27_fu_658_p2;
        icmp_ln27_reg_2993_pp0_iter1_reg <= icmp_ln27_reg_2993;
        temp_input_V_reg_3027 <= gmem0_RDATA;
        trunc_ln29_2_reg_3002_pp0_iter1_reg <= trunc_ln29_2_reg_3002;
        trunc_ln30_reg_3022_pp0_iter1_reg <= trunc_ln30_reg_3022;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln27_reg_2993_pp0_iter2_reg <= icmp_ln27_reg_2993_pp0_iter1_reg;
        icmp_ln27_reg_2993_pp0_iter3_reg <= icmp_ln27_reg_2993_pp0_iter2_reg;
        trunc_ln29_2_reg_3002_pp0_iter2_reg <= trunc_ln29_2_reg_3002_pp0_iter1_reg;
        trunc_ln29_2_reg_3002_pp0_iter3_reg <= trunc_ln29_2_reg_3002_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln96_reg_3117 <= icmp_ln96_fu_1554_p2;
        icmp_ln96_reg_3117_pp1_iter1_reg <= icmp_ln96_reg_3117;
        temp_input_V_1_reg_3140 <= gmem0_RDATA;
        trunc_ln98_1_reg_3126_pp1_iter1_reg <= trunc_ln98_1_reg_3126;
        trunc_ln99_reg_3135_pp1_iter1_reg <= trunc_ln99_reg_3135;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln114_reg_3171_pp1_iter3_reg == 1'd1))) begin
        op2_V_assign_2_0_10_reg_3315 <= grp_popcntdata_fu_482_ap_return;
        op2_V_assign_2_0_11_reg_3320 <= grp_popcntdata_fu_487_ap_return;
        op2_V_assign_2_0_12_reg_3325 <= grp_popcntdata_fu_492_ap_return;
        op2_V_assign_2_0_13_reg_3330 <= grp_popcntdata_fu_497_ap_return;
        op2_V_assign_2_0_14_reg_3335 <= grp_popcntdata_fu_502_ap_return;
        op2_V_assign_2_0_1_reg_3265 <= grp_popcntdata_fu_432_ap_return;
        op2_V_assign_2_0_2_reg_3270 <= grp_popcntdata_fu_437_ap_return;
        op2_V_assign_2_0_3_reg_3275 <= grp_popcntdata_fu_442_ap_return;
        op2_V_assign_2_0_4_reg_3280 <= grp_popcntdata_fu_447_ap_return;
        op2_V_assign_2_0_5_reg_3285 <= grp_popcntdata_fu_452_ap_return;
        op2_V_assign_2_0_6_reg_3290 <= grp_popcntdata_fu_457_ap_return;
        op2_V_assign_2_0_7_reg_3295 <= grp_popcntdata_fu_462_ap_return;
        op2_V_assign_2_0_8_reg_3300 <= grp_popcntdata_fu_467_ap_return;
        op2_V_assign_2_0_9_reg_3305 <= grp_popcntdata_fu_472_ap_return;
        op2_V_assign_2_0_s_reg_3310 <= grp_popcntdata_fu_477_ap_return;
        op2_V_assign_2_reg_3255 <= grp_popcntdata_fu_427_ap_return;
        tmp_4_reg_3260 <= tmp_4_fu_1991_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_10_fu_222[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_11_fu_226[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_12_fu_230[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_13_fu_234[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_14_fu_238[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_15_fu_242[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_1_fu_186[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_2_fu_190[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_3_fu_194[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_4_fu_198[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_5_fu_202[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_6_fu_206[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_7_fu_210[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_8_fu_214[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_9_fu_218[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln29_2_reg_3002_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_s_fu_182[511 : 0] <= p_Result_s_fu_697_p3[511 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln96_reg_3117_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ref_local_3_V_04_fu_322 <= ref_local_3_V_14_fu_1673_p3;
        ref_local_3_V_1_fu_310 <= ref_local_3_V_20_fu_1721_p3;
        ref_local_3_V_2_fu_314 <= ref_local_3_V_19_fu_1713_p3;
        ref_local_3_V_8_fu_318 <= ref_local_3_V_17_fu_1697_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln96_reg_3117_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        refpop_local_3_V_08_fu_338 <= refpop_local_3_V_16_fu_1942_p3;
        refpop_local_3_V_1_fu_326 <= refpop_local_3_V_22_fu_1984_p3;
        refpop_local_3_V_2_fu_330 <= refpop_local_3_V_21_fu_1977_p3;
        refpop_local_3_V_9_fu_334 <= refpop_local_3_V_19_fu_1963_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_fu_658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln29_2_reg_3002 <= {{data_part_num_0_i_reg_405[4:1]}};
        trunc_ln30_reg_3022 <= trunc_ln30_fu_680_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln27_reg_2993_pp0_iter1_reg == 1'd0))) begin
        trunc_ln364_1_reg_3032 <= trunc_ln364_1_fu_810_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln96_fu_1554_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln98_1_reg_3126 <= {{data_part_num_0_reg_416[2:1]}};
        trunc_ln99_reg_3135 <= trunc_ln99_fu_1576_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        zext_ln215_12_reg_3062[10 : 0] <= zext_ln215_12_fu_1510_p1[10 : 0];
        zext_ln215_13_reg_3067[10 : 0] <= zext_ln215_13_fu_1514_p1[10 : 0];
        zext_ln215_16_reg_3072[10 : 0] <= zext_ln215_16_fu_1518_p1[10 : 0];
        zext_ln215_17_reg_3077[10 : 0] <= zext_ln215_17_fu_1522_p1[10 : 0];
        zext_ln215_1_reg_3037[10 : 0] <= zext_ln215_1_fu_1490_p1[10 : 0];
        zext_ln215_20_reg_3082[10 : 0] <= zext_ln215_20_fu_1526_p1[10 : 0];
        zext_ln215_21_reg_3087[10 : 0] <= zext_ln215_21_fu_1530_p1[10 : 0];
        zext_ln215_24_reg_3092[10 : 0] <= zext_ln215_24_fu_1534_p1[10 : 0];
        zext_ln215_25_reg_3097[10 : 0] <= zext_ln215_25_fu_1538_p1[10 : 0];
        zext_ln215_28_reg_3102[10 : 0] <= zext_ln215_28_fu_1542_p1[10 : 0];
        zext_ln215_29_reg_3107[10 : 0] <= zext_ln215_29_fu_1546_p1[10 : 0];
        zext_ln215_32_reg_3112[10 : 0] <= zext_ln215_32_fu_1550_p1[10 : 0];
        zext_ln215_4_reg_3042[10 : 0] <= zext_ln215_4_fu_1494_p1[10 : 0];
        zext_ln215_5_reg_3047[10 : 0] <= zext_ln215_5_fu_1498_p1[10 : 0];
        zext_ln215_8_reg_3052[10 : 0] <= zext_ln215_8_fu_1502_p1[10 : 0];
        zext_ln215_9_reg_3057[10 : 0] <= zext_ln215_9_fu_1506_p1[10 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln27_fu_658_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln96_fu_1554_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((gmem0_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            gmem0_ARADDR = gmem0_addr_reg_2968;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            gmem0_ARADDR = zext_ln219_1_fu_648_p1;
        end else begin
            gmem0_ARADDR = 'bx;
        end
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((gmem0_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            gmem0_ARLEN = 32'd128;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            gmem0_ARLEN = 32'd32;
        end else begin
            gmem0_ARLEN = 'bx;
        end
    end else begin
        gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_613_p2 == 1'd1))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_613_p2 == 1'd1))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp171) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp336) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        grp_popcnt_fu_507_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_507_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_popcnt_fu_507_x_V = trunc_ln364_reg_3145;
    end else if (((icmp_ln27_reg_2993_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_popcnt_fu_507_x_V = trunc_ln364_1_reg_3032;
    end else begin
        grp_popcnt_fu_507_x_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp337) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_427_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_427_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp338) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_432_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_432_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp339) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_437_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_437_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp340) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_442_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_442_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp341) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_447_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_447_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp342) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_452_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_452_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp343) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_457_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_457_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp344) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_462_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_462_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp345) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_467_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_467_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp346) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_472_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_472_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp347) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_477_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_477_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp348) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_482_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_482_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp349) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_487_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_487_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp350) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_492_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_492_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp351) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_497_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_497_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp352) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_popcntdata_fu_502_ap_ce = 1'b1;
    end else begin
        grp_popcntdata_fu_502_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_613_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln93_fu_613_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_658_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln27_fu_658_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln96_fu_1554_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter5 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter5 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln96_fu_1554_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state30 : begin
            if (((gmem1_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln129_10_fu_2593_p2 = (zext_ln129_12_fu_2489_p1 + zext_ln129_11_fu_2473_p1);

assign add_ln129_11_fu_2603_p2 = (zext_ln129_15_fu_2537_p1 + zext_ln129_14_fu_2521_p1);

assign add_ln129_12_fu_2609_p2 = (zext_ln129_13_fu_2505_p1 + add_ln129_11_fu_2603_p2);

assign add_ln129_13_fu_2619_p2 = (zext_ln129_23_fu_2599_p1 + zext_ln129_24_fu_2615_p1);

assign add_ln129_14_fu_2689_p2 = (zext_ln129_22_fu_2683_p1 + zext_ln129_25_fu_2686_p1);

assign add_ln129_15_fu_2699_p2 = (add_ln129_6_fu_2677_p2 + zext_ln129_26_fu_2695_p1);

assign add_ln129_1_fu_2658_p2 = (zext_ln129_2_fu_2648_p1 + zext_ln129_1_fu_2639_p1);

assign add_ln129_2_fu_2668_p2 = (add_ln129_fu_2652_p2 + zext_ln129_16_fu_2664_p1);

assign add_ln129_3_fu_2541_p2 = (zext_ln129_4_fu_2361_p1 + zext_ln129_3_fu_2345_p1);

assign add_ln129_4_fu_2551_p2 = (zext_ln129_6_fu_2393_p1 + zext_ln129_5_fu_2377_p1);

assign add_ln129_5_fu_2561_p2 = (zext_ln129_17_fu_2547_p1 + zext_ln129_18_fu_2557_p1);

assign add_ln129_6_fu_2677_p2 = (add_ln129_2_fu_2668_p2 + zext_ln129_19_fu_2674_p1);

assign add_ln129_7_fu_2567_p2 = (zext_ln129_8_fu_2425_p1 + zext_ln129_7_fu_2409_p1);

assign add_ln129_8_fu_2577_p2 = (zext_ln129_10_fu_2457_p1 + zext_ln129_9_fu_2441_p1);

assign add_ln129_9_fu_2587_p2 = (zext_ln129_20_fu_2573_p1 + zext_ln129_21_fu_2583_p1);

assign add_ln129_fu_2652_p2 = (result_0_fu_178 + zext_ln129_fu_2630_p1);

assign add_ln1353_10_fu_2207_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_21_reg_3087);

assign add_ln1353_11_fu_2225_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_24_reg_3092);

assign add_ln1353_12_fu_2243_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_25_reg_3097);

assign add_ln1353_13_fu_2261_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_28_reg_3102);

assign add_ln1353_14_fu_2279_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_29_reg_3107);

assign add_ln1353_15_fu_2297_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_32_reg_3112);

assign add_ln1353_1_fu_2045_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_4_reg_3042);

assign add_ln1353_2_fu_2063_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_5_reg_3047);

assign add_ln1353_3_fu_2081_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_8_reg_3052);

assign add_ln1353_4_fu_2099_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_9_reg_3057);

assign add_ln1353_5_fu_2117_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_12_reg_3062);

assign add_ln1353_6_fu_2135_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_13_reg_3067);

assign add_ln1353_7_fu_2153_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_16_reg_3072);

assign add_ln1353_8_fu_2171_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_17_reg_3077);

assign add_ln1353_9_fu_2189_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_20_reg_3082);

assign add_ln1353_fu_2027_p2 = (zext_ln215_fu_2024_p1 + zext_ln215_1_reg_3037);

assign add_ln219_fu_643_p2 = (p_cast_reg_2963 + zext_ln219_fu_639_p1);

assign and_ln1355_10_fu_1856_p2 = (tmp_3_fu_1783_p6 & p_Val2_10_fu_222);

assign and_ln1355_11_fu_1862_p2 = (tmp_3_fu_1783_p6 & p_Val2_11_fu_226);

assign and_ln1355_12_fu_1868_p2 = (tmp_3_fu_1783_p6 & p_Val2_12_fu_230);

assign and_ln1355_13_fu_1874_p2 = (tmp_3_fu_1783_p6 & p_Val2_13_fu_234);

assign and_ln1355_14_fu_1880_p2 = (tmp_3_fu_1783_p6 & p_Val2_14_fu_238);

assign and_ln1355_15_fu_1886_p2 = (tmp_3_fu_1783_p6 & p_Val2_15_fu_242);

assign and_ln1355_1_fu_1802_p2 = (tmp_3_fu_1783_p6 & p_Val2_1_fu_186);

assign and_ln1355_2_fu_1808_p2 = (tmp_3_fu_1783_p6 & p_Val2_2_fu_190);

assign and_ln1355_3_fu_1814_p2 = (tmp_3_fu_1783_p6 & p_Val2_3_fu_194);

assign and_ln1355_4_fu_1820_p2 = (tmp_3_fu_1783_p6 & p_Val2_4_fu_198);

assign and_ln1355_5_fu_1826_p2 = (tmp_3_fu_1783_p6 & p_Val2_5_fu_202);

assign and_ln1355_6_fu_1832_p2 = (tmp_3_fu_1783_p6 & p_Val2_6_fu_206);

assign and_ln1355_7_fu_1838_p2 = (tmp_3_fu_1783_p6 & p_Val2_7_fu_210);

assign and_ln1355_8_fu_1844_p2 = (tmp_3_fu_1783_p6 & p_Val2_8_fu_214);

assign and_ln1355_9_fu_1850_p2 = (tmp_3_fu_1783_p6 & p_Val2_9_fu_218);

assign and_ln1355_fu_1796_p2 = (tmp_3_fu_1783_p6 & p_Val2_s_fu_182);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp171 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp336 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp337 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp338 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp339 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp340 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp341 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp342 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp343 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp344 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp345 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp346 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp347 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp348 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp349 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp350 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp351 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp352 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter0_ignore_call22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1_ignore_call22 = (gmem0_RVALID == 1'b0);
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter0_ignore_call99 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call105 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call111 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call19 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call23 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call27 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call33 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call39 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call45 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call51 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call57 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call63 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call69 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call75 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call81 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call87 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call93 = (gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter1_ignore_call99 = (gmem0_RVALID == 1'b0);
end

assign ap_block_state24_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter2_ignore_call99 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter3_ignore_call99 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter4_ignore_call99 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter5_ignore_call99 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call105 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call111 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call19 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call33 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call39 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call45 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call51 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call57 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call63 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call69 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call75 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call81 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call87 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call93 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter6_ignore_call99 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((gmem1_AWREADY == 1'b0) & (icmp_ln93_fu_613_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign cmpr_chunk_num_fu_619_p2 = (cmpr_chunk_num_0_reg_394 + 3'd1);

assign data_part_num_1_fu_1560_p2 = (data_part_num_0_reg_416 + 8'd1);

assign data_part_num_fu_664_p2 = (data_part_num_0_i_reg_405 + 6'd1);

assign empty_9_fu_594_p1 = input_V1_fu_584_p4;

assign empty_fu_574_p1 = output3_fu_564_p4;

assign icmp_ln114_fu_1729_p2 = ((num_hi_1_fu_1599_p2 == 10'd1023) ? 1'b1 : 1'b0);

assign icmp_ln129_10_fu_2445_p2 = (($signed(zext_ln215_38_fu_2216_p1) < $signed(sub_ln1354_10_fu_2219_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_11_fu_2461_p2 = (($signed(zext_ln215_40_fu_2234_p1) < $signed(sub_ln1354_11_fu_2237_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_12_fu_2477_p2 = (($signed(zext_ln215_42_fu_2252_p1) < $signed(sub_ln1354_12_fu_2255_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_13_fu_2493_p2 = (($signed(zext_ln215_44_fu_2270_p1) < $signed(sub_ln1354_13_fu_2273_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_14_fu_2509_p2 = (($signed(zext_ln215_46_fu_2288_p1) < $signed(sub_ln1354_14_fu_2291_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_15_fu_2525_p2 = (($signed(zext_ln215_48_fu_2306_p1) < $signed(sub_ln1354_15_fu_2309_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_1_fu_2321_p2 = (($signed(zext_ln215_7_fu_2054_p1) < $signed(sub_ln1354_1_fu_2057_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_2_fu_2327_p2 = (($signed(zext_ln215_11_fu_2072_p1) < $signed(sub_ln1354_2_fu_2075_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_3_fu_2333_p2 = (($signed(zext_ln215_15_fu_2090_p1) < $signed(sub_ln1354_3_fu_2093_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_4_fu_2349_p2 = (($signed(zext_ln215_19_fu_2108_p1) < $signed(sub_ln1354_4_fu_2111_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_5_fu_2365_p2 = (($signed(zext_ln215_23_fu_2126_p1) < $signed(sub_ln1354_5_fu_2129_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_6_fu_2381_p2 = (($signed(zext_ln215_27_fu_2144_p1) < $signed(sub_ln1354_6_fu_2147_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_7_fu_2397_p2 = (($signed(zext_ln215_31_fu_2162_p1) < $signed(sub_ln1354_7_fu_2165_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_8_fu_2413_p2 = (($signed(zext_ln215_34_fu_2180_p1) < $signed(sub_ln1354_8_fu_2183_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_9_fu_2429_p2 = (($signed(zext_ln215_36_fu_2198_p1) < $signed(sub_ln1354_9_fu_2201_p2)) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_2315_p2 = (($signed(zext_ln215_3_fu_2036_p1) < $signed(sub_ln1354_fu_2039_p2)) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_658_p2 = ((data_part_num_0_i_reg_405 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_1647_p2 = ((trunc_ln98_1_reg_3126_pp1_iter1_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_1652_p2 = ((trunc_ln98_1_reg_3126_pp1_iter1_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_1642_p2 = ((trunc_ln98_1_reg_3126_pp1_iter1_reg == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_613_p2 = ((cmpr_chunk_num_0_reg_394 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_1554_p2 = ((data_part_num_0_reg_416 == 8'd128) ? 1'b1 : 1'b0);

assign input_V1_fu_584_p4 = {{input_V[63:6]}};

assign lshr_ln647_1_fu_798_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln647_3_fu_794_p1;

assign lshr_ln647_fu_1626_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln647_1_fu_1622_p1;

assign num_hi_1_fu_1599_p2 = (shl_ln1_fu_1592_p3 | 10'd511);

assign num_hi_fu_691_p2 = (shl_ln_fu_684_p3 | 10'd511);

assign or_ln_fu_629_p4 = {{{{2'd2}, {trunc_ln94_fu_625_p1}}}, {4'd0}};

assign output3_fu_564_p4 = {{output_r[63:2]}};

assign p_Result_1_fu_804_p2 = (p_Result_s_fu_697_p3 & lshr_ln647_1_fu_798_p2);

assign p_Result_2_fu_1605_p3 = {{512'd0}, {temp_input_V_1_reg_3140}};

assign p_Result_3_fu_1632_p2 = (p_Result_2_fu_1605_p3 & lshr_ln647_fu_1626_p2);

assign p_Result_s_fu_697_p3 = {{512'd0}, {temp_input_V_reg_3027}};

assign p_cast_fu_598_p1 = input_V1_fu_584_p4;

assign ref_local_3_V_13_fu_1665_p3 = ((icmp_ln321_1_fu_1647_p2[0:0] === 1'b1) ? ref_local_3_V_04_fu_322 : ref_local_3_V_fu_1657_p3);

assign ref_local_3_V_14_fu_1673_p3 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_04_fu_322 : ref_local_3_V_13_fu_1665_p3);

assign ref_local_3_V_15_fu_1681_p3 = ((icmp_ln321_fu_1642_p2[0:0] === 1'b1) ? p_Result_2_fu_1605_p3 : ref_local_3_V_8_fu_318);

assign ref_local_3_V_16_fu_1689_p3 = ((icmp_ln321_1_fu_1647_p2[0:0] === 1'b1) ? ref_local_3_V_8_fu_318 : ref_local_3_V_15_fu_1681_p3);

assign ref_local_3_V_17_fu_1697_p3 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_8_fu_318 : ref_local_3_V_16_fu_1689_p3);

assign ref_local_3_V_18_fu_1705_p3 = ((icmp_ln321_1_fu_1647_p2[0:0] === 1'b1) ? p_Result_2_fu_1605_p3 : ref_local_3_V_2_fu_314);

assign ref_local_3_V_19_fu_1713_p3 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_2_fu_314 : ref_local_3_V_18_fu_1705_p3);

assign ref_local_3_V_20_fu_1721_p3 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? p_Result_2_fu_1605_p3 : ref_local_3_V_1_fu_310);

assign ref_local_3_V_fu_1657_p3 = ((icmp_ln321_fu_1642_p2[0:0] === 1'b1) ? ref_local_3_V_04_fu_322 : p_Result_2_fu_1605_p3);

assign refpop_local_3_V_14_fu_1928_p3 = ((icmp_ln321_reg_3150_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_08_fu_338 : refpop_local_3_V_23_fu_1924_p1);

assign refpop_local_3_V_15_fu_1935_p3 = ((icmp_ln321_1_reg_3156_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_08_fu_338 : refpop_local_3_V_14_fu_1928_p3);

assign refpop_local_3_V_16_fu_1942_p3 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_08_fu_338 : refpop_local_3_V_15_fu_1935_p3);

assign refpop_local_3_V_17_fu_1949_p3 = ((icmp_ln321_reg_3150_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_23_fu_1924_p1 : refpop_local_3_V_9_fu_334);

assign refpop_local_3_V_18_fu_1956_p3 = ((icmp_ln321_1_reg_3156_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_9_fu_334 : refpop_local_3_V_17_fu_1949_p3);

assign refpop_local_3_V_19_fu_1963_p3 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_9_fu_334 : refpop_local_3_V_18_fu_1956_p3);

assign refpop_local_3_V_20_fu_1970_p3 = ((icmp_ln321_1_reg_3156_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_23_fu_1924_p1 : refpop_local_3_V_2_fu_330);

assign refpop_local_3_V_21_fu_1977_p3 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_2_fu_330 : refpop_local_3_V_20_fu_1970_p3);

assign refpop_local_3_V_22_fu_1984_p3 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_23_fu_1924_p1 : refpop_local_3_V_1_fu_326);

assign refpop_local_3_V_23_fu_1924_p1 = grp_popcnt_fu_507_ap_return;

assign shl_ln1_fu_1592_p3 = {{trunc_ln99_reg_3135_pp1_iter1_reg}, {9'd0}};

assign shl_ln_fu_684_p3 = {{trunc_ln30_reg_3022_pp0_iter1_reg}, {9'd0}};

assign sub_ln1354_10_fu_2219_p2 = (zext_ln215_37_fu_2212_p1 - zext_ln215_38_fu_2216_p1);

assign sub_ln1354_11_fu_2237_p2 = (zext_ln215_39_fu_2230_p1 - zext_ln215_40_fu_2234_p1);

assign sub_ln1354_12_fu_2255_p2 = (zext_ln215_41_fu_2248_p1 - zext_ln215_42_fu_2252_p1);

assign sub_ln1354_13_fu_2273_p2 = (zext_ln215_43_fu_2266_p1 - zext_ln215_44_fu_2270_p1);

assign sub_ln1354_14_fu_2291_p2 = (zext_ln215_45_fu_2284_p1 - zext_ln215_46_fu_2288_p1);

assign sub_ln1354_15_fu_2309_p2 = (zext_ln215_47_fu_2302_p1 - zext_ln215_48_fu_2306_p1);

assign sub_ln1354_1_fu_2057_p2 = (zext_ln215_6_fu_2050_p1 - zext_ln215_7_fu_2054_p1);

assign sub_ln1354_2_fu_2075_p2 = (zext_ln215_10_fu_2068_p1 - zext_ln215_11_fu_2072_p1);

assign sub_ln1354_3_fu_2093_p2 = (zext_ln215_14_fu_2086_p1 - zext_ln215_15_fu_2090_p1);

assign sub_ln1354_4_fu_2111_p2 = (zext_ln215_18_fu_2104_p1 - zext_ln215_19_fu_2108_p1);

assign sub_ln1354_5_fu_2129_p2 = (zext_ln215_22_fu_2122_p1 - zext_ln215_23_fu_2126_p1);

assign sub_ln1354_6_fu_2147_p2 = (zext_ln215_26_fu_2140_p1 - zext_ln215_27_fu_2144_p1);

assign sub_ln1354_7_fu_2165_p2 = (zext_ln215_30_fu_2158_p1 - zext_ln215_31_fu_2162_p1);

assign sub_ln1354_8_fu_2183_p2 = (zext_ln215_33_fu_2176_p1 - zext_ln215_34_fu_2180_p1);

assign sub_ln1354_9_fu_2201_p2 = (zext_ln215_35_fu_2194_p1 - zext_ln215_36_fu_2198_p1);

assign sub_ln1354_fu_2039_p2 = (zext_ln215_2_fu_2032_p1 - zext_ln215_3_fu_2036_p1);

assign tmp_3_fu_1783_p1 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? p_Result_2_fu_1605_p3 : ref_local_3_V_1_fu_310);

assign tmp_3_fu_1783_p2 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_2_fu_314 : ref_local_3_V_18_fu_1705_p3);

assign tmp_3_fu_1783_p3 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_8_fu_318 : ref_local_3_V_16_fu_1689_p3);

assign tmp_3_fu_1783_p4 = ((icmp_ln321_2_fu_1652_p2[0:0] === 1'b1) ? ref_local_3_V_04_fu_322 : ref_local_3_V_13_fu_1665_p3);

assign tmp_4_fu_1991_p1 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_23_fu_1924_p1 : refpop_local_3_V_1_fu_326);

assign tmp_4_fu_1991_p2 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_2_fu_330 : refpop_local_3_V_20_fu_1970_p3);

assign tmp_4_fu_1991_p3 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_9_fu_334 : refpop_local_3_V_18_fu_1956_p3);

assign tmp_4_fu_1991_p4 = ((icmp_ln321_2_reg_3163_pp1_iter3_reg[0:0] === 1'b1) ? refpop_local_3_V_08_fu_338 : refpop_local_3_V_15_fu_1935_p3);

assign trunc_ln30_fu_680_p1 = data_part_num_0_i_reg_405[0:0];

assign trunc_ln364_1_fu_810_p1 = p_Result_1_fu_804_p2[511:0];

assign trunc_ln364_fu_1638_p1 = p_Result_3_fu_1632_p2[511:0];

assign trunc_ln94_fu_625_p1 = cmpr_chunk_num_0_reg_394[1:0];

assign trunc_ln99_fu_1576_p1 = data_part_num_0_reg_416[0:0];

assign xor_ln129_10_fu_2451_p2 = (icmp_ln129_10_fu_2445_p2 ^ 1'd1);

assign xor_ln129_11_fu_2467_p2 = (icmp_ln129_11_fu_2461_p2 ^ 1'd1);

assign xor_ln129_12_fu_2483_p2 = (icmp_ln129_12_fu_2477_p2 ^ 1'd1);

assign xor_ln129_13_fu_2499_p2 = (icmp_ln129_13_fu_2493_p2 ^ 1'd1);

assign xor_ln129_14_fu_2515_p2 = (icmp_ln129_14_fu_2509_p2 ^ 1'd1);

assign xor_ln129_15_fu_2531_p2 = (icmp_ln129_15_fu_2525_p2 ^ 1'd1);

assign xor_ln129_1_fu_2634_p2 = (icmp_ln129_1_reg_3345 ^ 1'd1);

assign xor_ln129_2_fu_2643_p2 = (icmp_ln129_2_reg_3350 ^ 1'd1);

assign xor_ln129_3_fu_2339_p2 = (icmp_ln129_3_fu_2333_p2 ^ 1'd1);

assign xor_ln129_4_fu_2355_p2 = (icmp_ln129_4_fu_2349_p2 ^ 1'd1);

assign xor_ln129_5_fu_2371_p2 = (icmp_ln129_5_fu_2365_p2 ^ 1'd1);

assign xor_ln129_6_fu_2387_p2 = (icmp_ln129_6_fu_2381_p2 ^ 1'd1);

assign xor_ln129_7_fu_2403_p2 = (icmp_ln129_7_fu_2397_p2 ^ 1'd1);

assign xor_ln129_8_fu_2419_p2 = (icmp_ln129_8_fu_2413_p2 ^ 1'd1);

assign xor_ln129_9_fu_2435_p2 = (icmp_ln129_9_fu_2429_p2 ^ 1'd1);

assign xor_ln129_fu_2625_p2 = (icmp_ln129_reg_3340 ^ 1'd1);

assign xor_ln647_1_fu_788_p2 = (zext_ln647_2_fu_784_p1 ^ 11'd1023);

assign xor_ln647_fu_1616_p2 = (zext_ln647_fu_1612_p1 ^ 11'd1023);

assign zext_ln129_10_fu_2457_p1 = xor_ln129_10_fu_2451_p2;

assign zext_ln129_11_fu_2473_p1 = xor_ln129_11_fu_2467_p2;

assign zext_ln129_12_fu_2489_p1 = xor_ln129_12_fu_2483_p2;

assign zext_ln129_13_fu_2505_p1 = xor_ln129_13_fu_2499_p2;

assign zext_ln129_14_fu_2521_p1 = xor_ln129_14_fu_2515_p2;

assign zext_ln129_15_fu_2537_p1 = xor_ln129_15_fu_2531_p2;

assign zext_ln129_16_fu_2664_p1 = add_ln129_1_fu_2658_p2;

assign zext_ln129_17_fu_2547_p1 = add_ln129_3_fu_2541_p2;

assign zext_ln129_18_fu_2557_p1 = add_ln129_4_fu_2551_p2;

assign zext_ln129_19_fu_2674_p1 = add_ln129_5_reg_3355;

assign zext_ln129_1_fu_2639_p1 = xor_ln129_1_fu_2634_p2;

assign zext_ln129_20_fu_2573_p1 = add_ln129_7_fu_2567_p2;

assign zext_ln129_21_fu_2583_p1 = add_ln129_8_fu_2577_p2;

assign zext_ln129_22_fu_2683_p1 = add_ln129_9_reg_3360;

assign zext_ln129_23_fu_2599_p1 = add_ln129_10_fu_2593_p2;

assign zext_ln129_24_fu_2615_p1 = add_ln129_12_fu_2609_p2;

assign zext_ln129_25_fu_2686_p1 = add_ln129_13_reg_3365;

assign zext_ln129_26_fu_2695_p1 = add_ln129_14_fu_2689_p2;

assign zext_ln129_2_fu_2648_p1 = xor_ln129_2_fu_2643_p2;

assign zext_ln129_3_fu_2345_p1 = xor_ln129_3_fu_2339_p2;

assign zext_ln129_4_fu_2361_p1 = xor_ln129_4_fu_2355_p2;

assign zext_ln129_5_fu_2377_p1 = xor_ln129_5_fu_2371_p2;

assign zext_ln129_6_fu_2393_p1 = xor_ln129_6_fu_2387_p2;

assign zext_ln129_7_fu_2409_p1 = xor_ln129_7_fu_2403_p2;

assign zext_ln129_8_fu_2425_p1 = xor_ln129_8_fu_2419_p2;

assign zext_ln129_9_fu_2441_p1 = xor_ln129_9_fu_2435_p2;

assign zext_ln129_fu_2630_p1 = xor_ln129_fu_2625_p2;

assign zext_ln215_10_fu_2068_p1 = add_ln1353_2_fu_2063_p2;

assign zext_ln215_11_fu_2072_p1 = op2_V_assign_2_0_2_reg_3270;

assign zext_ln215_12_fu_1510_p1 = cmprpop_local_5_0904_fu_266;

assign zext_ln215_13_fu_1514_p1 = cmprpop_local_6_0905_fu_270;

assign zext_ln215_14_fu_2086_p1 = add_ln1353_3_fu_2081_p2;

assign zext_ln215_15_fu_2090_p1 = op2_V_assign_2_0_3_reg_3275;

assign zext_ln215_16_fu_1518_p1 = cmprpop_local_7_0906_fu_274;

assign zext_ln215_17_fu_1522_p1 = cmprpop_local_8_0907_fu_278;

assign zext_ln215_18_fu_2104_p1 = add_ln1353_4_fu_2099_p2;

assign zext_ln215_19_fu_2108_p1 = op2_V_assign_2_0_4_reg_3280;

assign zext_ln215_1_fu_1490_p1 = cmprpop_local_0_0899_fu_246;

assign zext_ln215_20_fu_1526_p1 = cmprpop_local_9_0908_fu_282;

assign zext_ln215_21_fu_1530_p1 = cmprpop_local_10_0909_fu_286;

assign zext_ln215_22_fu_2122_p1 = add_ln1353_5_fu_2117_p2;

assign zext_ln215_23_fu_2126_p1 = op2_V_assign_2_0_5_reg_3285;

assign zext_ln215_24_fu_1534_p1 = cmprpop_local_11_0910_fu_290;

assign zext_ln215_25_fu_1538_p1 = cmprpop_local_12_0911_fu_294;

assign zext_ln215_26_fu_2140_p1 = add_ln1353_6_fu_2135_p2;

assign zext_ln215_27_fu_2144_p1 = op2_V_assign_2_0_6_reg_3290;

assign zext_ln215_28_fu_1542_p1 = cmprpop_local_13_0912_fu_298;

assign zext_ln215_29_fu_1546_p1 = cmprpop_local_14_0913_fu_302;

assign zext_ln215_2_fu_2032_p1 = add_ln1353_fu_2027_p2;

assign zext_ln215_30_fu_2158_p1 = add_ln1353_7_fu_2153_p2;

assign zext_ln215_31_fu_2162_p1 = op2_V_assign_2_0_7_reg_3295;

assign zext_ln215_32_fu_1550_p1 = cmprpop_local_15_0914_fu_306;

assign zext_ln215_33_fu_2176_p1 = add_ln1353_8_fu_2171_p2;

assign zext_ln215_34_fu_2180_p1 = op2_V_assign_2_0_8_reg_3300;

assign zext_ln215_35_fu_2194_p1 = add_ln1353_9_fu_2189_p2;

assign zext_ln215_36_fu_2198_p1 = op2_V_assign_2_0_9_reg_3305;

assign zext_ln215_37_fu_2212_p1 = add_ln1353_10_fu_2207_p2;

assign zext_ln215_38_fu_2216_p1 = op2_V_assign_2_0_s_reg_3310;

assign zext_ln215_39_fu_2230_p1 = add_ln1353_11_fu_2225_p2;

assign zext_ln215_3_fu_2036_p1 = op2_V_assign_2_reg_3255;

assign zext_ln215_40_fu_2234_p1 = op2_V_assign_2_0_10_reg_3315;

assign zext_ln215_41_fu_2248_p1 = add_ln1353_12_fu_2243_p2;

assign zext_ln215_42_fu_2252_p1 = op2_V_assign_2_0_11_reg_3320;

assign zext_ln215_43_fu_2266_p1 = add_ln1353_13_fu_2261_p2;

assign zext_ln215_44_fu_2270_p1 = op2_V_assign_2_0_12_reg_3325;

assign zext_ln215_45_fu_2284_p1 = add_ln1353_14_fu_2279_p2;

assign zext_ln215_46_fu_2288_p1 = op2_V_assign_2_0_13_reg_3330;

assign zext_ln215_47_fu_2302_p1 = add_ln1353_15_fu_2297_p2;

assign zext_ln215_48_fu_2306_p1 = op2_V_assign_2_0_14_reg_3335;

assign zext_ln215_4_fu_1494_p1 = cmprpop_local_1_0900_fu_250;

assign zext_ln215_5_fu_1498_p1 = cmprpop_local_2_0901_fu_254;

assign zext_ln215_6_fu_2050_p1 = add_ln1353_1_fu_2045_p2;

assign zext_ln215_7_fu_2054_p1 = op2_V_assign_2_0_1_reg_3265;

assign zext_ln215_8_fu_1502_p1 = cmprpop_local_3_0902_fu_258;

assign zext_ln215_9_fu_1506_p1 = cmprpop_local_4_0903_fu_262;

assign zext_ln215_fu_2024_p1 = tmp_4_reg_3260;

assign zext_ln219_1_fu_648_p1 = add_ln219_reg_2982;

assign zext_ln219_fu_639_p1 = or_ln_fu_629_p4;

assign zext_ln35_fu_814_p1 = grp_popcnt_fu_507_ap_return;

assign zext_ln647_1_fu_1622_p1 = xor_ln647_fu_1616_p2;

assign zext_ln647_2_fu_784_p1 = num_hi_fu_691_p2;

assign zext_ln647_3_fu_794_p1 = xor_ln647_1_fu_788_p2;

assign zext_ln647_fu_1612_p1 = num_hi_1_fu_1599_p2;

always @ (posedge ap_clk) begin
    gmem1_addr_reg_2957[63:62] <= 2'b00;
    p_cast_reg_2963[58] <= 1'b0;
    gmem0_addr_reg_2968[63:58] <= 6'b000000;
    zext_ln215_1_reg_3037[11] <= 1'b0;
    zext_ln215_4_reg_3042[11] <= 1'b0;
    zext_ln215_5_reg_3047[11] <= 1'b0;
    zext_ln215_8_reg_3052[11] <= 1'b0;
    zext_ln215_9_reg_3057[11] <= 1'b0;
    zext_ln215_12_reg_3062[11] <= 1'b0;
    zext_ln215_13_reg_3067[11] <= 1'b0;
    zext_ln215_16_reg_3072[11] <= 1'b0;
    zext_ln215_17_reg_3077[11] <= 1'b0;
    zext_ln215_20_reg_3082[11] <= 1'b0;
    zext_ln215_21_reg_3087[11] <= 1'b0;
    zext_ln215_24_reg_3092[11] <= 1'b0;
    zext_ln215_25_reg_3097[11] <= 1'b0;
    zext_ln215_28_reg_3102[11] <= 1'b0;
    zext_ln215_29_reg_3107[11] <= 1'b0;
    zext_ln215_32_reg_3112[11] <= 1'b0;
    and_ln1355_reg_3175[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    and_ln1355_1_reg_3180[1023:512] <= 512'b
    and_ln1355_2_reg_3185[1023:512] <= 512'b
    and_ln1355_3_reg_3190[1023:512] <= 512'b
    and_ln1355_4_reg_3195[1023:512] <= 512'b
    and_ln1355_5_reg_3200[1023:512] <= 512'b
    and_ln1355_6_reg_3205[1023:512] <= 512'b
    and_ln1355_7_reg_3210[1023:512] <= 512'b
    and_ln1355_8_reg_3215[1023:512] <= 512'b
    and_ln1355_9_reg_3220[1023:512] <= 512'b
    and_ln1355_10_reg_3225[1023:512] <= 512'b
    and_ln1355_11_reg_3230[1023:512] <= 512'b
    and_ln1355_12_reg_3235[1023:512] <= 512'b
    and_ln1355_13_reg_3240[1023:512] <= 512'b
    and_ln1355_14_reg_3245[1023:512] <= 512'b
    and_ln1355_15_reg_3250[1023:512] <= 512'b
    p_Val2_s_fu_182[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    p_Val2_1_fu_186[1023:512] <= 512'b
    p_Val2_2_fu_190[1023:512] <= 512'b
    p_Val2_3_fu_194[1023:512] <= 512'b
    p_Val2_4_fu_198[1023:512] <= 512'b
    p_Val2_5_fu_202[1023:512] <= 512'b
    p_Val2_6_fu_206[1023:512] <= 512'b
    p_Val2_7_fu_210[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    p_Val2_8_fu_214[1023:512] <= 512'b
    p_Val2_9_fu_218[1023:512] <= 512'b
    p_Val2_10_fu_222[1023:512] <= 512'b
    p_Val2_11_fu_226[1023:512] <= 512'b
    p_Val2_12_fu_230[1023:512] <= 512'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    p_Val2_13_fu_234[1023:512] <= 512'b
    p_Val2_14_fu_238[1023:512] <= 512'b
    p_Val2_15_fu_242[1023:512] <= 512'b
end

endmodule //tancalc_tancalc
