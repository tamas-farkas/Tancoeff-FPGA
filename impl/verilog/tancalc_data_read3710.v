// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tancalc_data_read3710 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_input_V_AWVALID,
        m_axi_input_V_AWREADY,
        m_axi_input_V_AWADDR,
        m_axi_input_V_AWID,
        m_axi_input_V_AWLEN,
        m_axi_input_V_AWSIZE,
        m_axi_input_V_AWBURST,
        m_axi_input_V_AWLOCK,
        m_axi_input_V_AWCACHE,
        m_axi_input_V_AWPROT,
        m_axi_input_V_AWQOS,
        m_axi_input_V_AWREGION,
        m_axi_input_V_AWUSER,
        m_axi_input_V_WVALID,
        m_axi_input_V_WREADY,
        m_axi_input_V_WDATA,
        m_axi_input_V_WSTRB,
        m_axi_input_V_WLAST,
        m_axi_input_V_WID,
        m_axi_input_V_WUSER,
        m_axi_input_V_ARVALID,
        m_axi_input_V_ARREADY,
        m_axi_input_V_ARADDR,
        m_axi_input_V_ARID,
        m_axi_input_V_ARLEN,
        m_axi_input_V_ARSIZE,
        m_axi_input_V_ARBURST,
        m_axi_input_V_ARLOCK,
        m_axi_input_V_ARCACHE,
        m_axi_input_V_ARPROT,
        m_axi_input_V_ARQOS,
        m_axi_input_V_ARREGION,
        m_axi_input_V_ARUSER,
        m_axi_input_V_RVALID,
        m_axi_input_V_RREADY,
        m_axi_input_V_RDATA,
        m_axi_input_V_RLAST,
        m_axi_input_V_RID,
        m_axi_input_V_RUSER,
        m_axi_input_V_RRESP,
        m_axi_input_V_BVALID,
        m_axi_input_V_BREADY,
        m_axi_input_V_BRESP,
        m_axi_input_V_BID,
        m_axi_input_V_BUSER,
        input_V_offset,
        data_num_0_i,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        cmpr_chunk_num_0_i,
        data_num_0_i_c_din,
        data_num_0_i_c_full_n,
        data_num_0_i_c_write,
        cmpr_local_0_V_c_din,
        cmpr_local_0_V_c_full_n,
        cmpr_local_0_V_c_write,
        cmpr_local_1_V_c_din,
        cmpr_local_1_V_c_full_n,
        cmpr_local_1_V_c_write,
        cmpr_local_2_V_c_din,
        cmpr_local_2_V_c_full_n,
        cmpr_local_2_V_c_write,
        cmpr_local_3_V_c_din,
        cmpr_local_3_V_c_full_n,
        cmpr_local_3_V_c_write,
        cmpr_local_4_V_c_din,
        cmpr_local_4_V_c_full_n,
        cmpr_local_4_V_c_write,
        cmpr_local_5_V_c_din,
        cmpr_local_5_V_c_full_n,
        cmpr_local_5_V_c_write,
        cmpr_local_6_V_c_din,
        cmpr_local_6_V_c_full_n,
        cmpr_local_6_V_c_write,
        cmpr_local_7_V_c_din,
        cmpr_local_7_V_c_full_n,
        cmpr_local_7_V_c_write,
        cmpr_local_8_V_c_din,
        cmpr_local_8_V_c_full_n,
        cmpr_local_8_V_c_write,
        cmpr_local_9_V_c_din,
        cmpr_local_9_V_c_full_n,
        cmpr_local_9_V_c_write,
        cmpr_local_10_V_c_din,
        cmpr_local_10_V_c_full_n,
        cmpr_local_10_V_c_write,
        cmpr_local_11_V_c_din,
        cmpr_local_11_V_c_full_n,
        cmpr_local_11_V_c_write,
        cmpr_local_12_V_c_din,
        cmpr_local_12_V_c_full_n,
        cmpr_local_12_V_c_write,
        cmpr_local_13_V_c_din,
        cmpr_local_13_V_c_full_n,
        cmpr_local_13_V_c_write,
        cmpr_local_14_V_c_din,
        cmpr_local_14_V_c_full_n,
        cmpr_local_14_V_c_write,
        cmpr_local_15_V_c_din,
        cmpr_local_15_V_c_full_n,
        cmpr_local_15_V_c_write,
        cmprpop_local_0_V_c_din,
        cmprpop_local_0_V_c_full_n,
        cmprpop_local_0_V_c_write,
        cmprpop_local_1_V_c_din,
        cmprpop_local_1_V_c_full_n,
        cmprpop_local_1_V_c_write,
        cmprpop_local_2_V_c_din,
        cmprpop_local_2_V_c_full_n,
        cmprpop_local_2_V_c_write,
        cmprpop_local_3_V_c_din,
        cmprpop_local_3_V_c_full_n,
        cmprpop_local_3_V_c_write,
        cmprpop_local_4_V_c_din,
        cmprpop_local_4_V_c_full_n,
        cmprpop_local_4_V_c_write,
        cmprpop_local_5_V_c_din,
        cmprpop_local_5_V_c_full_n,
        cmprpop_local_5_V_c_write,
        cmprpop_local_6_V_c_din,
        cmprpop_local_6_V_c_full_n,
        cmprpop_local_6_V_c_write,
        cmprpop_local_7_V_c_din,
        cmprpop_local_7_V_c_full_n,
        cmprpop_local_7_V_c_write,
        cmprpop_local_8_V_c_din,
        cmprpop_local_8_V_c_full_n,
        cmprpop_local_8_V_c_write,
        cmprpop_local_9_V_c_din,
        cmprpop_local_9_V_c_full_n,
        cmprpop_local_9_V_c_write,
        cmprpop_local_10_V_c_din,
        cmprpop_local_10_V_c_full_n,
        cmprpop_local_10_V_c_write,
        cmprpop_local_11_V_c_din,
        cmprpop_local_11_V_c_full_n,
        cmprpop_local_11_V_c_write,
        cmprpop_local_12_V_c_din,
        cmprpop_local_12_V_c_full_n,
        cmprpop_local_12_V_c_write,
        cmprpop_local_13_V_c_din,
        cmprpop_local_13_V_c_full_n,
        cmprpop_local_13_V_c_write,
        cmprpop_local_14_V_c_din,
        cmprpop_local_14_V_c_full_n,
        cmprpop_local_14_V_c_write,
        cmprpop_local_15_V_c_din,
        cmprpop_local_15_V_c_full_n,
        cmprpop_local_15_V_c_write,
        cmpr_chunk_num_0_i_c_din,
        cmpr_chunk_num_0_i_c_full_n,
        cmpr_chunk_num_0_i_c_write,
        output_V_offset,
        output_V_offset_out_din,
        output_V_offset_out_full_n,
        output_V_offset_out_write,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_pp0_stage0 = 10'd256;
parameter    ap_ST_fsm_state20 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_input_V_AWVALID;
input   m_axi_input_V_AWREADY;
output  [63:0] m_axi_input_V_AWADDR;
output  [0:0] m_axi_input_V_AWID;
output  [31:0] m_axi_input_V_AWLEN;
output  [2:0] m_axi_input_V_AWSIZE;
output  [1:0] m_axi_input_V_AWBURST;
output  [1:0] m_axi_input_V_AWLOCK;
output  [3:0] m_axi_input_V_AWCACHE;
output  [2:0] m_axi_input_V_AWPROT;
output  [3:0] m_axi_input_V_AWQOS;
output  [3:0] m_axi_input_V_AWREGION;
output  [0:0] m_axi_input_V_AWUSER;
output   m_axi_input_V_WVALID;
input   m_axi_input_V_WREADY;
output  [511:0] m_axi_input_V_WDATA;
output  [63:0] m_axi_input_V_WSTRB;
output   m_axi_input_V_WLAST;
output  [0:0] m_axi_input_V_WID;
output  [0:0] m_axi_input_V_WUSER;
output   m_axi_input_V_ARVALID;
input   m_axi_input_V_ARREADY;
output  [63:0] m_axi_input_V_ARADDR;
output  [0:0] m_axi_input_V_ARID;
output  [31:0] m_axi_input_V_ARLEN;
output  [2:0] m_axi_input_V_ARSIZE;
output  [1:0] m_axi_input_V_ARBURST;
output  [1:0] m_axi_input_V_ARLOCK;
output  [3:0] m_axi_input_V_ARCACHE;
output  [2:0] m_axi_input_V_ARPROT;
output  [3:0] m_axi_input_V_ARQOS;
output  [3:0] m_axi_input_V_ARREGION;
output  [0:0] m_axi_input_V_ARUSER;
input   m_axi_input_V_RVALID;
output   m_axi_input_V_RREADY;
input  [511:0] m_axi_input_V_RDATA;
input   m_axi_input_V_RLAST;
input  [0:0] m_axi_input_V_RID;
input  [0:0] m_axi_input_V_RUSER;
input  [1:0] m_axi_input_V_RRESP;
input   m_axi_input_V_BVALID;
output   m_axi_input_V_BREADY;
input  [1:0] m_axi_input_V_BRESP;
input  [0:0] m_axi_input_V_BID;
input  [0:0] m_axi_input_V_BUSER;
input  [57:0] input_V_offset;
input  [6:0] data_num_0_i;
input  [1023:0] p_read;
input  [1023:0] p_read1;
input  [1023:0] p_read2;
input  [1023:0] p_read3;
input  [1023:0] p_read4;
input  [1023:0] p_read5;
input  [1023:0] p_read6;
input  [1023:0] p_read7;
input  [1023:0] p_read8;
input  [1023:0] p_read9;
input  [1023:0] p_read10;
input  [1023:0] p_read11;
input  [1023:0] p_read12;
input  [1023:0] p_read13;
input  [1023:0] p_read14;
input  [1023:0] p_read15;
input  [10:0] p_read16;
input  [10:0] p_read17;
input  [10:0] p_read18;
input  [10:0] p_read19;
input  [10:0] p_read20;
input  [10:0] p_read21;
input  [10:0] p_read22;
input  [10:0] p_read23;
input  [10:0] p_read24;
input  [10:0] p_read25;
input  [10:0] p_read26;
input  [10:0] p_read27;
input  [10:0] p_read28;
input  [10:0] p_read29;
input  [10:0] p_read30;
input  [9:0] p_read31;
input  [1:0] cmpr_chunk_num_0_i;
output  [5:0] data_num_0_i_c_din;
input   data_num_0_i_c_full_n;
output   data_num_0_i_c_write;
output  [1023:0] cmpr_local_0_V_c_din;
input   cmpr_local_0_V_c_full_n;
output   cmpr_local_0_V_c_write;
output  [1023:0] cmpr_local_1_V_c_din;
input   cmpr_local_1_V_c_full_n;
output   cmpr_local_1_V_c_write;
output  [1023:0] cmpr_local_2_V_c_din;
input   cmpr_local_2_V_c_full_n;
output   cmpr_local_2_V_c_write;
output  [1023:0] cmpr_local_3_V_c_din;
input   cmpr_local_3_V_c_full_n;
output   cmpr_local_3_V_c_write;
output  [1023:0] cmpr_local_4_V_c_din;
input   cmpr_local_4_V_c_full_n;
output   cmpr_local_4_V_c_write;
output  [1023:0] cmpr_local_5_V_c_din;
input   cmpr_local_5_V_c_full_n;
output   cmpr_local_5_V_c_write;
output  [1023:0] cmpr_local_6_V_c_din;
input   cmpr_local_6_V_c_full_n;
output   cmpr_local_6_V_c_write;
output  [1023:0] cmpr_local_7_V_c_din;
input   cmpr_local_7_V_c_full_n;
output   cmpr_local_7_V_c_write;
output  [1023:0] cmpr_local_8_V_c_din;
input   cmpr_local_8_V_c_full_n;
output   cmpr_local_8_V_c_write;
output  [1023:0] cmpr_local_9_V_c_din;
input   cmpr_local_9_V_c_full_n;
output   cmpr_local_9_V_c_write;
output  [1023:0] cmpr_local_10_V_c_din;
input   cmpr_local_10_V_c_full_n;
output   cmpr_local_10_V_c_write;
output  [1023:0] cmpr_local_11_V_c_din;
input   cmpr_local_11_V_c_full_n;
output   cmpr_local_11_V_c_write;
output  [1023:0] cmpr_local_12_V_c_din;
input   cmpr_local_12_V_c_full_n;
output   cmpr_local_12_V_c_write;
output  [1023:0] cmpr_local_13_V_c_din;
input   cmpr_local_13_V_c_full_n;
output   cmpr_local_13_V_c_write;
output  [1023:0] cmpr_local_14_V_c_din;
input   cmpr_local_14_V_c_full_n;
output   cmpr_local_14_V_c_write;
output  [1023:0] cmpr_local_15_V_c_din;
input   cmpr_local_15_V_c_full_n;
output   cmpr_local_15_V_c_write;
output  [10:0] cmprpop_local_0_V_c_din;
input   cmprpop_local_0_V_c_full_n;
output   cmprpop_local_0_V_c_write;
output  [10:0] cmprpop_local_1_V_c_din;
input   cmprpop_local_1_V_c_full_n;
output   cmprpop_local_1_V_c_write;
output  [10:0] cmprpop_local_2_V_c_din;
input   cmprpop_local_2_V_c_full_n;
output   cmprpop_local_2_V_c_write;
output  [10:0] cmprpop_local_3_V_c_din;
input   cmprpop_local_3_V_c_full_n;
output   cmprpop_local_3_V_c_write;
output  [10:0] cmprpop_local_4_V_c_din;
input   cmprpop_local_4_V_c_full_n;
output   cmprpop_local_4_V_c_write;
output  [10:0] cmprpop_local_5_V_c_din;
input   cmprpop_local_5_V_c_full_n;
output   cmprpop_local_5_V_c_write;
output  [10:0] cmprpop_local_6_V_c_din;
input   cmprpop_local_6_V_c_full_n;
output   cmprpop_local_6_V_c_write;
output  [10:0] cmprpop_local_7_V_c_din;
input   cmprpop_local_7_V_c_full_n;
output   cmprpop_local_7_V_c_write;
output  [10:0] cmprpop_local_8_V_c_din;
input   cmprpop_local_8_V_c_full_n;
output   cmprpop_local_8_V_c_write;
output  [10:0] cmprpop_local_9_V_c_din;
input   cmprpop_local_9_V_c_full_n;
output   cmprpop_local_9_V_c_write;
output  [10:0] cmprpop_local_10_V_c_din;
input   cmprpop_local_10_V_c_full_n;
output   cmprpop_local_10_V_c_write;
output  [10:0] cmprpop_local_11_V_c_din;
input   cmprpop_local_11_V_c_full_n;
output   cmprpop_local_11_V_c_write;
output  [10:0] cmprpop_local_12_V_c_din;
input   cmprpop_local_12_V_c_full_n;
output   cmprpop_local_12_V_c_write;
output  [10:0] cmprpop_local_13_V_c_din;
input   cmprpop_local_13_V_c_full_n;
output   cmprpop_local_13_V_c_write;
output  [10:0] cmprpop_local_14_V_c_din;
input   cmprpop_local_14_V_c_full_n;
output   cmprpop_local_14_V_c_write;
output  [9:0] cmprpop_local_15_V_c_din;
input   cmprpop_local_15_V_c_full_n;
output   cmprpop_local_15_V_c_write;
output  [1:0] cmpr_chunk_num_0_i_c_din;
input   cmpr_chunk_num_0_i_c_full_n;
output   cmpr_chunk_num_0_i_c_write;
input  [57:0] output_V_offset;
output  [57:0] output_V_offset_out_din;
input   output_V_offset_out_full_n;
output   output_V_offset_out_write;
output  [1023:0] ap_return_0;
output  [1023:0] ap_return_1;
output  [1023:0] ap_return_2;
output  [1023:0] ap_return_3;
output  [10:0] ap_return_4;
output  [10:0] ap_return_5;
output  [10:0] ap_return_6;
output  [10:0] ap_return_7;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_input_V_ARVALID;
reg m_axi_input_V_RREADY;
reg data_num_0_i_c_write;
reg cmpr_local_0_V_c_write;
reg cmpr_local_1_V_c_write;
reg cmpr_local_2_V_c_write;
reg cmpr_local_3_V_c_write;
reg cmpr_local_4_V_c_write;
reg cmpr_local_5_V_c_write;
reg cmpr_local_6_V_c_write;
reg cmpr_local_7_V_c_write;
reg cmpr_local_8_V_c_write;
reg cmpr_local_9_V_c_write;
reg cmpr_local_10_V_c_write;
reg cmpr_local_11_V_c_write;
reg cmpr_local_12_V_c_write;
reg cmpr_local_13_V_c_write;
reg cmpr_local_14_V_c_write;
reg cmpr_local_15_V_c_write;
reg cmprpop_local_0_V_c_write;
reg cmprpop_local_1_V_c_write;
reg cmprpop_local_2_V_c_write;
reg cmprpop_local_3_V_c_write;
reg cmprpop_local_4_V_c_write;
reg cmprpop_local_5_V_c_write;
reg cmprpop_local_6_V_c_write;
reg cmprpop_local_7_V_c_write;
reg cmprpop_local_8_V_c_write;
reg cmprpop_local_9_V_c_write;
reg cmprpop_local_10_V_c_write;
reg cmprpop_local_11_V_c_write;
reg cmprpop_local_12_V_c_write;
reg cmprpop_local_13_V_c_write;
reg cmprpop_local_14_V_c_write;
reg cmprpop_local_15_V_c_write;
reg cmpr_chunk_num_0_i_c_write;
reg output_V_offset_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    input_V_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    input_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln27_reg_1355;
reg    data_num_0_i_c_blk_n;
reg    cmpr_local_0_V_c_blk_n;
reg    cmpr_local_1_V_c_blk_n;
reg    cmpr_local_2_V_c_blk_n;
reg    cmpr_local_3_V_c_blk_n;
reg    cmpr_local_4_V_c_blk_n;
reg    cmpr_local_5_V_c_blk_n;
reg    cmpr_local_6_V_c_blk_n;
reg    cmpr_local_7_V_c_blk_n;
reg    cmpr_local_8_V_c_blk_n;
reg    cmpr_local_9_V_c_blk_n;
reg    cmpr_local_10_V_c_blk_n;
reg    cmpr_local_11_V_c_blk_n;
reg    cmpr_local_12_V_c_blk_n;
reg    cmpr_local_13_V_c_blk_n;
reg    cmpr_local_14_V_c_blk_n;
reg    cmpr_local_15_V_c_blk_n;
reg    cmprpop_local_0_V_c_blk_n;
reg    cmprpop_local_1_V_c_blk_n;
reg    cmprpop_local_2_V_c_blk_n;
reg    cmprpop_local_3_V_c_blk_n;
reg    cmprpop_local_4_V_c_blk_n;
reg    cmprpop_local_5_V_c_blk_n;
reg    cmprpop_local_6_V_c_blk_n;
reg    cmprpop_local_7_V_c_blk_n;
reg    cmprpop_local_8_V_c_blk_n;
reg    cmprpop_local_9_V_c_blk_n;
reg    cmprpop_local_10_V_c_blk_n;
reg    cmprpop_local_11_V_c_blk_n;
reg    cmprpop_local_12_V_c_blk_n;
reg    cmprpop_local_13_V_c_blk_n;
reg    cmprpop_local_14_V_c_blk_n;
reg    cmprpop_local_15_V_c_blk_n;
reg    cmpr_chunk_num_0_i_c_blk_n;
reg    output_V_offset_out_blk_n;
reg   [3:0] data_part_num_0_i_i_i_i_i_i_reg_763;
reg   [3:0] data_part_num_0_i_i_i_i_i_i_reg_763_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state14_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state18_pp0_stage0_iter9;
wire    ap_block_state19_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [1023:0] ref_local_2_V3_016_i_i_i_reg_775;
reg   [0:0] write_flag9_0_i_i_i_reg_787;
reg   [0:0] write_flag6_0_i_i_i_reg_798;
reg   [1023:0] ref_local_3_V4_015_i_i_i_reg_809;
reg   [0:0] write_flag12_0_i_i_i_reg_821;
reg   [1023:0] ref_local_1_V2_014_i_i_i_reg_832;
reg   [10:0] refpop_local_0_V5_013_i_i_i_reg_844;
reg   [0:0] write_flag15_0_i_i_i_reg_856;
reg   [0:0] write_flag3_0_i_i_i_reg_867;
reg   [10:0] refpop_local_1_V6_012_i_i_i_reg_878;
reg   [0:0] write_flag18_0_i_i_i_reg_890;
reg   [1023:0] ref_local_0_V1_011_i_i_i_reg_901;
reg   [10:0] refpop_local_2_V7_010_i_i_i_reg_913;
reg   [0:0] write_flag21_0_i_i_i_reg_925;
reg   [0:0] write_flag_0_i_i_i_reg_936;
reg   [10:0] refpop_local_3_V8_09_i_i_i_reg_947;
wire   [58:0] add_ln219_fu_983_p2;
reg   [58:0] add_ln219_reg_1344;
reg    ap_block_state1;
wire   [0:0] icmp_ln27_fu_999_p2;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter1_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter2_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter3_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter4_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter5_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter6_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter7_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter8_reg;
reg   [0:0] icmp_ln27_reg_1355_pp0_iter9_reg;
wire   [3:0] data_part_num_fu_1005_p2;
reg   [3:0] data_part_num_reg_1359;
reg    ap_enable_reg_pp0_iter0;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter2_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter3_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter4_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter5_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter6_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter7_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter8_reg;
reg   [1:0] trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg;
reg   [511:0] temp_input_V_reg_1376;
wire   [0:0] write_flag_1_i_i_i_fu_1021_p6;
wire   [0:0] write_flag21_1_i_i_i_fu_1035_p6;
wire   [0:0] write_flag18_1_i_i_i_fu_1049_p6;
wire   [0:0] write_flag3_1_i_i_i_fu_1063_p6;
wire   [0:0] write_flag15_1_i_i_i_fu_1077_p6;
wire   [0:0] write_flag12_1_i_i_i_fu_1091_p6;
wire   [0:0] write_flag6_1_i_i_i_fu_1105_p6;
wire   [0:0] write_flag9_1_i_i_i_fu_1119_p6;
wire   [511:0] trunc_ln364_fu_1184_p1;
reg   [511:0] trunc_ln364_reg_1421;
wire   [1023:0] ref_local_0_V1_1_i_i_i_fu_1188_p6;
reg   [1023:0] ref_local_0_V1_1_i_i_i_reg_1426;
reg    ap_enable_reg_pp0_iter2;
wire   [1023:0] ref_local_1_V2_1_i_i_i_fu_1201_p6;
reg   [1023:0] ref_local_1_V2_1_i_i_i_reg_1431;
wire   [1023:0] ref_local_3_V4_1_i_i_i_fu_1214_p6;
reg   [1023:0] ref_local_3_V4_1_i_i_i_reg_1436;
wire   [1023:0] ref_local_2_V3_1_i_i_i_fu_1227_p6;
reg   [1023:0] ref_local_2_V3_1_i_i_i_reg_1441;
wire   [10:0] refpop_local_3_V8_1_i_i_i_fu_1244_p6;
reg    ap_enable_reg_pp0_iter10;
wire   [10:0] refpop_local_2_V7_1_i_i_i_fu_1257_p6;
wire   [10:0] refpop_local_1_V6_1_i_i_i_fu_1270_p6;
wire   [10:0] refpop_local_0_V5_1_i_i_i_fu_1283_p6;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state10;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
wire   [9:0] grp_popcnt_fu_959_ap_return;
reg    grp_popcnt_fu_959_ap_ce;
wire    ap_block_state9_pp0_stage0_iter0_ignore_call15;
reg    ap_block_state10_pp0_stage0_iter1_ignore_call15;
wire    ap_block_state11_pp0_stage0_iter2_ignore_call15;
wire    ap_block_state12_pp0_stage0_iter3_ignore_call15;
wire    ap_block_state13_pp0_stage0_iter4_ignore_call15;
wire    ap_block_state14_pp0_stage0_iter5_ignore_call15;
wire    ap_block_state15_pp0_stage0_iter6_ignore_call15;
wire    ap_block_state16_pp0_stage0_iter7_ignore_call15;
wire    ap_block_state17_pp0_stage0_iter8_ignore_call15;
wire    ap_block_state18_pp0_stage0_iter9_ignore_call15;
wire    ap_block_state19_pp0_stage0_iter10_ignore_call15;
reg    ap_block_pp0_stage0_11001_ignoreCallOp305;
reg   [3:0] ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4;
reg   [1023:0] ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4;
reg   [1023:0] ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4;
reg   [1023:0] ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4;
reg   [1023:0] ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4;
wire   [63:0] zext_ln219_2_fu_989_p1;
wire   [6:0] shl_ln138_fu_969_p2;
wire   [58:0] zext_ln219_fu_975_p1;
wire   [58:0] zext_ln219_1_fu_979_p1;
wire   [1:0] write_flag_1_i_i_i_fu_1021_p5;
wire   [1:0] write_flag21_1_i_i_i_fu_1035_p5;
wire   [1:0] write_flag18_1_i_i_i_fu_1049_p5;
wire   [1:0] write_flag3_1_i_i_i_fu_1063_p5;
wire   [1:0] write_flag15_1_i_i_i_fu_1077_p5;
wire   [1:0] write_flag12_1_i_i_i_fu_1091_p5;
wire   [1:0] write_flag6_1_i_i_i_fu_1105_p5;
wire   [1:0] write_flag9_1_i_i_i_fu_1119_p5;
wire   [0:0] trunc_ln30_fu_1133_p1;
wire   [9:0] shl_ln_i_i_i_fu_1137_p3;
wire   [9:0] num_hi_fu_1145_p2;
wire   [10:0] zext_ln647_fu_1158_p1;
wire   [10:0] xor_ln647_fu_1162_p2;
wire   [1023:0] zext_ln647_1_fu_1168_p1;
wire   [1023:0] p_Result_s_fu_1151_p3;
wire   [1023:0] lshr_ln647_fu_1172_p2;
wire   [1023:0] p_Result_1_fu_1178_p2;
wire   [10:0] zext_ln35_fu_1240_p1;
wire    ap_CS_fsm_state20;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

tancalc_popcnt grp_popcnt_fu_959(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .x_V(trunc_ln364_reg_1421),
    .ap_return(grp_popcnt_fu_959_ap_return),
    .ap_ce(grp_popcnt_fu_959_ap_ce)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U120(
    .din0(1'd1),
    .din1(write_flag_0_i_i_i_reg_936),
    .din2(write_flag_0_i_i_i_reg_936),
    .din3(write_flag_0_i_i_i_reg_936),
    .din4(write_flag_1_i_i_i_fu_1021_p5),
    .dout(write_flag_1_i_i_i_fu_1021_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U121(
    .din0(write_flag21_0_i_i_i_reg_925),
    .din1(write_flag21_0_i_i_i_reg_925),
    .din2(write_flag21_0_i_i_i_reg_925),
    .din3(1'd1),
    .din4(write_flag21_1_i_i_i_fu_1035_p5),
    .dout(write_flag21_1_i_i_i_fu_1035_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U122(
    .din0(write_flag18_0_i_i_i_reg_890),
    .din1(write_flag18_0_i_i_i_reg_890),
    .din2(1'd1),
    .din3(write_flag18_0_i_i_i_reg_890),
    .din4(write_flag18_1_i_i_i_fu_1049_p5),
    .dout(write_flag18_1_i_i_i_fu_1049_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U123(
    .din0(write_flag3_0_i_i_i_reg_867),
    .din1(1'd1),
    .din2(write_flag3_0_i_i_i_reg_867),
    .din3(write_flag3_0_i_i_i_reg_867),
    .din4(write_flag3_1_i_i_i_fu_1063_p5),
    .dout(write_flag3_1_i_i_i_fu_1063_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U124(
    .din0(write_flag15_0_i_i_i_reg_856),
    .din1(1'd1),
    .din2(write_flag15_0_i_i_i_reg_856),
    .din3(write_flag15_0_i_i_i_reg_856),
    .din4(write_flag15_1_i_i_i_fu_1077_p5),
    .dout(write_flag15_1_i_i_i_fu_1077_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U125(
    .din0(1'd1),
    .din1(write_flag12_0_i_i_i_reg_821),
    .din2(write_flag12_0_i_i_i_reg_821),
    .din3(write_flag12_0_i_i_i_reg_821),
    .din4(write_flag12_1_i_i_i_fu_1091_p5),
    .dout(write_flag12_1_i_i_i_fu_1091_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U126(
    .din0(write_flag6_0_i_i_i_reg_798),
    .din1(write_flag6_0_i_i_i_reg_798),
    .din2(1'd1),
    .din3(write_flag6_0_i_i_i_reg_798),
    .din4(write_flag6_1_i_i_i_fu_1105_p5),
    .dout(write_flag6_1_i_i_i_fu_1105_p6)
);

tancalc_tancalc_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
tancalc_mux_42_1_1_1_U127(
    .din0(write_flag9_0_i_i_i_reg_787),
    .din1(write_flag9_0_i_i_i_reg_787),
    .din2(write_flag9_0_i_i_i_reg_787),
    .din3(1'd1),
    .din4(write_flag9_1_i_i_i_fu_1119_p5),
    .dout(write_flag9_1_i_i_i_fu_1119_p6)
);

tancalc_tancalc_mux_42_1024_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 1024 ),
    .din2_WIDTH( 1024 ),
    .din3_WIDTH( 1024 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1024 ))
tancalc_mux_42_1024_1_1_U128(
    .din0(p_Result_s_fu_1151_p3),
    .din1(ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4),
    .din2(ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4),
    .din3(ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4),
    .din4(trunc_ln29_1_i_i_i_reg_1364),
    .dout(ref_local_0_V1_1_i_i_i_fu_1188_p6)
);

tancalc_tancalc_mux_42_1024_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 1024 ),
    .din2_WIDTH( 1024 ),
    .din3_WIDTH( 1024 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1024 ))
tancalc_mux_42_1024_1_1_U129(
    .din0(ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4),
    .din1(p_Result_s_fu_1151_p3),
    .din2(ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4),
    .din3(ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4),
    .din4(trunc_ln29_1_i_i_i_reg_1364),
    .dout(ref_local_1_V2_1_i_i_i_fu_1201_p6)
);

tancalc_tancalc_mux_42_1024_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 1024 ),
    .din2_WIDTH( 1024 ),
    .din3_WIDTH( 1024 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1024 ))
tancalc_mux_42_1024_1_1_U130(
    .din0(ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4),
    .din1(ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4),
    .din2(ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4),
    .din3(p_Result_s_fu_1151_p3),
    .din4(trunc_ln29_1_i_i_i_reg_1364),
    .dout(ref_local_3_V4_1_i_i_i_fu_1214_p6)
);

tancalc_tancalc_mux_42_1024_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1024 ),
    .din1_WIDTH( 1024 ),
    .din2_WIDTH( 1024 ),
    .din3_WIDTH( 1024 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1024 ))
tancalc_mux_42_1024_1_1_U131(
    .din0(ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4),
    .din1(ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4),
    .din2(p_Result_s_fu_1151_p3),
    .din3(ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4),
    .din4(trunc_ln29_1_i_i_i_reg_1364),
    .dout(ref_local_2_V3_1_i_i_i_fu_1227_p6)
);

tancalc_tancalc_mux_42_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
tancalc_mux_42_11_1_1_U132(
    .din0(refpop_local_3_V8_09_i_i_i_reg_947),
    .din1(refpop_local_3_V8_09_i_i_i_reg_947),
    .din2(refpop_local_3_V8_09_i_i_i_reg_947),
    .din3(zext_ln35_fu_1240_p1),
    .din4(trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg),
    .dout(refpop_local_3_V8_1_i_i_i_fu_1244_p6)
);

tancalc_tancalc_mux_42_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
tancalc_mux_42_11_1_1_U133(
    .din0(refpop_local_2_V7_010_i_i_i_reg_913),
    .din1(refpop_local_2_V7_010_i_i_i_reg_913),
    .din2(zext_ln35_fu_1240_p1),
    .din3(refpop_local_2_V7_010_i_i_i_reg_913),
    .din4(trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg),
    .dout(refpop_local_2_V7_1_i_i_i_fu_1257_p6)
);

tancalc_tancalc_mux_42_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
tancalc_mux_42_11_1_1_U134(
    .din0(refpop_local_1_V6_012_i_i_i_reg_878),
    .din1(zext_ln35_fu_1240_p1),
    .din2(refpop_local_1_V6_012_i_i_i_reg_878),
    .din3(refpop_local_1_V6_012_i_i_i_reg_878),
    .din4(trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg),
    .dout(refpop_local_1_V6_1_i_i_i_fu_1270_p6)
);

tancalc_tancalc_mux_42_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 11 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 11 ))
tancalc_mux_42_11_1_1_U135(
    .din0(zext_ln35_fu_1240_p1),
    .din1(refpop_local_0_V5_013_i_i_i_reg_844),
    .din2(refpop_local_0_V5_013_i_i_i_reg_844),
    .din3(refpop_local_0_V5_013_i_i_i_reg_844),
    .din4(trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg),
    .dout(refpop_local_0_V5_1_i_i_i_fu_1283_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln27_fu_999_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state10)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_part_num_0_i_i_i_i_i_i_reg_763 <= data_part_num_reg_1359;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_part_num_0_i_i_i_i_i_i_reg_763 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag12_0_i_i_i_reg_821 <= write_flag12_1_i_i_i_fu_1091_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag12_0_i_i_i_reg_821 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag15_0_i_i_i_reg_856 <= write_flag15_1_i_i_i_fu_1077_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag15_0_i_i_i_reg_856 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag18_0_i_i_i_reg_890 <= write_flag18_1_i_i_i_fu_1049_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag18_0_i_i_i_reg_890 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag21_0_i_i_i_reg_925 <= write_flag21_1_i_i_i_fu_1035_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag21_0_i_i_i_reg_925 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag3_0_i_i_i_reg_867 <= write_flag3_1_i_i_i_fu_1063_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag3_0_i_i_i_reg_867 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag6_0_i_i_i_reg_798 <= write_flag6_1_i_i_i_fu_1105_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag6_0_i_i_i_reg_798 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag9_0_i_i_i_reg_787 <= write_flag9_1_i_i_i_fu_1119_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag9_0_i_i_i_reg_787 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag_0_i_i_i_reg_936 <= write_flag_1_i_i_i_fu_1021_p6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        write_flag_0_i_i_i_reg_936 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln219_reg_1344 <= add_ln219_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_part_num_0_i_i_i_i_i_i_reg_763_pp0_iter1_reg <= data_part_num_0_i_i_i_i_i_i_reg_763;
        icmp_ln27_reg_1355 <= icmp_ln27_fu_999_p2;
        icmp_ln27_reg_1355_pp0_iter1_reg <= icmp_ln27_reg_1355;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_part_num_reg_1359 <= data_part_num_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln27_reg_1355_pp0_iter2_reg <= icmp_ln27_reg_1355_pp0_iter1_reg;
        icmp_ln27_reg_1355_pp0_iter3_reg <= icmp_ln27_reg_1355_pp0_iter2_reg;
        icmp_ln27_reg_1355_pp0_iter4_reg <= icmp_ln27_reg_1355_pp0_iter3_reg;
        icmp_ln27_reg_1355_pp0_iter5_reg <= icmp_ln27_reg_1355_pp0_iter4_reg;
        icmp_ln27_reg_1355_pp0_iter6_reg <= icmp_ln27_reg_1355_pp0_iter5_reg;
        icmp_ln27_reg_1355_pp0_iter7_reg <= icmp_ln27_reg_1355_pp0_iter6_reg;
        icmp_ln27_reg_1355_pp0_iter8_reg <= icmp_ln27_reg_1355_pp0_iter7_reg;
        icmp_ln27_reg_1355_pp0_iter9_reg <= icmp_ln27_reg_1355_pp0_iter8_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter2_reg <= trunc_ln29_1_i_i_i_reg_1364;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter3_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter2_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter4_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter3_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter5_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter4_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter6_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter5_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter7_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter6_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter8_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter7_reg;
        trunc_ln29_1_i_i_i_reg_1364_pp0_iter9_reg <= trunc_ln29_1_i_i_i_reg_1364_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ref_local_0_V1_011_i_i_i_reg_901 <= ref_local_0_V1_1_i_i_i_reg_1426;
        ref_local_1_V2_014_i_i_i_reg_832 <= ref_local_1_V2_1_i_i_i_reg_1431;
        ref_local_2_V3_016_i_i_i_reg_775 <= ref_local_2_V3_1_i_i_i_reg_1441;
        ref_local_3_V4_015_i_i_i_reg_809 <= ref_local_3_V4_1_i_i_i_reg_1436;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ref_local_0_V1_1_i_i_i_reg_1426 <= ref_local_0_V1_1_i_i_i_fu_1188_p6;
        ref_local_1_V2_1_i_i_i_reg_1431 <= ref_local_1_V2_1_i_i_i_fu_1201_p6;
        ref_local_2_V3_1_i_i_i_reg_1441 <= ref_local_2_V3_1_i_i_i_fu_1227_p6;
        ref_local_3_V4_1_i_i_i_reg_1436 <= ref_local_3_V4_1_i_i_i_fu_1214_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        refpop_local_0_V5_013_i_i_i_reg_844 <= refpop_local_0_V5_1_i_i_i_fu_1283_p6;
        refpop_local_1_V6_012_i_i_i_reg_878 <= refpop_local_1_V6_1_i_i_i_fu_1270_p6;
        refpop_local_2_V7_010_i_i_i_reg_913 <= refpop_local_2_V7_1_i_i_i_fu_1257_p6;
        refpop_local_3_V8_09_i_i_i_reg_947 <= refpop_local_3_V8_1_i_i_i_fu_1244_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_input_V_reg_1376 <= m_axi_input_V_RDATA;
        trunc_ln29_1_i_i_i_reg_1364 <= {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_reg_1355_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln364_reg_1421 <= trunc_ln364_fu_1184_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_condition_pp0_exit_iter1_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4 = data_part_num_reg_1359;
    end else begin
        ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4 = data_part_num_0_i_i_i_i_i_i_reg_763;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4 = ref_local_0_V1_1_i_i_i_reg_1426;
    end else begin
        ap_phi_mux_ref_local_0_V1_011_i_i_i_phi_fu_905_p4 = ref_local_0_V1_011_i_i_i_reg_901;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4 = ref_local_1_V2_1_i_i_i_reg_1431;
    end else begin
        ap_phi_mux_ref_local_1_V2_014_i_i_i_phi_fu_836_p4 = ref_local_1_V2_014_i_i_i_reg_832;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4 = ref_local_2_V3_1_i_i_i_reg_1441;
    end else begin
        ap_phi_mux_ref_local_2_V3_016_i_i_i_phi_fu_779_p4 = ref_local_2_V3_016_i_i_i_reg_775;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4 = ref_local_3_V4_1_i_i_i_reg_1436;
    end else begin
        ap_phi_mux_ref_local_3_V4_015_i_i_i_phi_fu_813_p4 = ref_local_3_V4_015_i_i_i_reg_809;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_chunk_num_0_i_c_blk_n = cmpr_chunk_num_0_i_c_full_n;
    end else begin
        cmpr_chunk_num_0_i_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_chunk_num_0_i_c_write = 1'b1;
    end else begin
        cmpr_chunk_num_0_i_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_0_V_c_blk_n = cmpr_local_0_V_c_full_n;
    end else begin
        cmpr_local_0_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_0_V_c_write = 1'b1;
    end else begin
        cmpr_local_0_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_10_V_c_blk_n = cmpr_local_10_V_c_full_n;
    end else begin
        cmpr_local_10_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_10_V_c_write = 1'b1;
    end else begin
        cmpr_local_10_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_11_V_c_blk_n = cmpr_local_11_V_c_full_n;
    end else begin
        cmpr_local_11_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_11_V_c_write = 1'b1;
    end else begin
        cmpr_local_11_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_12_V_c_blk_n = cmpr_local_12_V_c_full_n;
    end else begin
        cmpr_local_12_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_12_V_c_write = 1'b1;
    end else begin
        cmpr_local_12_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_13_V_c_blk_n = cmpr_local_13_V_c_full_n;
    end else begin
        cmpr_local_13_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_13_V_c_write = 1'b1;
    end else begin
        cmpr_local_13_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_14_V_c_blk_n = cmpr_local_14_V_c_full_n;
    end else begin
        cmpr_local_14_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_14_V_c_write = 1'b1;
    end else begin
        cmpr_local_14_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_15_V_c_blk_n = cmpr_local_15_V_c_full_n;
    end else begin
        cmpr_local_15_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_15_V_c_write = 1'b1;
    end else begin
        cmpr_local_15_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_1_V_c_blk_n = cmpr_local_1_V_c_full_n;
    end else begin
        cmpr_local_1_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_1_V_c_write = 1'b1;
    end else begin
        cmpr_local_1_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_2_V_c_blk_n = cmpr_local_2_V_c_full_n;
    end else begin
        cmpr_local_2_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_2_V_c_write = 1'b1;
    end else begin
        cmpr_local_2_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_3_V_c_blk_n = cmpr_local_3_V_c_full_n;
    end else begin
        cmpr_local_3_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_3_V_c_write = 1'b1;
    end else begin
        cmpr_local_3_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_4_V_c_blk_n = cmpr_local_4_V_c_full_n;
    end else begin
        cmpr_local_4_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_4_V_c_write = 1'b1;
    end else begin
        cmpr_local_4_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_5_V_c_blk_n = cmpr_local_5_V_c_full_n;
    end else begin
        cmpr_local_5_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_5_V_c_write = 1'b1;
    end else begin
        cmpr_local_5_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_6_V_c_blk_n = cmpr_local_6_V_c_full_n;
    end else begin
        cmpr_local_6_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_6_V_c_write = 1'b1;
    end else begin
        cmpr_local_6_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_7_V_c_blk_n = cmpr_local_7_V_c_full_n;
    end else begin
        cmpr_local_7_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_7_V_c_write = 1'b1;
    end else begin
        cmpr_local_7_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_8_V_c_blk_n = cmpr_local_8_V_c_full_n;
    end else begin
        cmpr_local_8_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_8_V_c_write = 1'b1;
    end else begin
        cmpr_local_8_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_9_V_c_blk_n = cmpr_local_9_V_c_full_n;
    end else begin
        cmpr_local_9_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmpr_local_9_V_c_write = 1'b1;
    end else begin
        cmpr_local_9_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_0_V_c_blk_n = cmprpop_local_0_V_c_full_n;
    end else begin
        cmprpop_local_0_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_0_V_c_write = 1'b1;
    end else begin
        cmprpop_local_0_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_10_V_c_blk_n = cmprpop_local_10_V_c_full_n;
    end else begin
        cmprpop_local_10_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_10_V_c_write = 1'b1;
    end else begin
        cmprpop_local_10_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_11_V_c_blk_n = cmprpop_local_11_V_c_full_n;
    end else begin
        cmprpop_local_11_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_11_V_c_write = 1'b1;
    end else begin
        cmprpop_local_11_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_12_V_c_blk_n = cmprpop_local_12_V_c_full_n;
    end else begin
        cmprpop_local_12_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_12_V_c_write = 1'b1;
    end else begin
        cmprpop_local_12_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_13_V_c_blk_n = cmprpop_local_13_V_c_full_n;
    end else begin
        cmprpop_local_13_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_13_V_c_write = 1'b1;
    end else begin
        cmprpop_local_13_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_14_V_c_blk_n = cmprpop_local_14_V_c_full_n;
    end else begin
        cmprpop_local_14_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_14_V_c_write = 1'b1;
    end else begin
        cmprpop_local_14_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_15_V_c_blk_n = cmprpop_local_15_V_c_full_n;
    end else begin
        cmprpop_local_15_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_15_V_c_write = 1'b1;
    end else begin
        cmprpop_local_15_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_1_V_c_blk_n = cmprpop_local_1_V_c_full_n;
    end else begin
        cmprpop_local_1_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_1_V_c_write = 1'b1;
    end else begin
        cmprpop_local_1_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_2_V_c_blk_n = cmprpop_local_2_V_c_full_n;
    end else begin
        cmprpop_local_2_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_2_V_c_write = 1'b1;
    end else begin
        cmprpop_local_2_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_3_V_c_blk_n = cmprpop_local_3_V_c_full_n;
    end else begin
        cmprpop_local_3_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_3_V_c_write = 1'b1;
    end else begin
        cmprpop_local_3_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_4_V_c_blk_n = cmprpop_local_4_V_c_full_n;
    end else begin
        cmprpop_local_4_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_4_V_c_write = 1'b1;
    end else begin
        cmprpop_local_4_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_5_V_c_blk_n = cmprpop_local_5_V_c_full_n;
    end else begin
        cmprpop_local_5_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_5_V_c_write = 1'b1;
    end else begin
        cmprpop_local_5_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_6_V_c_blk_n = cmprpop_local_6_V_c_full_n;
    end else begin
        cmprpop_local_6_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_6_V_c_write = 1'b1;
    end else begin
        cmprpop_local_6_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_7_V_c_blk_n = cmprpop_local_7_V_c_full_n;
    end else begin
        cmprpop_local_7_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_7_V_c_write = 1'b1;
    end else begin
        cmprpop_local_7_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_8_V_c_blk_n = cmprpop_local_8_V_c_full_n;
    end else begin
        cmprpop_local_8_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_8_V_c_write = 1'b1;
    end else begin
        cmprpop_local_8_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_9_V_c_blk_n = cmprpop_local_9_V_c_full_n;
    end else begin
        cmprpop_local_9_V_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        cmprpop_local_9_V_c_write = 1'b1;
    end else begin
        cmprpop_local_9_V_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_num_0_i_c_blk_n = data_num_0_i_c_full_n;
    end else begin
        data_num_0_i_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_num_0_i_c_write = 1'b1;
    end else begin
        data_num_0_i_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp305) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_popcnt_fu_959_ap_ce = 1'b1;
    end else begin
        grp_popcnt_fu_959_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_V_blk_n_AR = m_axi_input_V_ARREADY;
    end else begin
        input_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_V_blk_n_R = m_axi_input_V_RVALID;
    end else begin
        input_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((m_axi_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_input_V_ARVALID = 1'b1;
    end else begin
        m_axi_input_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_reg_1355 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_input_V_RREADY = 1'b1;
    end else begin
        m_axi_input_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_V_offset_out_blk_n = output_V_offset_out_full_n;
    end else begin
        output_V_offset_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        output_V_offset_out_write = 1'b1;
    end else begin
        output_V_offset_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((m_axi_input_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln219_fu_983_p2 = (zext_ln219_fu_975_p1 + zext_ln219_1_fu_979_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln27_reg_1355 == 1'd0) & (m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp305 = ((icmp_ln27_reg_1355 == 1'd0) & (m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln27_reg_1355 == 1'd0) & (m_axi_input_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((output_V_offset_out_full_n == 1'b0) | (cmpr_chunk_num_0_i_c_full_n == 1'b0) | (cmprpop_local_15_V_c_full_n == 1'b0) | (cmprpop_local_14_V_c_full_n == 1'b0) | (cmprpop_local_13_V_c_full_n == 1'b0) | (cmprpop_local_12_V_c_full_n == 1'b0) | (cmprpop_local_11_V_c_full_n == 1'b0) | (cmprpop_local_10_V_c_full_n == 1'b0) | (cmprpop_local_9_V_c_full_n == 1'b0) | (cmprpop_local_8_V_c_full_n == 1'b0) | (cmprpop_local_7_V_c_full_n == 1'b0) | (cmprpop_local_6_V_c_full_n == 1'b0) | (cmprpop_local_5_V_c_full_n == 1'b0) | (cmprpop_local_4_V_c_full_n == 1'b0) | (cmprpop_local_3_V_c_full_n == 1'b0) | (cmprpop_local_2_V_c_full_n == 1'b0) | (cmprpop_local_1_V_c_full_n == 1'b0) | (cmprpop_local_0_V_c_full_n == 1'b0) | (cmpr_local_15_V_c_full_n == 1'b0) | (cmpr_local_14_V_c_full_n == 1'b0) | (cmpr_local_13_V_c_full_n == 1'b0) | (cmpr_local_12_V_c_full_n == 1'b0) | (cmpr_local_11_V_c_full_n == 1'b0) | (cmpr_local_10_V_c_full_n == 1'b0) | (cmpr_local_9_V_c_full_n == 1'b0) | (cmpr_local_8_V_c_full_n == 1'b0) | (cmpr_local_7_V_c_full_n == 1'b0) | (cmpr_local_6_V_c_full_n == 1'b0) | (cmpr_local_5_V_c_full_n == 1'b0) | (ap_start == 1'b0) | (cmpr_local_4_V_c_full_n == 1'b0) | (cmpr_local_3_V_c_full_n == 1'b0) | (cmpr_local_2_V_c_full_n == 1'b0) | (cmpr_local_1_V_c_full_n == 1'b0) | (cmpr_local_0_V_c_full_n == 1'b0) | (data_num_0_i_c_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((icmp_ln27_reg_1355 == 1'd0) & (m_axi_input_V_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1_ignore_call15 = ((icmp_ln27_reg_1355 == 1'd0) & (m_axi_input_V_RVALID == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter9_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter10_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = ref_local_0_V1_011_i_i_i_reg_901;

assign ap_return_1 = ref_local_1_V2_014_i_i_i_reg_832;

assign ap_return_2 = ref_local_2_V3_016_i_i_i_reg_775;

assign ap_return_3 = ref_local_3_V4_015_i_i_i_reg_809;

assign ap_return_4 = refpop_local_0_V5_013_i_i_i_reg_844;

assign ap_return_5 = refpop_local_1_V6_012_i_i_i_reg_878;

assign ap_return_6 = refpop_local_2_V7_010_i_i_i_reg_913;

assign ap_return_7 = refpop_local_3_V8_09_i_i_i_reg_947;

assign cmpr_chunk_num_0_i_c_din = cmpr_chunk_num_0_i;

assign cmpr_local_0_V_c_din = p_read;

assign cmpr_local_10_V_c_din = p_read10;

assign cmpr_local_11_V_c_din = p_read11;

assign cmpr_local_12_V_c_din = p_read12;

assign cmpr_local_13_V_c_din = p_read13;

assign cmpr_local_14_V_c_din = p_read14;

assign cmpr_local_15_V_c_din = p_read15;

assign cmpr_local_1_V_c_din = p_read1;

assign cmpr_local_2_V_c_din = p_read2;

assign cmpr_local_3_V_c_din = p_read3;

assign cmpr_local_4_V_c_din = p_read4;

assign cmpr_local_5_V_c_din = p_read5;

assign cmpr_local_6_V_c_din = p_read6;

assign cmpr_local_7_V_c_din = p_read7;

assign cmpr_local_8_V_c_din = p_read8;

assign cmpr_local_9_V_c_din = p_read9;

assign cmprpop_local_0_V_c_din = p_read16;

assign cmprpop_local_10_V_c_din = p_read26;

assign cmprpop_local_11_V_c_din = p_read27;

assign cmprpop_local_12_V_c_din = p_read28;

assign cmprpop_local_13_V_c_din = p_read29;

assign cmprpop_local_14_V_c_din = p_read30;

assign cmprpop_local_15_V_c_din = p_read31;

assign cmprpop_local_1_V_c_din = p_read17;

assign cmprpop_local_2_V_c_din = p_read18;

assign cmprpop_local_3_V_c_din = p_read19;

assign cmprpop_local_4_V_c_din = p_read20;

assign cmprpop_local_5_V_c_din = p_read21;

assign cmprpop_local_6_V_c_din = p_read22;

assign cmprpop_local_7_V_c_din = p_read23;

assign cmprpop_local_8_V_c_din = p_read24;

assign cmprpop_local_9_V_c_din = p_read25;

assign data_num_0_i_c_din = data_num_0_i[5:0];

assign data_part_num_fu_1005_p2 = (ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4 + 4'd1);

assign icmp_ln27_fu_999_p2 = ((ap_phi_mux_data_part_num_0_i_i_i_i_i_i_phi_fu_767_p4 == 4'd8) ? 1'b1 : 1'b0);

assign lshr_ln647_fu_1172_p2 = 1024'd179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137215 >> zext_ln647_1_fu_1168_p1;

assign m_axi_input_V_ARADDR = zext_ln219_2_fu_989_p1;

assign m_axi_input_V_ARBURST = 2'd0;

assign m_axi_input_V_ARCACHE = 4'd0;

assign m_axi_input_V_ARID = 1'd0;

assign m_axi_input_V_ARLEN = 32'd8;

assign m_axi_input_V_ARLOCK = 2'd0;

assign m_axi_input_V_ARPROT = 3'd0;

assign m_axi_input_V_ARQOS = 4'd0;

assign m_axi_input_V_ARREGION = 4'd0;

assign m_axi_input_V_ARSIZE = 3'd0;

assign m_axi_input_V_ARUSER = 1'd0;

assign m_axi_input_V_AWADDR = 64'd0;

assign m_axi_input_V_AWBURST = 2'd0;

assign m_axi_input_V_AWCACHE = 4'd0;

assign m_axi_input_V_AWID = 1'd0;

assign m_axi_input_V_AWLEN = 32'd0;

assign m_axi_input_V_AWLOCK = 2'd0;

assign m_axi_input_V_AWPROT = 3'd0;

assign m_axi_input_V_AWQOS = 4'd0;

assign m_axi_input_V_AWREGION = 4'd0;

assign m_axi_input_V_AWSIZE = 3'd0;

assign m_axi_input_V_AWUSER = 1'd0;

assign m_axi_input_V_AWVALID = 1'b0;

assign m_axi_input_V_BREADY = 1'b0;

assign m_axi_input_V_WDATA = 512'd0;

assign m_axi_input_V_WID = 1'd0;

assign m_axi_input_V_WLAST = 1'b0;

assign m_axi_input_V_WSTRB = 64'd0;

assign m_axi_input_V_WUSER = 1'd0;

assign m_axi_input_V_WVALID = 1'b0;

assign num_hi_fu_1145_p2 = (shl_ln_i_i_i_fu_1137_p3 | 10'd511);

assign output_V_offset_out_din = output_V_offset;

assign p_Result_1_fu_1178_p2 = (p_Result_s_fu_1151_p3 & lshr_ln647_fu_1172_p2);

assign p_Result_s_fu_1151_p3 = {{512'd0}, {temp_input_V_reg_1376}};

assign shl_ln138_fu_969_p2 = data_num_0_i << 7'd1;

assign shl_ln_i_i_i_fu_1137_p3 = {{trunc_ln30_fu_1133_p1}, {9'd0}};

assign trunc_ln30_fu_1133_p1 = data_part_num_0_i_i_i_i_i_i_reg_763_pp0_iter1_reg[0:0];

assign trunc_ln364_fu_1184_p1 = p_Result_1_fu_1178_p2[511:0];

assign write_flag12_1_i_i_i_fu_1091_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag15_1_i_i_i_fu_1077_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag18_1_i_i_i_fu_1049_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag21_1_i_i_i_fu_1035_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag3_1_i_i_i_fu_1063_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag6_1_i_i_i_fu_1105_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag9_1_i_i_i_fu_1119_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign write_flag_1_i_i_i_fu_1021_p5 = {{data_part_num_0_i_i_i_i_i_i_reg_763[2:1]}};

assign xor_ln647_fu_1162_p2 = (zext_ln647_fu_1158_p1 ^ 11'd1023);

assign zext_ln219_1_fu_979_p1 = input_V_offset;

assign zext_ln219_2_fu_989_p1 = add_ln219_reg_1344;

assign zext_ln219_fu_975_p1 = shl_ln138_fu_969_p2;

assign zext_ln35_fu_1240_p1 = grp_popcnt_fu_959_ap_return;

assign zext_ln647_1_fu_1168_p1 = xor_ln647_fu_1162_p2;

assign zext_ln647_fu_1158_p1 = num_hi_fu_1145_p2;

endmodule //tancalc_data_read3710
